!function(t){var e={};function i(o){if(e[o])return e[o].exports;var s=e[o]={i:o,l:!1,exports:{}};return t[o].call(s.exports,s,s.exports,i),s.l=!0,s.exports}i.m=t,i.c=e,i.d=function(t,e,o){i.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:o})},i.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},i.t=function(t,e){if(1&e&&(t=i(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var o=Object.create(null);if(i.r(o),Object.defineProperty(o,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var s in t)i.d(o,s,function(e){return t[e]}.bind(null,s));return o},i.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return i.d(e,"a",e),e},i.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},i.p="",i(i.s=11)}([function(t){t.exports={CANVAS_WIDTH:480,CANVAS_HEIGHT:320,TILE_SIZE:32,SCALE:2,RAYCASTER:{DEBUG:!1}}},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const o=i(0),s=i(6),a=document.getElementById("canvas");a.width=o.CANVAS_WIDTH,a.height=o.CANVAS_HEIGHT,a.style.width=1!==o.SCALE?o.SCALE*o.CANVAS_WIDTH+"px":"auto",a.style.height=1!==o.SCALE?o.SCALE*o.CANVAS_HEIGHT+"px":"auto",e.context=a.getContext("2d");class l{static clear(){e.context.clearRect(0,0,a.width,a.height)}static update(){this.mousePosition={x:Math.floor((s.default.x-a.offsetLeft)/o.SCALE),y:Math.floor((s.default.y-a.offsetTop)/o.SCALE)}}}l.rows=Math.floor(a.height/o.TILE_SIZE),l.cols=Math.floor(a.width/o.TILE_SIZE),l.halfRows=Math.floor(a.height/2/o.TILE_SIZE),l.halfCols=Math.floor(a.width/2/o.TILE_SIZE),l.rowRemainder=a.height/2%o.TILE_SIZE,l.colRemainder=a.width/2%o.TILE_SIZE,l.center={x:o.CANVAS_WIDTH/2,y:o.CANVAS_HEIGHT/2},l.getCanvasDomElement=(()=>a),e.default=l},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const o=i(12),s=i(1),a=i(15),l=i(3),h=i(35);class n{constructor(){window.onfocus=(()=>{a.default.restart()}),o.default.load(()=>this.gameAssetLoaded(h.default.Audio))}static togglePause(){n.state===l.default.paused?n.state=l.default.playing:n.state=l.default.paused}start(){const t=setInterval(()=>{n.loaded&&(clearInterval(t),n.state=l.default.mainMenu)},250);this.gameLoop()}gameAssetLoaded(t){t===h.default.Audio&&(n.loadedPercentage+=1),1===n.loadedPercentage&&(n.loaded=!0)}gameLoop(){this.update(),!1===a.default.nextFrameRenderingShouldBeSkipped()&&this.render(),a.default.calculateFrameRate(),window.requestAnimationFrame(()=>this.gameLoop())}update(){s.default.update(),n.state.update()}render(){s.default.clear(),n.state.render(),a.default.drawFPS()}}n.loaded=!1,n.loadedPercentage=0,n.state=l.default.loading,e.default=n},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const o=i(16),s=i(17),a=i(18),l=i(34);class h{}h.loading=new o.default,h.mainMenu=new s.default,h.playing=new a.default,h.paused=new l.default,e.default=h},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const o=i(0),s=i(22),a=i(1),l=i(25),h=i(29);function n(t,i){return e.enemies.filter(e=>e.isOnScreen(t,i))}e.gameObjects=[],e.enemies=[],e.getEnemiesOnScreen=n;e.default=class{constructor(t,e){this.grid=t,this.player=e,this.loadMap(h)}update(){e.enemies.forEach((t,i)=>{t.update(this.player),!1===t.alive&&e.enemies.splice(i,1)})}draw(){this.drawGameObjects(),n(this.player.x,this.player.y).forEach(t=>t.draw(this.player))}drawGameObjects(){const t=this.player.deltas.dxLeft-a.default.colRemainder,i=this.player.deltas.dyTop-a.default.rowRemainder,s=this.player.row-a.default.halfRows,l=this.player.col-a.default.halfCols;let h;for(let n=s;n<s+a.default.rows+1;++n)for(let c=l-1;c<l+a.default.cols+1;++c)e.gameObjects[n]&&e.gameObjects[n][c]&&((h=e.gameObjects[n][c]).x=(c-l)*o.TILE_SIZE-t,h.y=(n-s)*o.TILE_SIZE-i,h.draw())}loadMap(t){for(let i=0;i<t.gameObjects.length;++i){e.gameObjects[i]=[];for(let o=0;o<t.gameObjects[i].length;++o)e.gameObjects[i][o]=l.default.createGameObject(i,o,t.gameObjects[i][o])}t.enemies.forEach(t=>e.enemies.push(new s.default(t.x,t.y,t.healthPercentage)))}}},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const o=i(13),s=i(7),a=i(14);class l{static async load(){this.SMG[0]=await a.load("./audio/smg_1.wav"),this.SMG[1]=await a.load("./audio/smg_2.wav"),this.SMG[2]=await a.load("./audio/smg_3.wav"),this.SMG[3]=await a.load("./audio/smg_4.wav"),this.SMG[4]=await a.load("./audio/smg_5.wav"),this.CRATE_HIT[0]=await a.load("./audio/crate_hit_1.wav"),this.ENEMY_HIT[0]=await a.load("./audio/enemy_hit_1.mp3"),this.ENEMY_HIT[1]=await a.load("./audio/enemy_hit_2.mp3"),this.ENEMY_HIT[2]=await a.load("./audio/enemy_hit_3.mp3"),this.ENEMY_HIT[3]=await a.load("./audio/enemy_hit_4.mp3"),this.ENEMY_HIT[4]=await a.load("./audio/enemy_hit_5.mp3"),this.ENEMY_DEATH[0]=await a.load("./audio/enemy_die_1.mp3")}static playSMG(){const t=s.default.createBufferSource();t.buffer=this.SMG[this.SMG_INDEX];const e=s.default.createGain();e.gain.value=.2*o.default.soundFxVolume,t.connect(e),e.connect(s.default.destination),t.start(),this.SMG_INDEX=++this.SMG_INDEX%this.SMG.length}static playEnemyHit(){if(!1===this.ENEMY_HIT_READY)return;const t=s.default.createBufferSource();t.buffer=this.ENEMY_HIT[this.ENEMY_HIT_INDEX];const e=s.default.createGain();e.gain.value=o.default.soundFxVolume,t.connect(e),e.connect(s.default.destination),t.start(),this.ENEMY_HIT_INDEX=++this.ENEMY_HIT_INDEX%this.ENEMY_HIT.length,this.ENEMY_HIT_READY=!1,setTimeout(()=>{this.ENEMY_HIT_READY=!0},500)}static playEnemyDeath(){const t=s.default.createBufferSource();t.buffer=this.ENEMY_DEATH[0];const e=s.default.createGain();e.gain.value=o.default.soundFxVolume,t.connect(e),e.connect(s.default.destination),t.start()}static playCrateHit(){const t=s.default.createBufferSource();t.buffer=this.CRATE_HIT[0];const e=s.default.createGain();e.gain.value=o.default.soundFxVolume,t.connect(e),e.connect(s.default.destination),t.start()}}l.SMG=[],l.SMG_INDEX=0,l.CRATE_HIT=[],l.ENEMY_HIT=[],l.ENEMY_HIT_INDEX=0,l.ENEMY_HIT_READY=!0,l.ENEMY_DEATH=[],e.default=l},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const o=i(1);class s{static init(t){this.hijackRightClick(),this.trackMouseOnCanvas(),this.listenForLeftClicks(t)}static hijackRightClick(){window.addEventListener("contextmenu",t=>{t.preventDefault()},!1)}static trackMouseOnCanvas(){o.default.getCanvasDomElement().addEventListener("mousemove",t=>{this.x=t.pageX,this.y=t.pageY},!1)}static listenForLeftClicks(t){const e=o.default.getCanvasDomElement();e.addEventListener("mousedown",e=>{t.setShooting(!0)},!1),e.addEventListener("mouseup",e=>{t.setShooting(!1)},!1)}}s.x=window.innerWidth/2+100,s.y=window.innerHeight/2+50,e.default=s},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const o=new AudioContext;e.default=o},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.KEYBOARD_KEYS={ENTER:13,ESC:27,w:87,a:65,s:83,d:68,p:80}},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});e.default=class{constructor(t,e){this.width=t,this.height=e,this.halfWidth=this.width/2,this.halfHeight=this.height/2}}},function(t,e,i){"use strict";var o;Object.defineProperty(e,"__esModule",{value:!0}),function(t){t[t.Empty=0]="Empty",t[t.BoxGray=1]="BoxGray",t[t.BoxGreen=2]="BoxGreen",t[t.BoxBlue=3]="BoxBlue"}(o||(o={})),e.isBox=function(t){return o[t].startsWith("Box")},e.default=o},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),(new(i(2).default)).start()},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const o=i(5);e.default=class{static async load(t){await o.default.load(),t()}}},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});class o{static get musicVolume(){return this._musicVolume}static set musicVolume(t){t>=0&&t<=1&&(this._musicVolume=t)}static get soundFxVolume(){return this._soundFxVolume}static set soundFxVolume(t){t>=0&&t<=1&&(this._soundFxVolume=t)}}o._musicVolume=.3,o._soundFxVolume=.15,e.default=o},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const o=i(7);e.load=function(t){return new Promise((e,i)=>{const s=new XMLHttpRequest;s.open("GET",t,!0),s.responseType="arraybuffer",s.onload=(()=>{o.default.decodeAudioData(s.response,t=>e(t))}),s.send()})}},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const o=i(0),s=i(1);let a,l,h=0;const n=.01667,c=[0,0,0,0,0,0,0,0,0,0,0];let d,r=!1;e.default=class{static nextFrameRenderingShouldBeSkipped(){return r}static restart(){a=null;for(let t=0;t<c.length;++t)c[t]=0}static calculateFrameRate(){if(a){const t=performance.now();(l=(t-a)/1e3)>n&&(h+=l-n),c.unshift(1/(l+h)),c.pop(),d=c.reduce((t,e)=>t+=e,0)/c.length,h>=n?(h-=n,r=!0):r=!1,a=t}else a=performance.now(),d=0}static drawFPS(){s.context.beginPath(),s.context.fillStyle="#FFC100",s.context.font="8px Monospace",s.context.fillText(`FPS: ${d&&d.toFixed(2)||"unknown"}`,10,o.CANVAS_HEIGHT-10),s.context.stroke()}}},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const o=i(0),s=i(2),a=i(1);e.default=class{update(){}render(){this.drawLoadingDialog()}drawLoadingDialog(){a.context.beginPath(),a.context.fillStyle="#FFC100",a.context.font="20px Monospace",a.context.fillText(`Loading: ${100*s.default.loadedPercentage}%`,o.CANVAS_WIDTH/2-36,o.CANVAS_HEIGHT/2-54),a.context.stroke()}}},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const o=i(0),s=i(2),a=i(3),l=i(1),h=i(8);e.default=class{constructor(){this.animationCounter=0,this.animationInterval=100,this.instructionsVisible=!0,document.addEventListener("keydown",t=>this.handleMenuSelection(t))}update(){this.animationCounter=(this.animationCounter+1)%this.animationInterval,this.animationCounter>=this.animationInterval/2?this.instructionsVisible=!1:this.instructionsVisible=!0}render(){this.drawMainMenu()}drawMainMenu(){l.context.beginPath(),l.context.fillStyle="#FFC100",l.context.font="12px Monospace",l.context.fillText("Retro 2D Top-Down Game Engine",o.CANVAS_WIDTH/2-106,o.CANVAS_HEIGHT/2-34),this.instructionsVisible&&(l.context.font="20px Monospace",l.context.fillText("Press ENTER to start",o.CANVAS_WIDTH/2-130,o.CANVAS_HEIGHT/2-10)),l.context.stroke()}handleMenuSelection(t){t.keyCode===h.KEYBOARD_KEYS.ENTER&&(s.default.state=a.default.playing,document.removeEventListener("keydown",t=>this.handleMenuSelection(t)))}}},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const o=i(2),s=i(3),a=i(19),l=i(6),h=i(20),n=i(21),c=i(4),d=i(30);e.default=class{constructor(){this.grid=new n.default,this.player=new d.default(128,64),this.map=new c.default(this.grid,this.player),window.onblur=(()=>{o.default.state=s.default.paused}),a.default.init(this.player),l.default.init(this.player)}update(){h.default.update(this.player),this.player.update(),this.map.update()}render(){this.map.draw(),this.player.draw()}}},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const o=i(2),s=i(8);e.default=class{static init(t){document.addEventListener("keydown",e=>{switch(e.keyCode){case s.KEYBOARD_KEYS.w:t.moving.up=!0;break;case s.KEYBOARD_KEYS.a:t.moving.left=!0;break;case s.KEYBOARD_KEYS.s:t.moving.down=!0;break;case s.KEYBOARD_KEYS.d:t.moving.right=!0;break;case s.KEYBOARD_KEYS.ESC:case s.KEYBOARD_KEYS.p:o.default.togglePause()}}),document.addEventListener("keyup",e=>{switch(e.keyCode){case s.KEYBOARD_KEYS.w:t.moving.up=!1;break;case s.KEYBOARD_KEYS.a:t.moving.left=!1;break;case s.KEYBOARD_KEYS.s:t.moving.down=!1;break;case s.KEYBOARD_KEYS.d:t.moving.right=!1}})}}},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const o=i(6);class s{static update(t){const e=navigator.getGamepads();e[0]&&(this.handleMovement(e[0],t),this.handleAiming(e[0]),this.handleButtons(e[0],t))}static handleMovement(t,e){const i=+t.axes[0].toFixed(2);i>0?e.moving.right=!0:i<0?e.moving.left=!0:(e.moving.left=!1,e.moving.right=!1);const o=+t.axes[1].toFixed(2);o>0?e.moving.down=!0:o<0?e.moving.up=!0:(e.moving.up=!1,e.moving.down=!1)}static handleAiming(t){const e=t.axes[2],i=t.axes[3];0!=+e.toFixed(2)&&(o.default.x+=e*this.aimModifier),0!=+i.toFixed(2)&&(o.default.y+=i*this.aimModifier)}static handleButtons(t,e){t.buttons[5].pressed?e.setShooting(!0):e.setShooting(!1)}}s.aimModifier=10,e.default=s},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const o=i(0);e.default=class{constructor(){this.rows=o.CANVAS_HEIGHT/o.TILE_SIZE,this.cols=o.CANVAS_WIDTH/o.TILE_SIZE}}},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const o=i(0),s=i(1),a=i(5),l=i(4),h=i(9),n=i(23),c=i(24);e.default=class extends c.default{constructor(t,e,i){super(t,e,new h.default(16,16),1,i),this.updateMapPosition()}update(t){this.adjustCollisionWithGameObjects(),this.moveTowardsPlayer(t),this.move(),this.updateTileDeltas()}draw(t){this.drawCollisionBox(t)}takeDamage(t){a.default.playEnemyHit(),this.health-=t,this.health<=0?this.die():a.default.playEnemyHit()}die(){a.default.playEnemyDeath(),this.alive=!1}adjustCollisionWithGameObjects(){let t;if(l.gameObjects[this.row]){if(this.moving.left){(t=l.gameObjects[this.row][this.col-1])&&this.x-this.collisionBox.halfWidth<=t.mapX+t.width&&(this.x=t.mapX+t.width+this.collisionBox.halfWidth);const e=Math.floor((this.y+this.collisionBox.halfHeight-1)/o.TILE_SIZE);e!==this.row&&(t=l.gameObjects[e][this.col-1])&&this.x-this.collisionBox.halfWidth<=t.mapX+t.width&&(this.moving.down&&this.deltas.dyTop<=this.deltas.dxRight||(this.x=t.mapX+t.width+this.collisionBox.halfWidth));const i=Math.floor((this.y-this.collisionBox.halfHeight)/o.TILE_SIZE);i!==this.row&&(t=l.gameObjects[i][this.col-1])&&this.x-this.collisionBox.halfWidth<=t.mapX+t.width&&(this.moving.up&&this.deltas.dyBottom<=this.deltas.dxRight||(this.x=t.mapX+t.width+this.collisionBox.halfWidth))}if(this.moving.right){(t=l.gameObjects[this.row][this.col+1])&&this.x+this.collisionBox.halfWidth>=t.mapX&&(this.x=t.mapX-this.collisionBox.halfWidth);const e=Math.floor((this.y+this.collisionBox.halfHeight-1)/o.TILE_SIZE);e!==this.row&&(t=l.gameObjects[e][this.col+1])&&this.x+this.collisionBox.halfWidth>=t.mapX&&(this.moving.down&&this.deltas.dyTop<=this.deltas.dxLeft||(this.x=t.mapX-this.collisionBox.halfWidth));const i=Math.floor((this.y-this.collisionBox.halfHeight)/o.TILE_SIZE);i!==this.row&&(t=l.gameObjects[i][this.col+1])&&this.x+this.collisionBox.halfWidth>=t.mapX&&(this.moving.up&&this.deltas.dyBottom<=this.deltas.dxLeft||(this.x=t.mapX-this.collisionBox.halfWidth))}}if(l.gameObjects[this.row-1]&&this.moving.up){(t=l.gameObjects[this.row-1][this.col])&&this.y-this.collisionBox.halfHeight<=t.mapY+t.height&&(this.y=t.mapY+t.height+this.collisionBox.halfHeight);const e=Math.floor((this.x+this.collisionBox.halfWidth-1)/o.TILE_SIZE);e!==this.col&&(t=l.gameObjects[this.row-1][e])&&this.y-this.collisionBox.halfHeight<=t.mapY+t.height&&(this.moving.right&&this.deltas.dyBottom>this.deltas.dxLeft||(this.y=t.mapY+t.height+this.collisionBox.halfHeight));const i=Math.floor((this.x-this.collisionBox.halfWidth)/o.TILE_SIZE);i!==this.col&&(t=l.gameObjects[this.row-1][i])&&this.y-this.collisionBox.halfHeight<=t.mapY+t.height&&(this.moving.left&&this.deltas.dyBottom>this.deltas.dxRight||(this.y=t.mapY+t.height+this.collisionBox.halfHeight))}if(l.gameObjects[this.row+1]){this.moving.down&&(t=l.gameObjects[this.row+1][this.col])&&this.y+this.collisionBox.halfHeight>=t.mapY&&(this.y=t.mapY-this.collisionBox.halfHeight);const e=Math.floor((this.x+this.collisionBox.halfWidth-1)/o.TILE_SIZE);e!==this.col&&(t=l.gameObjects[this.row+1][e])&&this.y+this.collisionBox.halfHeight>=t.mapY&&(this.moving.right&&this.deltas.dyTop>this.deltas.dxLeft||(this.y=t.mapY-this.collisionBox.halfHeight));const i=Math.floor((this.x-this.collisionBox.halfWidth)/o.TILE_SIZE);i!==this.col&&(t=l.gameObjects[this.row+1][i])&&this.y+this.collisionBox.halfHeight>=t.mapY&&(this.moving.left&&this.deltas.dyTop>this.deltas.dxRight||(this.y=t.mapY-this.collisionBox.halfHeight))}}moveTowardsPlayer(t){n.pointToPointDistance({x:t.x,y:t.y},{x:this.x,y:this.y})>1&&this.moveTowards(t.x,t.y)}moveTowards(t,e){this.moving.left=!1,this.moving.right=!1,this.moving.up=!1,this.moving.down=!1,this.x<t?this.moving.right=!0:this.x>t&&(this.moving.left=!0),this.y<e?this.moving.down=!0:this.y>e&&(this.moving.up=!0)}move(){this.moving.left&&(this.moving.up||this.moving.down?this.x-=this.maxSpeedDiagonal:this.x-=this.maxSpeed),this.moving.right&&(this.moving.up||this.moving.down?this.x+=this.maxSpeedDiagonal:this.x+=this.maxSpeed),this.moving.up&&(this.moving.left||this.moving.right?this.y-=this.maxSpeedDiagonal:this.y-=this.maxSpeed),this.moving.down&&(this.moving.left||this.moving.right?this.y+=this.maxSpeedDiagonal:this.y+=this.maxSpeed),this.updateMapPosition()}updateMapPosition(){this.row=Math.floor(this.y/o.TILE_SIZE),this.col=Math.floor(this.x/o.TILE_SIZE)}updateTileDeltas(){this.deltas.dyTop=this.y%o.TILE_SIZE,this.deltas.dyBottom=o.TILE_SIZE-this.deltas.dyTop,this.deltas.dxLeft=this.x%o.TILE_SIZE,this.deltas.dxRight=o.TILE_SIZE-this.deltas.dxLeft}drawCollisionBox(t){s.context.strokeStyle=this.getHealthColor(),s.context.lineWidth=.5,s.context.beginPath(),s.context.moveTo(.5+s.default.center.x+(this.x-t.x)-this.collisionBox.halfWidth,.5+s.default.center.y+(this.y-t.y)-this.collisionBox.halfHeight),s.context.lineTo(-.5+s.default.center.x+(this.x-t.x)+this.collisionBox.halfWidth,.5+s.default.center.y+(this.y-t.y)-this.collisionBox.halfHeight),s.context.lineTo(-.5+s.default.center.x+(this.x-t.x)+this.collisionBox.halfWidth,-.5+s.default.center.y+(this.y-t.y)+this.collisionBox.halfHeight),s.context.lineTo(.5+s.default.center.x+(this.x-t.x)-this.collisionBox.halfWidth,-.5+s.default.center.y+(this.y-t.y)+this.collisionBox.halfHeight),s.context.lineTo(.5+s.default.center.x+(this.x-t.x)-this.collisionBox.halfWidth,.5+s.default.center.y+(this.y-t.y)-this.collisionBox.halfHeight),s.context.stroke()}}},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.pointToPointDistance=function(t,e){return Math.sqrt((e.x-t.x)*(e.x-t.x)+(e.y-t.y)*(e.y-t.y))}},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const o=i(0);e.default=class{constructor(t,e,i,o,s){this.x=t,this.y=e,this.collisionBox=i,this.maxSpeed=o,this.alive=!0,this.maxHealth=100,this.moving={left:!1,right:!1,up:!1,down:!1},this.deltas={dyTop:0,dyBottom:0,dxLeft:0,dxRight:0},this.initializeHealth(s),this.maxSpeedDiagonal=Math.sin(45)*this.maxSpeed}isOnScreen(t,e){return Math.abs(this.x-t)<o.CANVAS_WIDTH/2+o.TILE_SIZE&&Math.abs(this.y-e)<o.CANVAS_HEIGHT/2+o.TILE_SIZE}collidesWithPlayer(t,e,i){return this.x-this.collisionBox.halfWidth<t+i.halfWidth&&this.x+this.collisionBox.halfWidth>t-i.halfWidth&&this.y-this.collisionBox.halfHeight<e+i.halfHeight&&this.y+this.collisionBox.halfHeight>e-i.halfHeight}getHealthColor(){return this.health<=.1*this.maxHealth?"#FF5700":this.health<=.2*this.maxHealth?"#FF7B00":this.health<=.3*this.maxHealth?"#FF9E00":this.health<=.4*this.maxHealth?"#FFC100":this.health<=.5*this.maxHealth?"#FFE400":this.health<=.6*this.maxHealth?"#FFF600":this.health<=.7*this.maxHealth?"#E5FF00":this.health<=.8*this.maxHealth?"#D4FF00":this.health<=.9*this.maxHealth?"#B0FF00":this.health<this.maxHealth?"#8DFF00":this.health===this.maxHealth?"#6AFF00":void 0}initializeHealth(t){(t<0||t>1)&&(t=1),this.health=this.maxHealth*t}}},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const o=i(10),s=i(26);e.default=class{static createGameObject(t,e,i){return o.isBox(i)?s.default.createBox(t,e,i):null}}},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const o=i(0),s=i(27),a=i(10);e.default=class{static createBox(t,e,i){switch(i){case a.default.BoxGray:return new s.default(t,e,o.TILE_SIZE,o.TILE_SIZE,"#4B4B4B",!1);case a.default.BoxGreen:return new s.default(t,e,o.TILE_SIZE,o.TILE_SIZE,"#27531B");case a.default.BoxBlue:return new s.default(t,e,o.TILE_SIZE,o.TILE_SIZE,"#572F17");default:throw new Error("No such box!")}}}},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const o=i(0),s=i(1),a=i(5),l=i(28);e.default=class extends l.default{draw(){s.context.strokeStyle=this.color,s.context.lineWidth=1,s.context.beginPath(),s.context.moveTo(.5+this.x,.5+this.y),s.context.lineTo(-.5+this.x+o.TILE_SIZE,.5+this.y),s.context.lineTo(-.5+this.x+o.TILE_SIZE,-.5+this.y+o.TILE_SIZE),s.context.lineTo(.5+this.x,-.5+this.y+o.TILE_SIZE),s.context.lineTo(.5+this.x,.5+this.y),s.context.moveTo(.5+this.x,.5+this.y),s.context.lineTo(-.5+this.x+o.TILE_SIZE,-.5+this.y+o.TILE_SIZE),s.context.moveTo(-.5+this.x+o.TILE_SIZE,.5+this.y),s.context.lineTo(.5+this.x,-.5+this.y+o.TILE_SIZE),s.context.stroke()}takeDamage(t){a.default.playCrateHit()}}},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const o=i(0);e.default=class{constructor(t,e,i,s,a,l=!0){this.row=t,this.col=e,this.width=i,this.height=s,this.color=a,this.destructable=l,this.mapX=e*o.TILE_SIZE,this.mapY=t*o.TILE_SIZE}}},function(t){t.exports={gameObjects:[[1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0],[1,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,0,0,0,0,0,0,0,0],[1,0,3,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,0,0,0,0],[1,0,0,3,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,0,0],[1,0,0,0,0,0,0,0,0,0,1,0,2,3,0,2,0,0,0,0,0,1,0,0],[1,0,0,0,0,0,0,0,0,0,1,0,2,2,0,2,0,0,2,2,0,1,0,0],[1,0,0,0,0,3,3,0,1,1,1,0,0,0,0,1,0,0,2,3,0,1,1,1],[1,0,0,0,3,3,3,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1],[1,0,1,0,3,3,0,0,1,0,0,0,0,1,0,1,0,0,0,1,3,0,0,1],[1,0,0,0,0,0,0,0,2,0,0,0,0,0,0,1,0,0,0,3,2,0,0,1],[1,0,0,0,0,0,0,0,2,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1],[1,1,1,1,1,1,1,1,1,0,0,0,1,1,1,1,1,1,2,2,2,1,1,1],[0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0],[0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,3,3,3,0,0,0,1,0,0],[0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,3,3,3,0,1,1,1,0,0],[0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0],[0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0]],enemies:[{x:286,y:88,healthPercentage:1},{x:368,y:90,healthPercentage:.5}]}},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const o=i(0),s=i(1),a=i(31),l=i(9),h=i(4),n=i(32),c=i(33),d=i(5),r=i(2),u=i(3);e.default=class{constructor(t,e){this.x=t,this.y=e,this.alive=!0,this.rotation=0,this.moving={left:!1,right:!1,up:!1,down:!1},this.sightLineLength=10,this.deltas={dyTop:0,dyBottom:0,dxLeft:0,dxRight:0},this.collisionBox=new l.default(12,12),this.maxSpeed=3,this.maxSpeedDiagonal=Math.sin(45)*this.maxSpeed,this.shooting=!1,this.shootingCooldown=6,this.projectiles=[],this.updateMapPosition()}update(){this.move(),this.updateTileDeltas(),this.shoot(),this.projectiles.forEach((t,e)=>{t.update(this.x,this.y),!1===t.alive&&this.projectiles.splice(e,1)})}shoot(){if(this.shooting&&this.shootingCooldown<=0){const t=s.default.mousePosition.x-s.default.center.x,e=s.default.mousePosition.y-s.default.center.y;let i=t/(Math.abs(t)+Math.abs(e)),o=e/(Math.abs(t)+Math.abs(e));const a=.1*Math.random()-.05,l=.1*Math.random()-.05;i+=a,o+=l,this.projectiles.push(new c.default(this.x,this.y,i,o)),this.shootingCooldown=6,d.default.playSMG()}else--this.shootingCooldown}setShooting(t){this.shooting=t}draw(){const t=this.calculateTheta();this.drawPlayer(t),this.drawPlayerVisionRay(t),n.default.draw(),this.drawProjectiles()}move(){this.moving.left&&(this.moving.up||this.moving.down?this.x-=this.maxSpeedDiagonal:this.x-=this.maxSpeed),this.moving.right&&(this.moving.up||this.moving.down?this.x+=this.maxSpeedDiagonal:this.x+=this.maxSpeed),this.moving.up&&(this.moving.left||this.moving.right?this.y-=this.maxSpeedDiagonal:this.y-=this.maxSpeed),this.moving.down&&(this.moving.left||this.moving.right?this.y+=this.maxSpeedDiagonal:this.y+=this.maxSpeed),this.adjustCollisionWithGameObjects(),this.checkForCollisionWithEnemies(),this.updateMapPosition()}calculateTheta(){const t=Math.atan2(s.default.mousePosition.y-s.default.center.y,s.default.mousePosition.x-s.default.center.x);return s.context.fillStyle="#44FF44",s.context.fillText(`θ = ${t.toFixed(2)}`,10,56),t}drawPlayer(t){s.context.beginPath(),s.context.fillStyle="#00AA00",s.context.font="10px Monospace",s.context.fillText(`p (${this.x.toFixed(2)}, ${this.y.toFixed(2)})`,10,20),s.context.strokeStyle="#523DA5",s.context.lineWidth=2,s.context.moveTo(s.default.center.x,s.default.center.y),s.context.lineTo(s.default.center.x+this.sightLineLength*Math.cos(t),s.default.center.y+this.sightLineLength*Math.sin(t)),s.context.stroke(),this.drawCollisionBox()}drawCollisionBox(){s.context.lineWidth=1,s.context.beginPath(),s.context.moveTo(.5+s.default.center.x-this.collisionBox.halfWidth,.5+s.default.center.y-this.collisionBox.halfHeight),s.context.lineTo(-.5+s.default.center.x+this.collisionBox.halfWidth,.5+s.default.center.y-this.collisionBox.halfHeight),s.context.lineTo(-.5+s.default.center.x+this.collisionBox.halfWidth,-.5+s.default.center.y+this.collisionBox.halfHeight),s.context.lineTo(.5+s.default.center.x-this.collisionBox.halfWidth,-.5+s.default.center.y+this.collisionBox.halfHeight),s.context.lineTo(.5+s.default.center.x-this.collisionBox.halfWidth,.5+s.default.center.y-this.collisionBox.halfHeight),s.context.stroke()}drawPlayerVisionRay(t){const{hitPoint:e,hitObject:i}=a.default.cast(this,t);e&&(i?a.default.drawRay(e,"#FF4444"):a.default.drawRay(e))}drawProjectiles(){this.projectiles.forEach(t=>t.draw(this.x,this.y))}updateMapPosition(){this.row=Math.floor(this.y/o.TILE_SIZE),this.col=Math.floor(this.x/o.TILE_SIZE)}updateTileDeltas(){this.deltas.dyTop=this.y%o.TILE_SIZE,this.deltas.dyBottom=o.TILE_SIZE-this.deltas.dyTop,this.deltas.dxLeft=this.x%o.TILE_SIZE,this.deltas.dxRight=o.TILE_SIZE-this.deltas.dxLeft}adjustCollisionWithGameObjects(){let t;if(h.gameObjects[this.row]){if(this.moving.left){(t=h.gameObjects[this.row][this.col-1])&&this.x-this.collisionBox.halfWidth<=t.mapX+t.width&&(this.x=t.mapX+t.width+this.collisionBox.halfWidth);const e=Math.floor((this.y+this.collisionBox.halfHeight-1)/o.TILE_SIZE);e!==this.row&&(t=h.gameObjects[e][this.col-1])&&this.x-this.collisionBox.halfWidth<=t.mapX+t.width&&(this.moving.down&&this.deltas.dyTop<=this.deltas.dxRight||(this.x=t.mapX+t.width+this.collisionBox.halfWidth));const i=Math.floor((this.y-this.collisionBox.halfHeight)/o.TILE_SIZE);i!==this.row&&(t=h.gameObjects[i][this.col-1])&&this.x-this.collisionBox.halfWidth<=t.mapX+t.width&&(this.moving.up&&this.deltas.dyBottom<=this.deltas.dxRight||(this.x=t.mapX+t.width+this.collisionBox.halfWidth))}if(this.moving.right){(t=h.gameObjects[this.row][this.col+1])&&this.x+this.collisionBox.halfWidth>=t.mapX&&(this.x=t.mapX-this.collisionBox.halfWidth);const e=Math.floor((this.y+this.collisionBox.halfHeight-1)/o.TILE_SIZE);e!==this.row&&(t=h.gameObjects[e][this.col+1])&&this.x+this.collisionBox.halfWidth>=t.mapX&&(this.moving.down&&this.deltas.dyTop<=this.deltas.dxLeft||(this.x=t.mapX-this.collisionBox.halfWidth));const i=Math.floor((this.y-this.collisionBox.halfHeight)/o.TILE_SIZE);i!==this.row&&(t=h.gameObjects[i][this.col+1])&&this.x+this.collisionBox.halfWidth>=t.mapX&&(this.moving.up&&this.deltas.dyBottom<=this.deltas.dxLeft||(this.x=t.mapX-this.collisionBox.halfWidth))}}if(h.gameObjects[this.row-1]&&this.moving.up){(t=h.gameObjects[this.row-1][this.col])&&this.y-this.collisionBox.halfHeight<=t.mapY+t.height&&(this.y=t.mapY+t.height+this.collisionBox.halfHeight);const e=Math.floor((this.x+this.collisionBox.halfWidth-1)/o.TILE_SIZE);e!==this.col&&(t=h.gameObjects[this.row-1][e])&&this.y-this.collisionBox.halfHeight<=t.mapY+t.height&&(this.moving.right&&this.deltas.dyBottom>this.deltas.dxLeft||(this.y=t.mapY+t.height+this.collisionBox.halfHeight));const i=Math.floor((this.x-this.collisionBox.halfWidth)/o.TILE_SIZE);i!==this.col&&(t=h.gameObjects[this.row-1][i])&&this.y-this.collisionBox.halfHeight<=t.mapY+t.height&&(this.moving.left&&this.deltas.dyBottom>this.deltas.dxRight||(this.y=t.mapY+t.height+this.collisionBox.halfHeight))}if(h.gameObjects[this.row+1]){this.moving.down&&(t=h.gameObjects[this.row+1][this.col])&&this.y+this.collisionBox.halfHeight>=t.mapY&&(this.y=t.mapY-this.collisionBox.halfHeight);const e=Math.floor((this.x+this.collisionBox.halfWidth-1)/o.TILE_SIZE);e!==this.col&&(t=h.gameObjects[this.row+1][e])&&this.y+this.collisionBox.halfHeight>=t.mapY&&(this.moving.right&&this.deltas.dyTop>this.deltas.dxLeft||(this.y=t.mapY-this.collisionBox.halfHeight));const i=Math.floor((this.x-this.collisionBox.halfWidth)/o.TILE_SIZE);i!==this.col&&(t=h.gameObjects[this.row+1][i])&&this.y+this.collisionBox.halfHeight>=t.mapY&&(this.moving.left&&this.deltas.dyTop>this.deltas.dxRight||(this.y=t.mapY-this.collisionBox.halfHeight))}}checkForCollisionWithEnemies(){h.getEnemiesOnScreen(this.x,this.y).filter(t=>t.collidesWithPlayer(this.x,this.y,this.collisionBox)).length>0&&this.die()}die(){this.alive=!1,r.default.state=u.default.paused}}},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const o=i(0),s=i(4),a=i(1);class l{static cast(t,e){if(!(e>=0)){t.deltas.dyTop;const i=t.deltas.dyTop/Math.tan(-e),o=1/i>0;return i>=0&&o?l.getInterceptPointNE(t,e):l.getInterceptPointNW(t,e)}{t.deltas.dyBottom;const i=t.deltas.dyBottom/Math.tan(e);if(i>=0)return l.getInterceptPointSE(t,e);if(i<0)return l.getInterceptPointSW(t,e)}}static drawRay(t,e="#4444FF"){a.context.strokeStyle=e,a.context.lineWidth=.5,a.context.beginPath(),a.context.moveTo(a.default.center.x,a.default.center.y),a.context.lineTo(a.default.center.x+t.x,a.default.center.y+t.y),a.context.stroke(),a.context.lineWidth=1}static getInterceptPointSE(t,e){let i,s,h=null,n=null,c=0;for(;s=c*o.TILE_SIZE,i=0===e?0:(t.deltas.dxRight+s)*Math.tan(e),!(s+t.deltas.dxRight>a.default.center.x||i>a.default.center.y);){if(o.RAYCASTER.DEBUG&&(a.context.beginPath(),a.context.arc(a.default.center.x+t.deltas.dxRight+s,a.default.center.y+i,2,0,2*Math.PI),a.context.stroke()),n=l.checkGameObjectCollisionVerticalSE(c,t,i)){h={x:s+t.deltas.dxRight,y:i};break}++c}let d,r,u=null,f=null,x=0;for(;!(r=x*o.TILE_SIZE,0===e||(d=(t.deltas.dyBottom+r)/Math.tan(e),r+t.deltas.dyBottom>a.default.center.y||d>a.default.center.x)||(o.RAYCASTER.DEBUG&&(a.context.strokeStyle="#44FF44",a.context.beginPath(),a.context.arc(a.default.center.x+d,a.default.center.y+t.deltas.dyBottom+r,2,0,2*Math.PI),a.context.stroke()),i<r));){if(f=l.checkGameObjectCollisionHorizontalSE(x,t,d)){u={x:d,y:r+t.deltas.dyBottom};break}++x}if(h&&null===u)return{hitPoint:h,hitObject:n};if(u&&null===h)return{hitPoint:u,hitObject:f};if(u&&h){return Math.sqrt(Math.pow(h.x,2)+Math.pow(h.y,2))>Math.sqrt(Math.pow(u.x,2)+Math.pow(u.y,2))?{hitPoint:u,hitObject:f}:{hitPoint:h,hitObject:n}}if(null===u&&null===h){const e={x:d,y:r+t.deltas.dyBottom},o={x:s+t.deltas.dxRight,y:i};return Math.sqrt(Math.pow(o.x,2)+Math.pow(o.y,2))>Math.sqrt(Math.pow(e.x,2)+Math.pow(e.y,2))?{hitPoint:e,hitObject:f}:{hitPoint:o,hitObject:n}}}static getInterceptPointNE(t,e){let i,s,h=null,n=null,c=0;for(;s=c*o.TILE_SIZE,i=0===e?0:(t.deltas.dxRight+s)*Math.tan(-e),!(s+t.deltas.dxRight>a.default.center.x||i>a.default.center.y);){if(o.RAYCASTER.DEBUG&&(a.context.beginPath(),a.context.arc(a.default.center.x+s+t.deltas.dxRight,a.default.center.y-i,2,0,2*Math.PI),a.context.stroke()),n=l.checkGameObjectCollisionVerticalNE(c,t,i)){h={x:s+t.deltas.dxRight,y:-i};break}++c}let d,r,u=null,f=null,x=0;for(;!(r=x*o.TILE_SIZE,0===e||(d=(t.deltas.dyTop+r)/Math.tan(-e),r+t.deltas.dyTop>a.default.center.y||d>a.default.center.x)||(o.RAYCASTER.DEBUG&&(a.context.strokeStyle="#44FF44",a.context.beginPath(),a.context.arc(a.default.center.x+d,a.default.center.y-r-t.deltas.dyTop,2,0,2*Math.PI),a.context.stroke()),i<r));){if(f=l.checkGameObjectCollisionHorizontalNE(x,t,d)){u={x:d,y:-r-t.deltas.dyTop};break}++x}if(h&&null===u)return{hitPoint:h,hitObject:n};if(u&&null===h)return{hitPoint:u,hitObject:f};if(u&&h){return Math.sqrt(Math.pow(h.x,2)+Math.pow(h.y,2))>Math.sqrt(Math.pow(u.x,2)+Math.pow(u.y,2))?{hitPoint:u,hitObject:f}:{hitPoint:h,hitObject:n}}if(null===u&&null===h){const e={x:d,y:-r-t.deltas.dyTop},o={x:s+t.deltas.dxRight,y:-i};return Math.sqrt(Math.pow(o.x,2)+Math.pow(o.y,2))>Math.sqrt(Math.pow(e.x,2)+Math.pow(e.y,2))?{hitPoint:e,hitObject:f}:{hitPoint:o,hitObject:n}}}static getInterceptPointNW(t,e){let i,s,h=null,n=null,c=0;for(;s=c*o.TILE_SIZE,i=0===e?0:(t.deltas.dxLeft+s)*Math.tan(Math.PI- -e),!(s+t.deltas.dxLeft>a.default.center.x||i>a.default.center.y);){if(o.RAYCASTER.DEBUG&&(a.context.beginPath(),a.context.arc(a.default.center.x-s-t.deltas.dxLeft,a.default.center.y-i,2,0,2*Math.PI),a.context.stroke()),n=l.checkGameObjectCollisionVerticalNW(c,t,i)){h={x:-s-t.deltas.dxLeft,y:-i};break}++c}let d,r,u=null,f=null,x=0;for(;!(r=x*o.TILE_SIZE,0===e||(d=(t.deltas.dyTop+r)/Math.tan(Math.PI- -e),r+t.deltas.dyTop>a.default.center.y||d>a.default.center.x)||(o.RAYCASTER.DEBUG&&(a.context.strokeStyle="#44FF44",a.context.beginPath(),a.context.arc(a.default.center.x-d,a.default.center.y-r-t.deltas.dyTop,2,0,2*Math.PI),a.context.stroke()),i<r));){if(f=l.checkGameObjectCollisionHorizontalNW(x,t,d)){u={x:-d,y:-r-t.deltas.dyTop};break}++x}if(h&&null===u)return{hitPoint:h,hitObject:n};if(u&&null===h)return{hitPoint:u,hitObject:f};if(u&&h){return Math.sqrt(Math.pow(h.x,2)+Math.pow(h.y,2))>Math.sqrt(Math.pow(u.x,2)+Math.pow(u.y,2))?{hitPoint:u,hitObject:f}:{hitPoint:h,hitObject:n}}if(null===u&&null===h){const e={x:-d,y:-r-t.deltas.dyTop},o={x:-s-t.deltas.dxLeft,y:-i};return Math.sqrt(Math.pow(o.x,2)+Math.pow(o.y,2))>Math.sqrt(Math.pow(e.x,2)+Math.pow(e.y,2))?{hitPoint:e,hitObject:f}:{hitPoint:o,hitObject:n}}}static getInterceptPointSW(t,e){let i,s,h=null,n=null,c=0;for(;s=c*o.TILE_SIZE,i=0===e?0:(t.deltas.dxLeft+s)*Math.tan(Math.PI-e),!(s+t.deltas.dxLeft>a.default.center.x||i>a.default.center.y);){if(o.RAYCASTER.DEBUG&&(a.context.beginPath(),a.context.arc(a.default.center.x-t.deltas.dxLeft-s,a.default.center.y+i,2,0,2*Math.PI),a.context.stroke()),n=l.checkGameObjectCollisionVerticalSW(c,t,i)){h={x:-s-t.deltas.dxLeft,y:i};break}++c}let d,r,u=null,f=null,x=0;for(;!(r=x*o.TILE_SIZE,0===e||(d=(t.deltas.dyBottom+r)/Math.tan(e),r+t.deltas.dyBottom>a.default.center.y||-d>a.default.center.x)||(o.RAYCASTER.DEBUG&&(a.context.strokeStyle="#44FF44",a.context.beginPath(),a.context.arc(a.default.center.x+d,a.default.center.y+t.deltas.dyBottom+r,2,0,2*Math.PI),a.context.stroke()),i<r));){if(f=l.checkGameObjectCollisionHorizontalSW(x,t,d)){u={x:d,y:r+t.deltas.dyBottom};break}++x}if(h&&null===u)return{hitPoint:h,hitObject:n};if(u&&null===h)return{hitPoint:u,hitObject:f};if(u&&h){return Math.sqrt(Math.pow(h.x,2)+Math.pow(h.y,2))>Math.sqrt(Math.pow(u.x,2)+Math.pow(u.y,2))?{hitPoint:u,hitObject:f}:{hitPoint:h,hitObject:n}}if(null===u&&null===h){const e={x:d,y:r+t.deltas.dyBottom},o={x:-s-t.deltas.dxLeft,y:i};return Math.sqrt(Math.pow(o.x,2)+Math.pow(o.y,2))>Math.sqrt(Math.pow(e.x,2)+Math.pow(e.y,2))?{hitPoint:e,hitObject:f}:{hitPoint:o,hitObject:n}}}static checkGameObjectCollisionVerticalSE(t,e,i){const l=1+e.col+t,h=e.row+Math.floor((e.deltas.dyTop+i)/o.TILE_SIZE);let n=null;return s.gameObjects[h]&&s.gameObjects[h][l]&&(n=s.gameObjects[h][l]),o.RAYCASTER.DEBUG&&a.context.fillText(`col: ${l}, row: ${h}, hit: ${n?[n.row,n.col]:null}`,10,112+12*t),n}static checkGameObjectCollisionHorizontalSE(t,e,i){const l=e.col+Math.floor((e.deltas.dxLeft+i)/o.TILE_SIZE),h=e.row+t+1;let n=null;return s.gameObjects[h]&&s.gameObjects[h][l]&&(n=s.gameObjects[h][l]),o.RAYCASTER.DEBUG&&a.context.fillText(`col: ${l}, row: ${h}, hit: ${n?[n.row,n.col]:null}`,10,212+12*t),n}static checkGameObjectCollisionVerticalNE(t,e,i){const l=1+e.col+t,h=e.row+Math.floor((e.deltas.dyTop-i)/o.TILE_SIZE);let n=null;return s.gameObjects[h]&&s.gameObjects[h][l]&&(n=s.gameObjects[h][l]),o.RAYCASTER.DEBUG&&a.context.fillText(`col: ${l}, row: ${h}, hit: ${n?[n.row,n.col]:null}`,10,112+12*t),n}static checkGameObjectCollisionHorizontalNE(t,e,i){const l=e.col+Math.floor((e.deltas.dxLeft+i)/o.TILE_SIZE),h=e.row-t-1;let n=null;return s.gameObjects[h]&&s.gameObjects[h][l]&&(n=s.gameObjects[h][l]),o.RAYCASTER.DEBUG&&a.context.fillText(`col: ${l}, row: ${h}, hit: ${n?[n.row,n.col]:null}`,10,212+12*t),n}static checkGameObjectCollisionVerticalNW(t,e,i){const l=-1+e.col-t,h=e.row+Math.floor((e.deltas.dyTop-i)/o.TILE_SIZE);let n=null;return s.gameObjects[h]&&s.gameObjects[h][l]&&(n=s.gameObjects[h][l]),o.RAYCASTER.DEBUG&&a.context.fillText(`col: ${l}, row: ${h}, hit: ${n?[n.row,n.col]:null}`,10,112+12*t),n}static checkGameObjectCollisionHorizontalNW(t,e,i){const l=e.col-Math.floor((e.deltas.dxRight+i)/o.TILE_SIZE),h=e.row-t-1;let n=null;return s.gameObjects[h]&&s.gameObjects[h][l]&&(n=s.gameObjects[h][l]),o.RAYCASTER.DEBUG&&a.context.fillText(`col: ${l}, row: ${h}, hit: ${n?[n.row,n.col]:null}`,10,212+12*t),n}static checkGameObjectCollisionVerticalSW(t,e,i){const l=e.col-t-1,h=e.row+Math.floor((e.deltas.dyTop+i)/o.TILE_SIZE);let n=null;return s.gameObjects[h]&&s.gameObjects[h][l]&&(n=s.gameObjects[h][l]),o.RAYCASTER.DEBUG&&a.context.fillText(`col: ${l}, row: ${h}, hit: ${n?[n.row,n.col]:null}`,10,112+12*t),n}static checkGameObjectCollisionHorizontalSW(t,e,i){const l=e.col-Math.floor((e.deltas.dxRight-i)/o.TILE_SIZE),h=e.row+t+1;let n=null;return s.gameObjects[h]&&s.gameObjects[h][l]&&(n=s.gameObjects[h][l]),o.RAYCASTER.DEBUG&&a.context.fillText(`col: ${l}, row: ${h}, hit: ${n?[n.row,n.col]:null}`,10,212+12*t),n}}e.default=l},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const o=i(1);e.default=class{static draw(){const t=o.default.mousePosition.x,e=o.default.mousePosition.y;let i,s;o.context.strokeStyle="#FFFFFF",o.context.lineWidth=.5,o.context.beginPath(),i=.5,s=-1.5,o.context.moveTo(t+i,e+s),s=-3.5,o.context.lineTo(t+i,e+s),s=2.5,o.context.moveTo(t+i,e+s),s=4.5,o.context.lineTo(t+i,e+s),s=.5,i=-3.5,o.context.moveTo(t+i,e+s),i=-1.5,o.context.lineTo(t+i,e+s),i=2.5,o.context.moveTo(t+i,e+s),i=4.5,o.context.lineTo(t+i,e+s),o.context.stroke()}}},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const o=i(0),s=i(1),a=i(4);e.default=class{constructor(t,e,i,o){this.x=t,this.y=e,this.directionX=i,this.directionY=o,this.speed=24,this.damage=10,this.alive=!0,this.numberOfIntermediatePositions=3,this.intermediatePositions=[];for(let t=0;t<this.numberOfIntermediatePositions;++t)this.intermediatePositions[t]={x:null,y:null,row:null,col:null}}update(t,e){this.previousX=this.x,this.previousY=this.y,this.x+=this.directionX*this.speed,this.y+=this.directionY*this.speed,this.row=Math.floor(this.y/o.TILE_SIZE),this.col=Math.floor(this.x/o.TILE_SIZE);const i=this.getNearbyEnemies();this.calculateIntermediatePoints(),this.isOffScreen(t,e)&&(this.alive=!1),this.intermediatePositions.forEach(t=>{this.alive&&(this.checkCollisionWithEnemies(i,t),this.checkCollisionWithGameObject(t))}),this.alive&&(this.checkCollisionWithEnemies(i),this.checkCollisionWithGameObject())}draw(t,e){this.x===t&&this.y===e||(s.context.strokeStyle="#8AFCFF",s.context.lineWidth=1,s.context.beginPath(),s.context.arc(this.x+s.default.center.x-t,this.y+s.default.center.y-e,2,0,2*Math.PI),s.context.stroke())}getNearbyEnemies(){return[...a.enemies].filter(t=>Math.abs(t.x-this.x)<=o.TILE_SIZE&&Math.abs(t.y-this.y)<=o.TILE_SIZE)}calculateIntermediatePoints(){const t=(this.x-this.previousX)/(this.numberOfIntermediatePositions+1),e=(this.y-this.previousY)/(this.numberOfIntermediatePositions+1);for(let i=this.numberOfIntermediatePositions-1;i>=0;--i)this.intermediatePositions[i].x=this.x-t*(i+1),this.intermediatePositions[i].y=this.y-e*(i+1),this.intermediatePositions[i].row=Math.floor(this.intermediatePositions[i].y/o.TILE_SIZE),this.intermediatePositions[i].col=Math.floor(this.intermediatePositions[i].x/o.TILE_SIZE)}isOffScreen(t,e){return this.x<t-s.default.center.x-o.TILE_SIZE||this.x>t+s.default.center.x+o.TILE_SIZE||this.y<e-s.default.center.y-o.TILE_SIZE||this.y>e+s.default.center.y+o.TILE_SIZE}checkCollisionWithEnemies(t,e){e||(e=this),t.forEach(t=>{e.x>=t.x-t.collisionBox.halfWidth&&e.x<=t.x+t.collisionBox.halfWidth&&e.y>=t.y-t.collisionBox.halfHeight&&e.y<=t.y+t.collisionBox.halfHeight&&(this.alive=!1,t.takeDamage(this.getDamage()))})}checkCollisionWithGameObject(t){t||(t=this);const e=a.gameObjects[t.row][t.col];e&&(e.takeDamage(this.getDamage()),this.alive=!1,e.destructable&&(a.gameObjects[t.row][t.col]=null))}getDamage(){return this.damage}}},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const o=i(0),s=i(3),a=i(1);e.default=class{update(){}render(){s.default.playing.render(),this.drawPauseMenu()}drawPauseMenu(){a.context.beginPath(),a.context.fillStyle="#FFC100",a.context.font="20px Monospace",a.context.fillText("Paused",o.CANVAS_WIDTH/2-36,o.CANVAS_HEIGHT/2-54),a.context.font="12px Monospace",a.context.fillText("  p - Resume",o.CANVAS_WIDTH/2-50,o.CANVAS_HEIGHT/2-34),a.context.fillText("ESC - Main Menu",o.CANVAS_WIDTH/2-50,o.CANVAS_HEIGHT/2-18),a.context.stroke()}}},function(t,e,i){"use strict";var o;Object.defineProperty(e,"__esModule",{value:!0}),function(t){t[t.Audio=0]="Audio"}(o||(o={})),e.default=o}]);
//# sourceMappingURL=app.js.map