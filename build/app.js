!function(t){var e={};function i(o){if(e[o])return e[o].exports;var s=e[o]={i:o,l:!1,exports:{}};return t[o].call(s.exports,s,s.exports,i),s.l=!0,s.exports}i.m=t,i.c=e,i.d=function(t,e,o){i.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:o})},i.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},i.t=function(t,e){if(1&e&&(t=i(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var o=Object.create(null);if(i.r(o),Object.defineProperty(o,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var s in t)i.d(o,s,function(e){return t[e]}.bind(null,s));return o},i.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return i.d(e,"a",e),e},i.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},i.p="",i(i.s=12)}([function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const o=i(1),s=i(6),a=document.getElementById("canvas");a.width=o.CANVAS_WIDTH,a.height=o.CANVAS_HEIGHT,a.style.width=1!==o.SCALE?o.SCALE*o.CANVAS_WIDTH+"px":"auto",a.style.height=1!==o.SCALE?o.SCALE*o.CANVAS_HEIGHT+"px":"auto",e.context=a.getContext("2d");class l{static clear(){e.context.clearRect(0,0,a.width,a.height)}static updateMousePosition(){this.mousePosition={x:Math.floor((s.default.x-a.offsetLeft)/o.SCALE),y:Math.floor((s.default.y-a.offsetTop)/o.SCALE)}}}l.halfWidth=a.width/2,l.halfHeight=a.height/2,l.rows=Math.floor(a.height/o.TILE_SIZE),l.cols=Math.floor(a.width/o.TILE_SIZE),l.halfRows=Math.floor(a.height/2/o.TILE_SIZE),l.halfCols=Math.floor(a.width/2/o.TILE_SIZE),l.rowRemainder=a.height/2%o.TILE_SIZE,l.colRemainder=a.width/2%o.TILE_SIZE,l.center={x:o.CANVAS_WIDTH/2,y:o.CANVAS_HEIGHT/2},l.getCanvasDomElement=(()=>a),e.default=l},function(t){t.exports={CANVAS_WIDTH:480,CANVAS_HEIGHT:320,TILE_SIZE:32,SCALE:2,RAYCASTER:{DEBUG:!1}}},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const o=i(13),s=i(0),a=i(16),l=i(3),h=i(36),n=i(37);class c{constructor(){window.onfocus=(()=>{a.default.restart()}),o.default.load(t=>this.gameAssetLoaded(n.default.Audio,t))}static togglePause(){c.stateManager.getState()===l.default.PAUSED?c.stateManager.setState(l.default.PLAYING):c.stateManager.setState(l.default.PAUSED)}start(){const t=setInterval(()=>{c.loaded&&(clearInterval(t),c.stateManager.setState(l.default.MAIN_MENU))},250);this.gameLoop()}gameAssetLoaded(t,e){t===n.default.Audio&&(c.loadedPercentage=1*e),1===c.loadedPercentage&&(c.loaded=!0)}gameLoop(){this.update(),!1===a.default.nextFrameRenderingShouldBeSkipped()&&this.render(),a.default.calculateFrameRate(),window.requestAnimationFrame(()=>this.gameLoop())}update(){c.stateManager.update()}render(){s.default.clear(),c.stateManager.render(),a.default.drawFPS()}}c.loaded=!1,c.loadedPercentage=0,c.stateManager=new h.default,e.default=c},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const o=i(17),s=i(18),a=i(19),l=i(35),h={LOADING:new o.default,MAIN_MENU:new s.default,PLAYING:new a.default,PAUSED:new l.default};e.default=h},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const o=i(1),s=i(24),a=i(0),l=i(27),h=i(31);function n(t,i){return e.enemies.filter(e=>e.isOnScreen(t,i))}e.gameObjects=[],e.enemies=[],e.getEnemiesOnScreen=n;e.default=class{constructor(t,e){this.grid=t,this.player=e,this.loadMap(h)}update(){e.enemies.forEach((t,i)=>{t.update(this.player,e.enemies),!1===t.alive&&e.enemies.splice(i,1)})}draw(){this.drawGameObjects(),n(this.player.x,this.player.y).forEach(t=>t.draw(this.player))}drawGameObjects(){const t=this.player.deltas.dxLeft-a.default.colRemainder,i=this.player.deltas.dyTop-a.default.rowRemainder,s=this.player.row-a.default.halfRows,l=this.player.col-a.default.halfCols;let h;for(let n=s;n<s+a.default.rows+1;++n)for(let c=l-1;c<l+a.default.cols+1;++c)e.gameObjects[n]&&e.gameObjects[n][c]&&((h=e.gameObjects[n][c]).x=(c-l)*o.TILE_SIZE-t,h.y=(n-s)*o.TILE_SIZE-i,h.draw())}loadMap(t){for(let i=0;i<t.gameObjects.length;++i){e.gameObjects[i]=[];for(let o=0;o<t.gameObjects[i].length;++o)e.gameObjects[i][o]=l.default.createGameObject(i,o,t.gameObjects[i][o])}t.enemies.forEach(t=>e.enemies.push(new s.default(t.x,t.y,t.healthPercentage)))}}},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const o=i(14),s=i(7),a=i(15);class l{static async load(t){const e=[a.load("./audio/smg_1.wav"),a.load("./audio/smg_2.wav"),a.load("./audio/smg_3.wav"),a.load("./audio/smg_4.wav"),a.load("./audio/smg_5.wav"),a.load("./audio/crate_hit_1.wav"),a.load("./audio/enemy_hit_1.mp3"),a.load("./audio/enemy_hit_2.mp3"),a.load("./audio/enemy_hit_3.mp3"),a.load("./audio/enemy_hit_4.mp3"),a.load("./audio/enemy_hit_5.mp3"),a.load("./audio/enemy_die_1.mp3")],i=await Promise.all(e);this.SMG[0]=i[0],this.SMG[1]=i[1],this.SMG[2]=i[2],this.SMG[3]=i[3],this.SMG[4]=i[4],this.CRATE_HIT[0]=i[5],this.ENEMY_HIT[0]=i[6],this.ENEMY_HIT[1]=i[7],this.ENEMY_HIT[2]=i[8],this.ENEMY_HIT[3]=i[9],this.ENEMY_HIT[4]=i[10],this.ENEMY_DEATH[0]=i[11],t(1)}static playSMG(){const t=s.default.createBufferSource();t.buffer=this.SMG[this.SMG_INDEX];const e=s.default.createGain();e.gain.value=.2*o.default.soundFxVolume,t.connect(e),e.connect(s.default.destination),t.start(),this.SMG_INDEX=++this.SMG_INDEX%this.SMG.length}static playEnemyHit(){if(!1===this.ENEMY_HIT_READY)return;const t=s.default.createBufferSource();t.buffer=this.ENEMY_HIT[this.ENEMY_HIT_INDEX];const e=s.default.createGain();e.gain.value=o.default.soundFxVolume,t.connect(e),e.connect(s.default.destination),t.start(),this.ENEMY_HIT_INDEX=++this.ENEMY_HIT_INDEX%this.ENEMY_HIT.length,this.ENEMY_HIT_READY=!1,setTimeout(()=>{this.ENEMY_HIT_READY=!0},500)}static playEnemyDeath(){const t=s.default.createBufferSource();t.buffer=this.ENEMY_DEATH[0];const e=s.default.createGain();e.gain.value=o.default.soundFxVolume,t.connect(e),e.connect(s.default.destination),t.start()}static playCrateHit(){const t=s.default.createBufferSource();t.buffer=this.CRATE_HIT[0];const e=s.default.createGain();e.gain.value=o.default.soundFxVolume,t.connect(e),e.connect(s.default.destination),t.start()}}l.SMG=[],l.SMG_INDEX=0,l.CRATE_HIT=[],l.ENEMY_HIT=[],l.ENEMY_HIT_INDEX=0,l.ENEMY_HIT_READY=!0,l.ENEMY_DEATH=[],e.default=l},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const o=i(0);class s{static init(t){this.hijackRightClick(),this.trackMouseOnCanvas(),this.listenForLeftClicks(t)}static hijackRightClick(){window.addEventListener("contextmenu",t=>{t.preventDefault()},!1)}static trackMouseOnCanvas(){o.default.getCanvasDomElement().addEventListener("mousemove",t=>{this.x=t.pageX,this.y=t.pageY},!1)}static listenForLeftClicks(t){const e=o.default.getCanvasDomElement();e.addEventListener("mousedown",e=>{t.setShooting(!0)},!1),e.addEventListener("mouseup",e=>{t.setShooting(!1)},!1)}}s.x=window.innerWidth/2+100,s.y=window.innerHeight/2+50,e.default=s},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const o=new AudioContext;e.default=o},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.pointToPointDistance=function(t,e){return Math.sqrt((e.x-t.x)*(e.x-t.x)+(e.y-t.y)*(e.y-t.y))},e.angleBetweenPoints=function(t,e){return Math.atan2(t.y-e.y,t.x-e.x)}},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});e.default=class{constructor(t,e){this.width=t,this.height=e,this.halfWidth=this.width/2,this.halfHeight=this.height/2}}},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const o=i(1),s=i(4),a=i(0);class l{static cast(t,e,i){if(!(e>=0)){const o=t.deltas.dyTop/Math.tan(-e),s=1/o>0;return o>=0&&s?l.getInterceptPointNE(t,e,i):l.getInterceptPointNW(t,e,i)}{const o=t.deltas.dyBottom/Math.tan(e);if(o>=0)return l.getInterceptPointSE(t,e,i);if(o<0)return l.getInterceptPointSW(t,e,i)}}static drawRay(t,e="#4444FF"){a.context.strokeStyle=e,a.context.lineWidth=.5,a.context.beginPath(),a.context.moveTo(a.default.halfWidth,a.default.halfHeight),a.context.lineTo(a.default.halfWidth+t.x,a.default.halfHeight+t.y),a.context.stroke(),a.context.lineWidth=1}static getInterceptPointSE(t,e,i){let s,h,n=null,c=null,r=0;for(;!(h=r*o.TILE_SIZE,s=0===e?0:(t.deltas.dxRight+h)*Math.tan(e),h+t.deltas.dxRight>l.rangeHorizontal||s>l.rangeVertical||i&&(h+t.deltas.dxRight>i.x-t.x||s>i.y-t.y));){if(o.RAYCASTER.DEBUG){let e;e=i?{x:a.default.center.x-(i.x-t.x)+t.deltas.dxRight+h,y:a.default.center.y-(i.y-t.y)+s}:{x:a.default.center.x+t.deltas.dxRight+h,y:a.default.center.y+s},a.context.strokeStyle="#4444FF",a.context.beginPath(),a.context.arc(e.x,e.y,2,0,2*Math.PI),a.context.stroke()}if(c=l.checkGameObjectCollisionVerticalSE(r,t,s)){n={x:h+t.deltas.dxRight,y:s};break}++r}let d,u,f=null,x=null,y=0;for(;!(u=y*o.TILE_SIZE,0===e||(d=(t.deltas.dyBottom+u)/Math.tan(e),u+t.deltas.dyBottom>l.rangeVertical||d>l.rangeHorizontal)||i&&(u+t.deltas.dyBottom>i.y-t.y||Math.round(d)>i.x-t.x));){if(o.RAYCASTER.DEBUG){let e;e=i?{x:a.default.center.x-(i.x-t.x)+d,y:a.default.center.y-(i.y-t.y)+t.deltas.dyBottom+u}:{x:a.default.center.x+d,y:a.default.center.y+t.deltas.dyBottom+u},a.context.strokeStyle="#44FF44",a.context.beginPath(),a.context.arc(e.x,e.y,2,0,2*Math.PI),a.context.stroke()}if(s<u)break;if(x=l.checkGameObjectCollisionHorizontalSE(y,t,d)){f={x:d,y:u+t.deltas.dyBottom};break}++y}if(n&&null===f)return{hitPoint:n,hitObject:c};if(f&&null===n)return{hitPoint:f,hitObject:x};if(f&&n){return Math.sqrt(Math.pow(n.x,2)+Math.pow(n.y,2))>Math.sqrt(Math.pow(f.x,2)+Math.pow(f.y,2))?{hitPoint:f,hitObject:x}:{hitPoint:n,hitObject:c}}if(null===f&&null===n){const e={x:d,y:u+t.deltas.dyBottom},i={x:h+t.deltas.dxRight,y:s};return Math.sqrt(Math.pow(i.x,2)+Math.pow(i.y,2))>Math.sqrt(Math.pow(e.x,2)+Math.pow(e.y,2))?{hitPoint:e,hitObject:x}:{hitPoint:i,hitObject:c}}}static getInterceptPointNE(t,e,i){let s,h,n=null,c=null,r=0;for(;!(h=r*o.TILE_SIZE,s=0===e?0:(t.deltas.dxRight+h)*Math.tan(-e),h+t.deltas.dxRight>l.rangeHorizontal||s>l.rangeVertical||i&&(h+t.deltas.dxRight>i.x-t.x||s>t.y-i.y));){if(o.RAYCASTER.DEBUG){let e;e=i?{x:a.default.center.x-(i.x-t.x)+t.deltas.dxRight+h,y:a.default.center.y-(i.y-t.y)-s}:{x:a.default.center.x+t.deltas.dxRight+h,y:a.default.center.y-s},a.context.strokeStyle="#4444FF",a.context.beginPath(),a.context.arc(e.x,e.y,2,0,2*Math.PI),a.context.stroke()}if(c=l.checkGameObjectCollisionVerticalNE(r,t,s)){n={x:h+t.deltas.dxRight,y:-s};break}++r}let d,u,f=null,x=null,y=0;for(;!(u=y*o.TILE_SIZE,0===e||(d=(t.deltas.dyTop+u)/Math.tan(-e),u+t.deltas.dyTop>l.rangeVertical||d>l.rangeHorizontal)||i&&(u+t.deltas.dyTop>t.y-i.y||Math.round(d)>i.x-t.x));){if(o.RAYCASTER.DEBUG){let e;e=i?{x:a.default.center.x-(i.x-t.x)+d,y:a.default.center.y-(i.y-t.y)-t.deltas.dyTop-u}:{x:a.default.center.x+d,y:a.default.center.y-u-t.deltas.dyTop},a.context.strokeStyle="#44FF44",a.context.beginPath(),a.context.arc(e.x,e.y,2,0,2*Math.PI),a.context.stroke()}if(s<u)break;if(x=l.checkGameObjectCollisionHorizontalNE(y,t,d)){f={x:d,y:-u-t.deltas.dyTop};break}++y}if(n&&null===f)return{hitPoint:n,hitObject:c};if(f&&null===n)return{hitPoint:f,hitObject:x};if(f&&n){return Math.sqrt(Math.pow(n.x,2)+Math.pow(n.y,2))>Math.sqrt(Math.pow(f.x,2)+Math.pow(f.y,2))?{hitPoint:f,hitObject:x}:{hitPoint:n,hitObject:c}}if(null===f&&null===n){const e={x:d,y:-u-t.deltas.dyTop},i={x:h+t.deltas.dxRight,y:-s};return Math.sqrt(Math.pow(i.x,2)+Math.pow(i.y,2))>Math.sqrt(Math.pow(e.x,2)+Math.pow(e.y,2))?{hitPoint:e,hitObject:x}:{hitPoint:i,hitObject:c}}}static getInterceptPointNW(t,e,i){let s,h,n=null,c=null,r=0;for(;!(h=r*o.TILE_SIZE,s=0===e?0:(t.deltas.dxLeft+h)*Math.tan(Math.PI- -e),h+t.deltas.dxLeft>l.rangeHorizontal||s>l.rangeVertical||i&&(h+t.deltas.dxLeft>t.x-i.x||s>t.y-i.y));){if(o.RAYCASTER.DEBUG){let e;e=i?{x:a.default.center.x-(i.x-t.x)-t.deltas.dxLeft-h,y:a.default.center.y-(i.y-t.y)-s}:{x:a.default.center.x-t.deltas.dxLeft-h,y:a.default.center.y-s},a.context.strokeStyle="#4444FF",a.context.beginPath(),a.context.arc(e.x,e.y,2,0,2*Math.PI),a.context.stroke()}if(c=l.checkGameObjectCollisionVerticalNW(r,t,s)){n={x:-h-t.deltas.dxLeft,y:-s};break}++r}let d,u,f=null,x=null,y=0;for(;!(u=y*o.TILE_SIZE,0===e||(d=(t.deltas.dyTop+u)/Math.tan(Math.PI- -e),u+t.deltas.dyTop>l.rangeVertical||d>l.rangeHorizontal)||i&&(u+t.deltas.dyTop>t.y-i.y||Math.round(d)>t.x-i.x));){if(o.RAYCASTER.DEBUG){let e;e=i?{x:a.default.center.x-(i.x-t.x)-d,y:a.default.center.y-(i.y-t.y)-t.deltas.dyTop-u}:{x:a.default.center.x-d,y:a.default.center.y-t.deltas.dyTop-u},a.context.strokeStyle="#44FF44",a.context.beginPath(),a.context.arc(e.x,e.y,2,0,2*Math.PI),a.context.stroke()}if(s<u)break;if(x=l.checkGameObjectCollisionHorizontalNW(y,t,d)){f={x:-d,y:-u-t.deltas.dyTop};break}++y}if(n&&null===f)return{hitPoint:n,hitObject:c};if(f&&null===n)return{hitPoint:f,hitObject:x};if(f&&n){return Math.sqrt(Math.pow(n.x,2)+Math.pow(n.y,2))>Math.sqrt(Math.pow(f.x,2)+Math.pow(f.y,2))?{hitPoint:f,hitObject:x}:{hitPoint:n,hitObject:c}}if(null===f&&null===n){const e={x:-d,y:-u-t.deltas.dyTop},i={x:-h-t.deltas.dxLeft,y:-s};return Math.sqrt(Math.pow(i.x,2)+Math.pow(i.y,2))>Math.sqrt(Math.pow(e.x,2)+Math.pow(e.y,2))?{hitPoint:e,hitObject:x}:{hitPoint:i,hitObject:c}}}static getInterceptPointSW(t,e,i){let s,h,n=null,c=null,r=0;for(;!(h=r*o.TILE_SIZE,s=0===e?0:(t.deltas.dxLeft+h)*Math.tan(Math.PI-e),h+t.deltas.dxLeft>l.rangeHorizontal||s>l.rangeVertical||i&&(h+t.deltas.dxLeft>t.x-i.x||s>i.y-t.y));){if(o.RAYCASTER.DEBUG){let e;e=i?{x:a.default.center.x-(i.x-t.x)-t.deltas.dxLeft-h,y:a.default.center.y-(i.y-t.y)+s}:{x:a.default.center.x-t.deltas.dxLeft-h,y:a.default.center.y+s},a.context.strokeStyle="#4444FF",a.context.beginPath(),a.context.arc(e.x,e.y,2,0,2*Math.PI),a.context.stroke()}if(c=l.checkGameObjectCollisionVerticalSW(r,t,s)){n={x:-h-t.deltas.dxLeft,y:s};break}++r}let d,u,f=null,x=null,y=0;for(;!(u=y*o.TILE_SIZE,0===e||(d=(t.deltas.dyBottom+u)/Math.tan(e),u+t.deltas.dyBottom>l.rangeVertical||-d>l.rangeHorizontal)||i&&(u+t.deltas.dyBottom>i.y-t.y||-d>t.x-i.x));){if(o.RAYCASTER.DEBUG){let e;e=i?{x:a.default.center.x-(i.x-t.x)+d,y:a.default.center.y-(i.y-t.y)+t.deltas.dyBottom+u}:{x:a.default.center.x+d,y:a.default.center.y+t.deltas.dyBottom+u},a.context.strokeStyle="#44FF44",a.context.beginPath(),a.context.arc(e.x,e.y,2,0,2*Math.PI),a.context.stroke()}if(s<u)break;if(x=l.checkGameObjectCollisionHorizontalSW(y,t,d)){f={x:d,y:u+t.deltas.dyBottom};break}++y}if(n&&null===f)return{hitPoint:n,hitObject:c};if(f&&null===n)return{hitPoint:f,hitObject:x};if(f&&n){return Math.sqrt(Math.pow(n.x,2)+Math.pow(n.y,2))>Math.sqrt(Math.pow(f.x,2)+Math.pow(f.y,2))?{hitPoint:f,hitObject:x}:{hitPoint:n,hitObject:c}}if(null===f&&null===n){const e={x:d,y:u+t.deltas.dyBottom},i={x:-h-t.deltas.dxLeft,y:s};return Math.sqrt(Math.pow(i.x,2)+Math.pow(i.y,2))>Math.sqrt(Math.pow(e.x,2)+Math.pow(e.y,2))?{hitPoint:e,hitObject:x}:{hitPoint:i,hitObject:c}}}static checkGameObjectCollisionVerticalSE(t,e,i){const l=1+e.col+t,h=e.row+Math.floor((e.deltas.dyTop+i)/o.TILE_SIZE);let n=null;return s.gameObjects[h]&&s.gameObjects[h][l]&&(n=s.gameObjects[h][l]),o.RAYCASTER.DEBUG&&a.context.fillText(`col: ${l}, row: ${h}, hit: ${n?[n.row,n.col]:null}`,10,112+12*t),n}static checkGameObjectCollisionHorizontalSE(t,e,i){const l=e.col+Math.floor((e.deltas.dxLeft+i)/o.TILE_SIZE),h=e.row+t+1;let n=null;return s.gameObjects[h]&&s.gameObjects[h][l]&&(n=s.gameObjects[h][l]),o.RAYCASTER.DEBUG&&a.context.fillText(`col: ${l}, row: ${h}, hit: ${n?[n.row,n.col]:null}`,10,212+12*t),n}static checkGameObjectCollisionVerticalNE(t,e,i){const l=1+e.col+t,h=e.row+Math.floor((e.deltas.dyTop-i)/o.TILE_SIZE);let n=null;return s.gameObjects[h]&&s.gameObjects[h][l]&&(n=s.gameObjects[h][l]),o.RAYCASTER.DEBUG&&a.context.fillText(`col: ${l}, row: ${h}, hit: ${n?[n.row,n.col]:null}`,10,112+12*t),n}static checkGameObjectCollisionHorizontalNE(t,e,i){const l=e.col+Math.floor((e.deltas.dxLeft+i)/o.TILE_SIZE),h=e.row-t-1;let n=null;return s.gameObjects[h]&&s.gameObjects[h][l]&&(n=s.gameObjects[h][l]),o.RAYCASTER.DEBUG&&a.context.fillText(`col: ${l}, row: ${h}, hit: ${n?[n.row,n.col]:null}`,10,212+12*t),n}static checkGameObjectCollisionVerticalNW(t,e,i){const l=-1+e.col-t,h=e.row+Math.floor((e.deltas.dyTop-i)/o.TILE_SIZE);let n=null;return s.gameObjects[h]&&s.gameObjects[h][l]&&(n=s.gameObjects[h][l]),o.RAYCASTER.DEBUG&&a.context.fillText(`col: ${l}, row: ${h}, hit: ${n?[n.row,n.col]:null}`,10,112+12*t),n}static checkGameObjectCollisionHorizontalNW(t,e,i){const l=e.col-Math.floor((e.deltas.dxRight+i)/o.TILE_SIZE),h=e.row-t-1;let n=null;return s.gameObjects[h]&&s.gameObjects[h][l]&&(n=s.gameObjects[h][l]),o.RAYCASTER.DEBUG&&a.context.fillText(`col: ${l}, row: ${h}, hit: ${n?[n.row,n.col]:null}`,10,212+12*t),n}static checkGameObjectCollisionVerticalSW(t,e,i){const l=e.col-t-1,h=e.row+Math.floor((e.deltas.dyTop+i)/o.TILE_SIZE);let n=null;return s.gameObjects[h]&&s.gameObjects[h][l]&&(n=s.gameObjects[h][l]),o.RAYCASTER.DEBUG&&a.context.fillText(`col: ${l}, row: ${h}, hit: ${n?[n.row,n.col]:null}`,10,112+12*t),n}static checkGameObjectCollisionHorizontalSW(t,e,i){const l=e.col-Math.floor((e.deltas.dxRight-i)/o.TILE_SIZE),h=e.row+t+1;let n=null;return s.gameObjects[h]&&s.gameObjects[h][l]&&(n=s.gameObjects[h][l]),o.RAYCASTER.DEBUG&&a.context.fillText(`col: ${l}, row: ${h}, hit: ${n?[n.row,n.col]:null}`,10,212+12*t),n}}l.outsideOfScreenOffset=2*o.TILE_SIZE,l.rangeHorizontal=a.default.halfWidth+l.outsideOfScreenOffset,l.rangeVertical=a.default.halfHeight+l.outsideOfScreenOffset,e.default=l},function(t,e,i){"use strict";var o;Object.defineProperty(e,"__esModule",{value:!0}),function(t){t[t.Empty=0]="Empty",t[t.BoxGray=1]="BoxGray",t[t.BoxGreen=2]="BoxGreen",t[t.BoxBlue=3]="BoxBlue"}(o||(o={})),e.isBox=function(t){return o[t].startsWith("Box")},e.default=o},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),(new(i(2).default)).start()},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const o=i(5);e.default=class{static async load(t){await o.default.load(t)}}},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});class o{static get musicVolume(){return this._musicVolume}static set musicVolume(t){t>=0&&t<=1&&(this._musicVolume=t)}static get soundFxVolume(){return this._soundFxVolume}static set soundFxVolume(t){t>=0&&t<=1&&(this._soundFxVolume=t)}}o._musicVolume=.3,o._soundFxVolume=.15,e.default=o},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const o=i(7);e.load=function(t){return new Promise((e,i)=>{const s=new XMLHttpRequest;s.open("GET",t,!0),s.responseType="arraybuffer",s.onload=(()=>{o.default.decodeAudioData(s.response,t=>e(t))}),s.send()})}},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const o=i(1),s=i(0);let a,l,h=0;const n=.01667,c=[0,0,0,0,0,0,0,0,0,0,0];let r,d=!1;e.default=class{static nextFrameRenderingShouldBeSkipped(){return d}static restart(){a=null;for(let t=0;t<c.length;++t)c[t]=0}static calculateFrameRate(){if(a){const t=performance.now();(l=(t-a)/1e3)>n&&(h+=l-n),c.unshift(1/(l+h)),c.pop(),r=c.reduce((t,e)=>t+=e,0)/c.length,h>=n?(h-=n,d=!0):d=!1,a=t}else a=performance.now(),r=0}static drawFPS(){s.context.beginPath(),s.context.fillStyle="#FFC100",s.context.font="8px Monospace",s.context.fillText(`FPS: ${r&&r.toFixed(2)||"unknown"}`,10,o.CANVAS_HEIGHT-10),s.context.stroke()}}},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const o=i(1),s=i(2),a=i(0);e.default=class{enter(){}exit(){}update(){}render(){this.drawLoadingDialog()}drawLoadingDialog(){a.context.beginPath(),a.context.fillStyle="#FFC100",a.context.font="20px Monospace",a.context.fillText(`Loading: ${100*s.default.loadedPercentage}%`,o.CANVAS_WIDTH/2-70,o.CANVAS_HEIGHT/2-10),a.context.stroke()}}},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const o=i(1),s=i(2),a=i(0),l=i(3);e.default=class{constructor(){this.animationCounter=0,this.animationInterval=100,this.instructionsVisible=!0}enter(){window.addEventListener("keydown",this.handleMenuSelection)}exit(){window.removeEventListener("keydown",this.handleMenuSelection)}update(){this.animationCounter=(this.animationCounter+1)%this.animationInterval,this.animationCounter>=this.animationInterval/2?this.instructionsVisible=!1:this.instructionsVisible=!0}render(){this.drawMainMenu()}drawMainMenu(){a.context.beginPath(),a.context.fillStyle="#FFC100",a.context.font="12px Monospace",a.context.fillText("Retro 2D Top-Down Game Engine",o.CANVAS_WIDTH/2-106,o.CANVAS_HEIGHT/2-34),this.instructionsVisible&&(a.context.font="20px Monospace",a.context.fillText("Press any key to start",o.CANVAS_WIDTH/2-132,o.CANVAS_HEIGHT/2-10)),a.context.stroke()}handleMenuSelection(){s.default.stateManager.setState(l.default.PLAYING)}}},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const o=i(2),s=i(0),a=i(20),l=i(6),h=i(22),n=i(23),c=i(4),r=i(32),d=i(3);e.default=class{enter(t){t!==d.default.PAUSED&&this.startNewGame()}exit(t){t!==d.default.PAUSED&&(window.onblur=null)}update(){s.default.updateMousePosition(),h.default.update(this.player),this.player.update(),this.map.update()}render(){this.map.draw(),this.player.draw()}startNewGame(){this.grid=new n.default,this.player=new r.default(128,64),this.map=new c.default(this.grid,this.player),window.onblur=(()=>{o.default.stateManager.setState(d.default.PAUSED)}),a.default.init(this.player),l.default.init(this.player)}}},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const o=i(2),s=i(21);e.default=class{static init(t){document.addEventListener("keydown",e=>{switch(e.keyCode){case s.KEYBOARD_KEYS.w:t.moving.up=!0;break;case s.KEYBOARD_KEYS.a:t.moving.left=!0;break;case s.KEYBOARD_KEYS.s:t.moving.down=!0;break;case s.KEYBOARD_KEYS.d:t.moving.right=!0;break;case s.KEYBOARD_KEYS.ESC:case s.KEYBOARD_KEYS.p:o.default.togglePause()}}),document.addEventListener("keyup",e=>{switch(e.keyCode){case s.KEYBOARD_KEYS.w:t.moving.up=!1;break;case s.KEYBOARD_KEYS.a:t.moving.left=!1;break;case s.KEYBOARD_KEYS.s:t.moving.down=!1;break;case s.KEYBOARD_KEYS.d:t.moving.right=!1}})}}},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.KEYBOARD_KEYS={ENTER:13,ESC:27,w:87,a:65,s:83,d:68,p:80}},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const o=i(6);class s{static update(t){const e=navigator.getGamepads();e[0]&&(this.handleMovement(e[0],t),this.handleAiming(e[0]),this.handleButtons(e[0],t))}static handleMovement(t,e){const i=+t.axes[0].toFixed(2);i>0?e.moving.right=!0:i<0?e.moving.left=!0:(e.moving.left=!1,e.moving.right=!1);const o=+t.axes[1].toFixed(2);o>0?e.moving.down=!0:o<0?e.moving.up=!0:(e.moving.up=!1,e.moving.down=!1)}static handleAiming(t){const e=t.axes[2],i=t.axes[3];0!=+e.toFixed(2)&&(o.default.x+=e*this.aimModifier),0!=+i.toFixed(2)&&(o.default.y+=i*this.aimModifier)}static handleButtons(t,e){t.buttons[5].pressed?e.setShooting(!0):e.setShooting(!1)}}s.aimModifier=10,e.default=s},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const o=i(1);e.default=class{constructor(){this.rows=o.CANVAS_HEIGHT/o.TILE_SIZE,this.cols=o.CANVAS_WIDTH/o.TILE_SIZE}}},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const o=i(1),s=i(5),a=i(0),l=i(8),h=i(9),n=i(10),c=i(25),r=i(4),d=i(26);e.default=class extends d.default{constructor(t,e,i){super(t,e,new h.default(16,16),1,i),this.updateMapPosition()}update(t,e){this.adjustCollisionWithGameObjects(),this.adjustCollisionWithOtherEnemies(e),this.distanceFromPlayer=l.pointToPointDistance({x:t.x,y:t.y},{x:this.x,y:this.y}),this.determineIfThereAreObstaclesBetweenThisEnemyAndThePlayer(t),this.findPathToPlayer(t),this.move(),this.updateTileDeltas()}draw(t){this.drawCollisionBox(t)}takeDamage(t){s.default.playEnemyHit(),this.health-=t,this.health<=0?this.die():s.default.playEnemyHit()}die(){s.default.playEnemyDeath(),this.alive=!1}adjustCollisionWithGameObjects(){let t;if(r.gameObjects[this.row]){if(this.moving.left){(t=r.gameObjects[this.row][this.col-1])&&this.x-this.collisionBox.halfWidth<=t.mapX+t.width&&(this.x=t.mapX+t.width+this.collisionBox.halfWidth+1);const e=Math.floor((this.y+this.collisionBox.halfHeight-1)/o.TILE_SIZE);e&&e!==this.row&&(t=r.gameObjects[e][this.col-1])&&this.x-this.collisionBox.halfWidth<=t.mapX+t.width&&(this.moving.down&&this.deltas.dyTop<=this.deltas.dxRight||(this.x=t.mapX+t.width+this.collisionBox.halfWidth+1));const i=Math.floor((this.y-this.collisionBox.halfHeight)/o.TILE_SIZE);i&&i!==this.row&&(t=r.gameObjects[i][this.col-1])&&this.x-this.collisionBox.halfWidth<=t.mapX+t.width&&(this.moving.up&&this.deltas.dyBottom<=this.deltas.dxRight||(this.x=t.mapX+t.width+this.collisionBox.halfWidth+1))}if(this.moving.right){(t=r.gameObjects[this.row][this.col+1])&&this.x+this.collisionBox.halfWidth>=t.mapX&&(this.x=t.mapX-this.collisionBox.halfWidth-1);const e=Math.floor((this.y+this.collisionBox.halfHeight-1)/o.TILE_SIZE);e&&e!==this.row&&(t=r.gameObjects[e][this.col+1])&&this.x+this.collisionBox.halfWidth>=t.mapX&&(this.moving.down&&this.deltas.dyTop<=this.deltas.dxLeft||(this.x=t.mapX-this.collisionBox.halfWidth-1));const i=Math.floor((this.y-this.collisionBox.halfHeight)/o.TILE_SIZE);e&&i!==this.row&&(t=r.gameObjects[i][this.col+1])&&this.x+this.collisionBox.halfWidth>=t.mapX&&(this.moving.up&&this.deltas.dyBottom<=this.deltas.dxLeft||(this.x=t.mapX-this.collisionBox.halfWidth-1))}}if(r.gameObjects[this.row-1]&&this.moving.up){(t=r.gameObjects[this.row-1][this.col])&&this.y-this.collisionBox.halfHeight<=t.mapY+t.height&&(this.y=t.mapY+t.height+this.collisionBox.halfHeight+1);const e=Math.floor((this.x+this.collisionBox.halfWidth-1)/o.TILE_SIZE);e&&e!==this.col&&(t=r.gameObjects[this.row-1][e])&&this.y-this.collisionBox.halfHeight<=t.mapY+t.height&&(this.moving.right&&this.deltas.dyBottom>this.deltas.dxLeft||(this.y=t.mapY+t.height+this.collisionBox.halfHeight+1));const i=Math.floor((this.x-this.collisionBox.halfWidth)/o.TILE_SIZE);i&&i!==this.col&&(t=r.gameObjects[this.row-1][i])&&this.y-this.collisionBox.halfHeight<=t.mapY+t.height&&(this.moving.left&&this.deltas.dyBottom>this.deltas.dxRight||(this.y=t.mapY+t.height+this.collisionBox.halfHeight+1))}if(r.gameObjects[this.row+1]){this.moving.down&&(t=r.gameObjects[this.row+1][this.col])&&this.y+this.collisionBox.halfHeight>=t.mapY&&(this.y=t.mapY-this.collisionBox.halfHeight-1);const e=Math.floor((this.x+this.collisionBox.halfWidth-1)/o.TILE_SIZE);e&&e!==this.col&&(t=r.gameObjects[this.row+1][e])&&this.y+this.collisionBox.halfHeight>=t.mapY&&(this.moving.right&&this.deltas.dyTop>this.deltas.dxLeft||(this.y=t.mapY-this.collisionBox.halfHeight-1));const i=Math.floor((this.x-this.collisionBox.halfWidth)/o.TILE_SIZE);i&&i!==this.col&&(t=r.gameObjects[this.row+1][i])&&this.y+this.collisionBox.halfHeight>=t.mapY&&(this.moving.left&&this.deltas.dyTop>this.deltas.dxRight||(this.y=t.mapY-this.collisionBox.halfHeight-1))}}findPathToPlayer(t){this.thereAreObstaclesBetweenPlayerAndThisEnemy?(this.pathfindingNodes=c.generatePathNodes(this.row,this.col,this.collisionBox),this.moveTowardsPlayer(t)):(this.pathfindingNodes&&(this.pathfindingNodes=null),this.moveTowardsPlayer(t))}moveTowardsPlayer(t){this.distanceFromPlayer>1&&this.moveTowards(t.x,t.y)}moveTowards(t,e){this.moving.left=!1,this.moving.right=!1,this.moving.up=!1,this.moving.down=!1,this.x<t?this.moving.right=!0:this.x>t&&(this.moving.left=!0),this.y<e?this.moving.down=!0:this.y>e&&(this.moving.up=!0)}move(){this.moving.left&&(this.moving.up||this.moving.down?this.x-=this.maxSpeedDiagonal:this.x-=this.maxSpeed),this.moving.right&&(this.moving.up||this.moving.down?this.x+=this.maxSpeedDiagonal:this.x+=this.maxSpeed),this.moving.up&&(this.moving.left||this.moving.right?this.y-=this.maxSpeedDiagonal:this.y-=this.maxSpeed),this.moving.down&&(this.moving.left||this.moving.right?this.y+=this.maxSpeedDiagonal:this.y+=this.maxSpeed),this.updateMapPosition()}updateMapPosition(){this.row=Math.floor(this.y/o.TILE_SIZE),this.col=Math.floor(this.x/o.TILE_SIZE)}updateTileDeltas(){this.deltas.dyTop=this.y%o.TILE_SIZE,this.deltas.dyBottom=o.TILE_SIZE-this.deltas.dyTop,this.deltas.dxLeft=this.x%o.TILE_SIZE,this.deltas.dxRight=o.TILE_SIZE-this.deltas.dxLeft}determineIfThereAreObstaclesBetweenThisEnemyAndThePlayer(t){const e=l.angleBetweenPoints(t,this),{hitPoint:i}=n.default.cast(this,e,t);this.thereAreObstaclesBetweenPlayerAndThisEnemy=this.distanceFromPlayer>l.pointToPointDistance(i,{x:0,y:0})}drawCollisionBox(t){a.context.strokeStyle=this.getHealthColor(),a.context.lineWidth=.5,a.context.beginPath(),a.context.moveTo(.5+a.default.center.x+(this.x-t.x)-this.collisionBox.halfWidth,.5+a.default.center.y+(this.y-t.y)-this.collisionBox.halfHeight),a.context.lineTo(-.5+a.default.center.x+(this.x-t.x)+this.collisionBox.halfWidth,.5+a.default.center.y+(this.y-t.y)-this.collisionBox.halfHeight),a.context.lineTo(-.5+a.default.center.x+(this.x-t.x)+this.collisionBox.halfWidth,-.5+a.default.center.y+(this.y-t.y)+this.collisionBox.halfHeight),a.context.lineTo(.5+a.default.center.x+(this.x-t.x)-this.collisionBox.halfWidth,-.5+a.default.center.y+(this.y-t.y)+this.collisionBox.halfHeight),a.context.lineTo(.5+a.default.center.x+(this.x-t.x)-this.collisionBox.halfWidth,.5+a.default.center.y+(this.y-t.y)-this.collisionBox.halfHeight),a.context.stroke()}drawRayToPlayer(t){this.thereAreObstaclesBetweenPlayerAndThisEnemy?a.context.strokeStyle="#FFFF44":a.context.strokeStyle="#00F0FF",a.context.lineWidth=.5,a.context.beginPath(),a.context.moveTo(a.default.center.x+(this.x-t.x),a.default.center.y+(this.y-t.y)),a.context.lineTo(a.default.center.x,a.default.center.y),a.context.stroke()}}},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const o=i(0),s=i(4);function a(t,e,i){const o={N:s.gameObjects[e.row-1]?s.gameObjects[e.row-1][e.col]:null,NE:s.gameObjects[e.row-1]?s.gameObjects[e.row-1][e.col+1]:null,E:s.gameObjects[e.row]?s.gameObjects[e.row][e.col+1]:null,SE:s.gameObjects[e.row+1]?s.gameObjects[e.row+1][e.col+1]:null,S:s.gameObjects[e.row+1]?s.gameObjects[e.row+1][e.col]:null,SW:s.gameObjects[e.row+1]?s.gameObjects[e.row+1][e.col-1]:null,W:s.gameObjects[e.row]?s.gameObjects[e.row][e.col-1]:null,NW:s.gameObjects[e.row-1]?s.gameObjects[e.row-1][e.col-1]:null};let a=function(t,e,i){if(e.NE)return null;if(!e.N&&!e.E)return new l({x:t.mapX+t.width+i.halfWidth,y:t.mapY-i.halfHeight});if(e.N&&!e.E)return new l({x:t.mapX+t.width+i.halfWidth,y:t.mapY});if(!e.N&&e.E)return new l({x:t.mapX+t.width,y:t.mapY-i.halfHeight})}(e,o,i),h=function(t,e,i){if(e.SE)return null;if(!e.S&&!e.E)return new l({x:t.mapX+t.width+i.halfWidth,y:t.mapY+t.height+i.halfHeight});if(e.S&&!e.E)return new l({x:t.mapX+t.width+i.halfWidth,y:t.mapY+t.height});if(!e.S&&e.E)return new l({x:t.mapX+t.width,y:t.mapY+t.height+i.halfHeight})}(e,o,i),n=function(t,e,i){if(e.SW)return null;if(!e.S&&!e.W)return new l({x:t.mapX-i.halfWidth,y:t.mapY+t.height+i.halfHeight});if(e.S&&!e.W)return new l({x:t.mapX-i.halfWidth,y:t.mapY+t.height});if(!e.S&&e.W)return new l({x:t.mapX,y:t.mapY+t.height+i.halfHeight})}(e,o,i),c=function(t,e,i){if(e.NW)return null;if(!e.N&&!e.W)return new l({x:t.mapX-i.halfWidth,y:t.mapY-i.halfHeight});if(e.N&&!e.W)return new l({x:t.mapX-i.halfWidth,y:t.mapY});if(!e.N&&e.W)return new l({x:t.mapX,y:t.mapY-i.halfHeight})}(e,o,i);a&&(a.x<0||a.y<0)&&(a=null),h&&(h.x<0||h.y<0)&&(h=null),n&&(n.x<0||n.y<0)&&(n=null),c&&(c.x<0||c.y<0)&&(c=null),t.forEach(t=>{a&&t.x===a.x&&t.y===a.y&&(a=null),h&&t.x===h.x&&t.y===h.y&&(h=null),n&&t.x===n.x&&t.y===n.y&&(n=null),c&&t.x===c.x&&t.y===c.y&&(c=null)}),a&&t.push(a),h&&t.push(h),n&&t.push(n),c&&t.push(c)}e.generatePathNodes=function(t,e,i){const l=[];let h=t-o.default.halfRows-3,n=e-o.default.halfCols-2;const c=t+o.default.halfRows+3,r=e+o.default.halfCols+2;h<0&&(h=0),n<0&&(n=0);for(let t=h;t<c;++t)for(let e=n-1;e<r;++e)s.gameObjects[t]&&s.gameObjects[t][e]&&a(l,s.gameObjects[t][e],i);return l},e.drawPathNodes=function(t,e,i,s){t&&t.forEach(t=>(function(t,e,i,s){o.context.strokeStyle=s,o.context.lineWidth=.1,o.context.beginPath(),o.context.moveTo(.5+o.default.center.x+(t.x-i.x)-e.halfWidth,.5+o.default.center.y+(t.y-i.y)-e.halfHeight),o.context.lineTo(-.5+o.default.center.x+(t.x-i.x)+e.halfWidth,.5+o.default.center.y+(t.y-i.y)-e.halfHeight),o.context.lineTo(-.5+o.default.center.x+(t.x-i.x)+e.halfWidth,-.5+o.default.center.y+(t.y-i.y)+e.halfHeight),o.context.lineTo(.5+o.default.center.x+(t.x-i.x)-e.halfWidth,-.5+o.default.center.y+(t.y-i.y)+e.halfHeight),o.context.lineTo(.5+o.default.center.x+(t.x-i.x)-e.halfWidth,.5+o.default.center.y+(t.y-i.y)-e.halfHeight),o.context.stroke(),o.context.beginPath(),o.context.arc(o.default.center.x+(t.x-i.x),o.default.center.y+(t.y-i.y),1,0,2*Math.PI),o.context.stroke()})(t,e,i,s))},e.findShortestPath=function(){};class l{constructor(t){this.x=t.x,this.y=t.y}}e.PathNode=l},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const o=i(1);e.default=class{constructor(t,e,i,o,s){this.x=t,this.y=e,this.collisionBox=i,this.maxSpeed=o,this.alive=!0,this.maxHealth=100,this.moving={left:!1,right:!1,up:!1,down:!1},this.deltas={dyTop:0,dyBottom:0,dxLeft:0,dxRight:0},this.initializeHealth(s),this.maxSpeedDiagonal=Math.round(Math.sin(45)*this.maxSpeed)}isOnScreen(t,e){const i=2*o.TILE_SIZE;return Math.abs(this.x-t)<o.CANVAS_WIDTH/2+i&&Math.abs(this.y-e)<o.CANVAS_HEIGHT/2+i}collidesWithPlayer(t,e,i){return this.x-this.collisionBox.halfWidth<t+i.halfWidth&&this.x+this.collisionBox.halfWidth>t-i.halfWidth&&this.y-this.collisionBox.halfHeight<e+i.halfHeight&&this.y+this.collisionBox.halfHeight>e-i.halfHeight}collidesWithEnemy(t,e,i){return this.x-this.collisionBox.halfWidth<t+i.halfWidth&&this.x+this.collisionBox.halfWidth>t-i.halfWidth&&this.y-this.collisionBox.halfHeight<e+i.halfHeight&&this.y+this.collisionBox.halfHeight>e-i.halfHeight}adjustCollisionWithOtherEnemies(t){t.forEach(t=>{if(this!==t&&this.collidesWithEnemy(t.x,t.y,t.collisionBox)){let e,i;this.x<t.x?e=this.x+this.collisionBox.halfWidth-(t.x-t.collisionBox.halfWidth):this.x>t.x&&(e=t.x+t.collisionBox.halfWidth-(this.x-this.collisionBox.halfWidth)),this.y<t.y?i=this.y+this.collisionBox.halfHeight-(t.y-t.collisionBox.halfHeight):this.y>t.y&&(i=t.y+t.collisionBox.halfHeight-(this.y-this.collisionBox.halfHeight)),!e||e>i?this.y<t.y?t.y+=i:t.y-=i:(!i||e<i)&&(this.x<t.x?t.x+=e:t.x-=e)}})}getHealthColor(){return this.health<=.1*this.maxHealth?"#FF5700":this.health<=.2*this.maxHealth?"#FF7B00":this.health<=.3*this.maxHealth?"#FF9E00":this.health<=.4*this.maxHealth?"#FFC100":this.health<=.5*this.maxHealth?"#FFE400":this.health<=.6*this.maxHealth?"#FFF600":this.health<=.7*this.maxHealth?"#E5FF00":this.health<=.8*this.maxHealth?"#D4FF00":this.health<=.9*this.maxHealth?"#B0FF00":this.health<this.maxHealth?"#8DFF00":this.health===this.maxHealth?"#6AFF00":void 0}initializeHealth(t){(t<0||t>1)&&(t=1),this.health=this.maxHealth*t}}},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const o=i(11),s=i(28);e.default=class{static createGameObject(t,e,i){return o.isBox(i)?s.default.createBox(t,e,i):null}}},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const o=i(1),s=i(29),a=i(11);e.default=class{static createBox(t,e,i){switch(i){case a.default.BoxGray:return new s.default(t,e,o.TILE_SIZE,o.TILE_SIZE,"#4B4B4B",!1);case a.default.BoxGreen:return new s.default(t,e,o.TILE_SIZE,o.TILE_SIZE,"#27531B");case a.default.BoxBlue:return new s.default(t,e,o.TILE_SIZE,o.TILE_SIZE,"#572F17");default:throw new Error("No such box!")}}}},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const o=i(1),s=i(0),a=i(5),l=i(30);e.default=class extends l.default{draw(){s.context.strokeStyle=this.color,s.context.lineWidth=1,s.context.beginPath(),s.context.moveTo(.5+this.x,.5+this.y),s.context.lineTo(-.5+this.x+o.TILE_SIZE,.5+this.y),s.context.lineTo(-.5+this.x+o.TILE_SIZE,-.5+this.y+o.TILE_SIZE),s.context.lineTo(.5+this.x,-.5+this.y+o.TILE_SIZE),s.context.lineTo(.5+this.x,.5+this.y),s.context.moveTo(.5+this.x,.5+this.y),s.context.lineTo(-.5+this.x+o.TILE_SIZE,-.5+this.y+o.TILE_SIZE),s.context.moveTo(-.5+this.x+o.TILE_SIZE,.5+this.y),s.context.lineTo(.5+this.x,-.5+this.y+o.TILE_SIZE),s.context.stroke()}takeDamage(t){a.default.playCrateHit()}}},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const o=i(1);e.default=class{constructor(t,e,i,s,a,l=!0){this.row=t,this.col=e,this.width=i,this.height=s,this.color=a,this.destructable=l,this.mapX=e*o.TILE_SIZE,this.mapY=t*o.TILE_SIZE}}},function(t){t.exports={gameObjects:[[1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0],[1,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,0,0,0,0,0,0,0,0],[1,0,0,0,0,0,0,2,0,0,1,0,0,0,0,1,0,0,0,0,0,0,0,0],[1,0,3,3,3,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,0,0],[1,0,0,3,0,0,0,0,0,0,1,0,2,3,0,2,0,0,0,0,0,1,0,0],[1,0,0,0,0,0,0,0,0,0,1,0,2,2,0,2,0,0,2,2,0,1,0,0],[1,0,0,0,0,3,3,0,1,1,1,0,0,0,0,1,0,0,2,3,0,1,1,1],[1,0,0,0,3,3,3,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1],[1,0,1,0,3,3,0,0,1,0,0,0,0,1,0,1,0,0,0,1,3,0,0,1],[1,0,0,0,0,0,0,0,2,0,0,0,0,0,0,1,0,0,0,3,2,0,0,1],[1,0,0,0,0,0,0,0,2,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1],[1,1,1,1,1,1,1,1,1,0,0,0,1,1,1,1,1,1,2,2,2,1,1,1],[0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0],[0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,3,3,3,0,0,0,1,0,0],[0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,3,3,3,0,1,1,1,0,0],[0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0],[0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0]],enemies:[{x:286,y:88,healthPercentage:1},{x:368,y:90,healthPercentage:.5},{x:668,y:250,healthPercentage:.8},{x:568,y:220,healthPercentage:.3},{x:540,y:220,healthPercentage:.3}]}},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const o=i(1),s=i(0),a=i(10),l=i(9),h=i(8),n=i(4),c=i(33),r=i(34),d=i(5),u=i(2),f=i(3);e.default=class{constructor(t,e){this.x=t,this.y=e,this.alive=!0,this.rotation=0,this.moving={left:!1,right:!1,up:!1,down:!1},this.sightLineLength=10,this.deltas={dyTop:0,dyBottom:0,dxLeft:0,dxRight:0},this.collisionBox=new l.default(12,12),this.maxSpeed=3,this.maxSpeedDiagonal=Math.round(Math.sin(45)*this.maxSpeed),this.shooting=!1,this.shootingCooldown=6,this.projectiles=[],this.updateMapPosition()}update(){this.move(),this.updateTileDeltas(),this.shoot(),this.projectiles.forEach((t,e)=>{t.update(this.x,this.y),!1===t.alive&&this.projectiles.splice(e,1)})}shoot(){if(this.shooting&&this.shootingCooldown<=0){const t=s.default.mousePosition.x-s.default.center.x,e=s.default.mousePosition.y-s.default.center.y;let i=t/(Math.abs(t)+Math.abs(e)),o=e/(Math.abs(t)+Math.abs(e));const a=.1*Math.random()-.05,l=.1*Math.random()-.05;i+=a,o+=l,this.projectiles.push(new r.default(this.x,this.y,i,o)),this.shootingCooldown=6,d.default.playSMG()}else--this.shootingCooldown}setShooting(t){this.shooting=t}draw(){const t=this.calculateTheta();this.drawPlayer(t),this.drawPlayerVisionRay(t),c.default.draw(),this.drawProjectiles()}move(){this.moving.left&&(this.moving.up||this.moving.down?this.x-=this.maxSpeedDiagonal:this.x-=this.maxSpeed),this.moving.right&&(this.moving.up||this.moving.down?this.x+=this.maxSpeedDiagonal:this.x+=this.maxSpeed),this.moving.up&&(this.moving.left||this.moving.right?this.y-=this.maxSpeedDiagonal:this.y-=this.maxSpeed),this.moving.down&&(this.moving.left||this.moving.right?this.y+=this.maxSpeedDiagonal:this.y+=this.maxSpeed),this.adjustCollisionWithGameObjects(),this.checkForCollisionWithEnemies(),this.updateMapPosition()}calculateTheta(){const t=h.angleBetweenPoints(s.default.mousePosition,s.default.center);return s.context.fillStyle="#44FF44",s.context.fillText(`θ = ${t.toFixed(2)}`,10,56),t}drawPlayer(t){s.context.beginPath(),s.context.fillStyle="#00AA00",s.context.font="10px Monospace",s.context.fillText(`p (${this.x}, ${this.y})`,10,20),s.context.strokeStyle="#523DA5",s.context.lineWidth=2,s.context.moveTo(s.default.center.x,s.default.center.y),s.context.lineTo(s.default.center.x+this.sightLineLength*Math.cos(t),s.default.center.y+this.sightLineLength*Math.sin(t)),s.context.stroke(),this.drawCollisionBox()}drawCollisionBox(){s.context.lineWidth=1,s.context.beginPath(),s.context.moveTo(-.5+s.default.center.x-this.collisionBox.halfWidth,-.5+s.default.center.y-this.collisionBox.halfHeight),s.context.lineTo(.5+s.default.center.x+this.collisionBox.halfWidth,-.5+s.default.center.y-this.collisionBox.halfHeight),s.context.lineTo(.5+s.default.center.x+this.collisionBox.halfWidth,.5+s.default.center.y+this.collisionBox.halfHeight),s.context.lineTo(-.5+s.default.center.x-this.collisionBox.halfWidth,.5+s.default.center.y+this.collisionBox.halfHeight),s.context.lineTo(-.5+s.default.center.x-this.collisionBox.halfWidth,-.5+s.default.center.y-this.collisionBox.halfHeight),s.context.stroke()}drawPlayerVisionRay(t){const{hitPoint:e,hitObject:i}=a.default.cast(this,t);e&&(i?a.default.drawRay(e,"#FF4444"):a.default.drawRay(e))}drawProjectiles(){this.projectiles.forEach(t=>t.draw(this.x,this.y))}updateMapPosition(){this.row=Math.floor(this.y/o.TILE_SIZE),this.col=Math.floor(this.x/o.TILE_SIZE)}updateTileDeltas(){this.deltas.dyTop=this.y%o.TILE_SIZE,this.deltas.dyBottom=o.TILE_SIZE-this.deltas.dyTop,this.deltas.dxLeft=this.x%o.TILE_SIZE,this.deltas.dxRight=o.TILE_SIZE-this.deltas.dxLeft}adjustCollisionWithGameObjects(){let t;if(n.gameObjects[this.row]){if(this.moving.left){(t=n.gameObjects[this.row][this.col-1])&&this.x-this.collisionBox.halfWidth<=t.mapX+t.width&&(this.x=t.mapX+t.width+this.collisionBox.halfWidth+1);const e=Math.floor((this.y+this.collisionBox.halfHeight-1)/o.TILE_SIZE);e&&e!==this.row&&(t=n.gameObjects[e][this.col-1])&&this.x-this.collisionBox.halfWidth<=t.mapX+t.width&&(this.moving.down&&this.deltas.dyTop<=this.deltas.dxRight||(this.x=t.mapX+t.width+this.collisionBox.halfWidth+1));const i=Math.floor((this.y-this.collisionBox.halfHeight)/o.TILE_SIZE);i&&i!==this.row&&(t=n.gameObjects[i][this.col-1])&&this.x-this.collisionBox.halfWidth<=t.mapX+t.width&&(this.moving.up&&this.deltas.dyBottom<=this.deltas.dxRight||(this.x=t.mapX+t.width+this.collisionBox.halfWidth+1))}if(this.moving.right){(t=n.gameObjects[this.row][this.col+1])&&this.x+this.collisionBox.halfWidth>=t.mapX&&(this.x=t.mapX-this.collisionBox.halfWidth-1);const e=Math.floor((this.y+this.collisionBox.halfHeight-1)/o.TILE_SIZE);e&&e!==this.row&&(t=n.gameObjects[e][this.col+1])&&this.x+this.collisionBox.halfWidth>=t.mapX&&(this.moving.down&&this.deltas.dyTop<=this.deltas.dxLeft||(this.x=t.mapX-this.collisionBox.halfWidth-1));const i=Math.floor((this.y-this.collisionBox.halfHeight)/o.TILE_SIZE);e&&i!==this.row&&(t=n.gameObjects[i][this.col+1])&&this.x+this.collisionBox.halfWidth>=t.mapX&&(this.moving.up&&this.deltas.dyBottom<=this.deltas.dxLeft||(this.x=t.mapX-this.collisionBox.halfWidth-1))}}if(n.gameObjects[this.row-1]&&this.moving.up){(t=n.gameObjects[this.row-1][this.col])&&this.y-this.collisionBox.halfHeight<=t.mapY+t.height&&(this.y=t.mapY+t.height+this.collisionBox.halfHeight+1);const e=Math.floor((this.x+this.collisionBox.halfWidth-1)/o.TILE_SIZE);e&&e!==this.col&&(t=n.gameObjects[this.row-1][e])&&this.y-this.collisionBox.halfHeight<=t.mapY+t.height&&(this.moving.right&&this.deltas.dyBottom>this.deltas.dxLeft||(this.y=t.mapY+t.height+this.collisionBox.halfHeight+1));const i=Math.floor((this.x-this.collisionBox.halfWidth)/o.TILE_SIZE);i&&i!==this.col&&(t=n.gameObjects[this.row-1][i])&&this.y-this.collisionBox.halfHeight<=t.mapY+t.height&&(this.moving.left&&this.deltas.dyBottom>this.deltas.dxRight||(this.y=t.mapY+t.height+this.collisionBox.halfHeight+1))}if(n.gameObjects[this.row+1]){this.moving.down&&(t=n.gameObjects[this.row+1][this.col])&&this.y+this.collisionBox.halfHeight>=t.mapY&&(this.y=t.mapY-this.collisionBox.halfHeight-1);const e=Math.floor((this.x+this.collisionBox.halfWidth-1)/o.TILE_SIZE);e&&e!==this.col&&(t=n.gameObjects[this.row+1][e])&&this.y+this.collisionBox.halfHeight>=t.mapY&&(this.moving.right&&this.deltas.dyTop>this.deltas.dxLeft||(this.y=t.mapY-this.collisionBox.halfHeight-1));const i=Math.floor((this.x-this.collisionBox.halfWidth)/o.TILE_SIZE);i&&i!==this.col&&(t=n.gameObjects[this.row+1][i])&&this.y+this.collisionBox.halfHeight>=t.mapY&&(this.moving.left&&this.deltas.dyTop>this.deltas.dxRight||(this.y=t.mapY-this.collisionBox.halfHeight-1))}}checkForCollisionWithEnemies(){n.getEnemiesOnScreen(this.x,this.y).filter(t=>t.collidesWithPlayer(this.x,this.y,this.collisionBox)).length>0&&this.die()}die(){this.alive=!1,u.default.stateManager.setState(f.default.PAUSED)}}},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const o=i(0);e.default=class{static draw(){const t=o.default.mousePosition.x,e=o.default.mousePosition.y;let i,s;o.context.strokeStyle="#FFFFFF",o.context.lineWidth=.5,o.context.beginPath(),i=.5,s=-1.5,o.context.moveTo(t+i,e+s),s=-3.5,o.context.lineTo(t+i,e+s),s=2.5,o.context.moveTo(t+i,e+s),s=4.5,o.context.lineTo(t+i,e+s),s=.5,i=-3.5,o.context.moveTo(t+i,e+s),i=-1.5,o.context.lineTo(t+i,e+s),i=2.5,o.context.moveTo(t+i,e+s),i=4.5,o.context.lineTo(t+i,e+s),o.context.stroke()}}},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const o=i(1),s=i(0),a=i(4);e.default=class{constructor(t,e,i,o){this.x=t,this.y=e,this.directionX=i,this.directionY=o,this.speed=24,this.damage=10,this.alive=!0,this.numberOfIntermediatePositions=3,this.intermediatePositions=[];for(let t=0;t<this.numberOfIntermediatePositions;++t)this.intermediatePositions[t]={x:null,y:null,row:null,col:null}}update(t,e){this.previousX=this.x,this.previousY=this.y,this.x+=this.directionX*this.speed,this.y+=this.directionY*this.speed,this.row=Math.floor(this.y/o.TILE_SIZE),this.col=Math.floor(this.x/o.TILE_SIZE);const i=this.getNearbyEnemies();this.calculateIntermediatePoints(),this.isOffScreen(t,e)&&(this.alive=!1),this.intermediatePositions.forEach(t=>{this.alive&&(this.checkCollisionWithEnemies(i,t),this.checkCollisionWithGameObject(t))}),this.alive&&(this.checkCollisionWithEnemies(i),this.checkCollisionWithGameObject())}draw(t,e){this.x===t&&this.y===e||(s.context.strokeStyle="#8AFCFF",s.context.lineWidth=1,s.context.beginPath(),s.context.arc(this.x+s.default.center.x-t,this.y+s.default.center.y-e,2,0,2*Math.PI),s.context.stroke())}getNearbyEnemies(){return[...a.enemies].filter(t=>Math.abs(t.x-this.x)<=o.TILE_SIZE&&Math.abs(t.y-this.y)<=o.TILE_SIZE)}calculateIntermediatePoints(){const t=(this.x-this.previousX)/(this.numberOfIntermediatePositions+1),e=(this.y-this.previousY)/(this.numberOfIntermediatePositions+1);for(let i=this.numberOfIntermediatePositions-1;i>=0;--i)this.intermediatePositions[i].x=this.x-t*(i+1),this.intermediatePositions[i].y=this.y-e*(i+1),this.intermediatePositions[i].row=Math.floor(this.intermediatePositions[i].y/o.TILE_SIZE),this.intermediatePositions[i].col=Math.floor(this.intermediatePositions[i].x/o.TILE_SIZE)}isOffScreen(t,e){return this.x<t-s.default.center.x-o.TILE_SIZE||this.x>t+s.default.center.x+o.TILE_SIZE||this.y<e-s.default.center.y-o.TILE_SIZE||this.y>e+s.default.center.y+o.TILE_SIZE}checkCollisionWithEnemies(t,e){e||(e=this),t.forEach(t=>{e.x>=t.x-t.collisionBox.halfWidth&&e.x<=t.x+t.collisionBox.halfWidth&&e.y>=t.y-t.collisionBox.halfHeight&&e.y<=t.y+t.collisionBox.halfHeight&&(this.alive=!1,t.takeDamage(this.getDamage()))})}checkCollisionWithGameObject(t){t||(t=this);const e=a.gameObjects[t.row][t.col];e&&(e.takeDamage(this.getDamage()),this.alive=!1,e.destructable&&(a.gameObjects[t.row][t.col]=null))}getDamage(){return this.damage}}},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const o=i(1),s=i(0),a=i(3);e.default=class{enter(){}exit(){}update(){}render(){a.default.PLAYING.render(),this.drawPauseMenu()}drawPauseMenu(){s.context.beginPath(),s.context.fillStyle="#FFC100",s.context.font="20px Monospace",s.context.fillText("Paused",o.CANVAS_WIDTH/2-36,o.CANVAS_HEIGHT/2-54),s.context.font="12px Monospace",s.context.fillText("  p - Resume",o.CANVAS_WIDTH/2-50,o.CANVAS_HEIGHT/2-34),s.context.fillText("ESC - Main Menu",o.CANVAS_WIDTH/2-50,o.CANVAS_HEIGHT/2-18),s.context.stroke()}}},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const o=i(3);e.default=class{constructor(){this.currentState=o.default.LOADING}getState(){return this.currentState}setState(t){this.currentState.exit(t);const e=this.currentState;return t.enter(e),this.currentState=t,this.currentState}update(){this.currentState.update()}render(){this.currentState.render()}}},function(t,e,i){"use strict";var o;Object.defineProperty(e,"__esModule",{value:!0}),function(t){t[t.Audio=0]="Audio"}(o||(o={})),e.default=o}]);
//# sourceMappingURL=app.js.map