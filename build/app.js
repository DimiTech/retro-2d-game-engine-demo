(()=>{"use strict";var t={4706:(t,e,i)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.load=void 0;const a=i(4675);e.load=function(t){return new Promise(((e,i)=>{const o=new XMLHttpRequest;o.open("GET",t,!0),o.responseType="arraybuffer",o.onload=()=>{a.default.decodeAudioData(o.response,(t=>e(t)))},o.send()}))}},4675:(t,e)=>{Object.defineProperty(e,"__esModule",{value:!0});const i=new AudioContext;e.default=i},3549:(t,e,i)=>{Object.defineProperty(e,"__esModule",{value:!0});const a=i(5789);e.default=class{static async load(t){await a.default.load(t)}}},3287:(t,e)=>{Object.defineProperty(e,"__esModule",{value:!0});class i{static get musicVolume(){return this._musicVolume}static set musicVolume(t){t>=0&&t<=1&&(this._musicVolume=t)}static get soundFxVolume(){return this._soundFxVolume}static set soundFxVolume(t){t>=0&&t<=1&&(this._soundFxVolume=t)}}e.default=i,i._musicVolume=.3,i._soundFxVolume=.15},5789:(t,e,i)=>{Object.defineProperty(e,"__esModule",{value:!0});const a=i(3287),o=i(4675),s=i(4706);class n{static async load(t){const e=[s.load("./audio/player_death_1.wav"),s.load("./audio/smg_1.wav"),s.load("./audio/smg_2.wav"),s.load("./audio/smg_3.wav"),s.load("./audio/smg_4.wav"),s.load("./audio/smg_5.wav"),s.load("./audio/crate_hit_1.wav"),s.load("./audio/player_hit_1.mp3"),s.load("./audio/player_hit_2.mp3"),s.load("./audio/player_hit_3.mp3"),s.load("./audio/player_hit_4.mp3"),s.load("./audio/player_hit_5.mp3"),s.load("./audio/enemy_attack_1.wav"),s.load("./audio/enemy_attack_2.wav"),s.load("./audio/enemy_attack_miss.wav"),s.load("./audio/enemy_hit_1.wav"),s.load("./audio/enemy_hit_2.wav"),s.load("./audio/enemy_hit_3.wav"),s.load("./audio/enemy_death_1.wav"),s.load("./audio/enemy_death_2.wav"),s.load("./audio/enemy_death_3.wav")],i=await Promise.all(e);this.PLAYER_DEATH[0]=i[0],this.SMG[0]=i[1],this.SMG[1]=i[2],this.SMG[2]=i[3],this.SMG[3]=i[4],this.SMG[4]=i[5],this.CRATE_HIT[0]=i[6],this.PLAYER_HIT[0]=i[7],this.PLAYER_HIT[1]=i[8],this.PLAYER_HIT[2]=i[9],this.PLAYER_HIT[3]=i[10],this.PLAYER_HIT[4]=i[11],t(.5),this.ENEMY_ATTACK[0]=i[12],this.ENEMY_ATTACK[1]=i[13],this.ENEMY_ATTACK_MISS[0]=i[14],this.ENEMY_HIT[0]=i[15],this.ENEMY_HIT[1]=i[16],this.ENEMY_HIT[2]=i[17],this.ENEMY_DEATH[0]=i[18],this.ENEMY_DEATH[2]=i[19],this.ENEMY_DEATH[2]=i[20],t(1)}static playPlayerDeath(){const t=o.default.createBufferSource();t.buffer=this.PLAYER_DEATH[0];const e=o.default.createGain();e.gain.value=a.default.soundFxVolume,t.connect(e),e.connect(o.default.destination),t.start()}static playSMG(){const t=o.default.createBufferSource();t.buffer=this.SMG[this.SMG_INDEX];const e=o.default.createGain();e.gain.value=.2*a.default.soundFxVolume,t.connect(e),e.connect(o.default.destination),t.start(),this.SMG_INDEX=++this.SMG_INDEX%this.SMG.length}static playPlayerHit(){if(!1===this.PLAYER_HIT_READY)return;const t=o.default.createBufferSource();t.buffer=this.PLAYER_HIT[this.PLAYER_HIT_INDEX];const e=o.default.createGain();e.gain.value=a.default.soundFxVolume,t.connect(e),e.connect(o.default.destination),t.start(),this.PLAYER_HIT_INDEX=++this.PLAYER_HIT_INDEX%this.PLAYER_HIT.length,this.PLAYER_HIT_READY=!1,setTimeout((()=>{this.PLAYER_HIT_READY=!0}),500)}static playEnemyAttack(){const t=o.default.createBufferSource(),e=Math.floor(Math.random()*this.ENEMY_ATTACK.length);t.buffer=this.ENEMY_ATTACK[e];const i=o.default.createGain();i.gain.value=a.default.soundFxVolume,t.connect(i),i.connect(o.default.destination),t.start()}static playEnemyAttackMiss(){const t=o.default.createBufferSource();t.buffer=this.ENEMY_ATTACK_MISS[0];const e=o.default.createGain();e.gain.value=a.default.soundFxVolume,t.connect(e),e.connect(o.default.destination),t.start()}static playEnemyHit(){if(!1===this.ENEMY_HIT_READY)return;const t=o.default.createBufferSource(),e=Math.floor(Math.random()*this.ENEMY_HIT.length);t.buffer=this.ENEMY_HIT[e];const i=o.default.createGain();i.gain.value=a.default.soundFxVolume,t.connect(i),i.connect(o.default.destination),t.start(),this.ENEMY_HIT_READY=!1,setTimeout((()=>{this.ENEMY_HIT_READY=!0}),200)}static playEnemyDeath(){const t=o.default.createBufferSource(),e=Math.floor(Math.random()*this.ENEMY_DEATH.length);t.buffer=this.ENEMY_DEATH[e];const i=o.default.createGain();i.gain.value=a.default.soundFxVolume,t.connect(i),i.connect(o.default.destination),t.start()}static playWallHit(){const t=o.default.createBufferSource();t.buffer=this.CRATE_HIT[0];const e=o.default.createGain();e.gain.value=a.default.soundFxVolume,t.connect(e),e.connect(o.default.destination),t.start()}}e.default=n,n.PLAYER_DEATH=[],n.SMG=[],n.SMG_INDEX=0,n.CRATE_HIT=[],n.PLAYER_HIT=[],n.PLAYER_HIT_INDEX=0,n.PLAYER_HIT_READY=!0,n.ENEMY_ATTACK=[],n.ENEMY_ATTACK_MISS=[],n.ENEMY_HIT=[],n.ENEMY_HIT_READY=!0,n.ENEMY_DEATH=[]},4458:(t,e,i)=>{Object.defineProperty(e,"__esModule",{value:!0});const a=i(7204);e.default=class{constructor(){this.oneShotAnimation=!1}advanceAnimation(){if(this.animationFinished&&this.oneShotAnimation)return;this.animationProgress=this.animationProgress+a.default.elapsedTimeFactor;const t=this.animationProgress/this.animationLength;this.animationSpritePosition=Math.floor(t*this.numberOfSpritesInAnimation)%this.numberOfSpritesInAnimation,this.animationFinished=t>=1}resetAnimation(){this.animationFinished=!1,this.animationProgress=0,this.animationSpritePosition=0}draw(t,e){this.sprite.draw(t,e,this.animationSpritePosition)}}},5198:(t,e)=>{var i;Object.defineProperty(e,"__esModule",{value:!0}),function(t){t.Miss="Miss",t.Critical="Critical"}(i||(i={})),e.default=i},1625:(t,e,i)=>{Object.defineProperty(e,"__esModule",{value:!0});const a=i(8861),o=i(5035),s=i(7204),n=i(6322),l=i(2422),r=i(9239),h=i(2187);e.default=class{constructor(t,e,i,a,o){this.x=t,this.y=e,this.collisionBox=i,this.speed=a,this.prevHistoryLength=8,this.prevX=[],this.prevY=[],this.maxHealth=100,this.state=h.default.Idling,this.previousState=h.default.Idling,this.animationSpritePosition=0,this.movingDirections={left:!1,right:!1,up:!1,down:!1},this.moving={left:!1,right:!1,up:!1,down:!1},this.blocked={left:!1,right:!1,up:!1,down:!1},this.deltas={dyTop:0,dyBottom:0,dxLeft:0,dxRight:0},this.widgets={},this.movementAccumulator={left:0,right:0,up:0,down:0},this.maxSpeed=this.speed,this.maxSpeedDiagonal=Math.sin(45)*this.speed,this.initializeHealth(o),this.updateMapPosition()}resetMoving(){this.moving.left=!1,this.moving.right=!1,this.moving.up=!1,this.moving.down=!1,this.movingDirections.left=!1,this.movingDirections.right=!1,this.movingDirections.up=!1,this.movingDirections.down=!1}resetBlocked(){this.blocked.up=!1,this.blocked.down=!1,this.blocked.left=!1,this.blocked.right=!1}calculateNextCoordinates(){if(this.nextX=this.x,this.nextY=this.y,this.moving.left){const t=this.moving.up||this.moving.down;this.nextX-=this.calculateMovementAmountPixels(l.MovingDirections.left,t,!1)}if(this.moving.right){const t=this.moving.up||this.moving.down;this.nextX+=this.calculateMovementAmountPixels(l.MovingDirections.right,t,!1)}if(this.moving.up){const t=this.moving.left||this.moving.right;this.nextY-=this.calculateMovementAmountPixels(l.MovingDirections.up,t,!1)}if(this.moving.down){const t=this.moving.left||this.moving.right;this.nextY+=this.calculateMovementAmountPixels(l.MovingDirections.down,t,!1)}}move(){if(this.moving.left&&!this.blocked.left&&this.horizontalMovementControlsAreNotJammed()){const t=this.moving.up||this.moving.down;this.x-=this.calculateMovementAmountPixels(l.MovingDirections.left,t)}if(this.moving.right&&!this.blocked.right&&this.horizontalMovementControlsAreNotJammed()){const t=this.moving.up||this.moving.down;this.x+=this.calculateMovementAmountPixels(l.MovingDirections.right,t)}if(this.moving.up&&!this.blocked.up&&this.verticalMovementControlsAreNotJammed()){const t=this.moving.left||this.moving.right;this.y-=this.calculateMovementAmountPixels(l.MovingDirections.up,t)}if(this.moving.down&&!this.blocked.down&&this.verticalMovementControlsAreNotJammed()){const t=this.moving.left||this.moving.right;this.y+=this.calculateMovementAmountPixels(l.MovingDirections.down,t)}this.updateMapPosition()}horizontalMovementControlsAreNotJammed(){return!1===(this.moving.left&&this.moving.right)}verticalMovementControlsAreNotJammed(){return!1===(this.moving.up&&this.moving.down)}calculateMovementAmountPixels(t,e,i=!0){const a=e?s.default.elapsedTimeFactor*this.maxSpeedDiagonal+this.movementAccumulator[t]:s.default.elapsedTimeFactor*this.maxSpeed+this.movementAccumulator[t],o=Math.floor(a);if(i){const e=a%1;this.movementAccumulator[t]=e}return o}updateMapPosition(){this.row=Math.floor(this.y/a.TILE_SIZE),this.col=Math.floor(this.x/a.TILE_SIZE)}updateTileDeltas(){this.deltas.dyTop=this.y%a.TILE_SIZE,this.deltas.dyBottom=a.TILE_SIZE-this.deltas.dyTop,this.deltas.dxLeft=this.x%a.TILE_SIZE,this.deltas.dxRight=a.TILE_SIZE-this.deltas.dxLeft}checkIfBlockedByCreature(t,e){if(n.collisionBoxesIntersect(e,t)){let i,a;e.x<t.x?i=e.x+e.collisionBox.halfWidth-(t.x-t.collisionBox.halfWidth):e.x>t.x&&(i=t.x+t.collisionBox.halfWidth-(e.x-e.collisionBox.halfWidth)),e.y<t.y?a=e.y+e.collisionBox.halfHeight-(t.y-t.collisionBox.halfHeight):e.y>t.y&&(a=t.y+t.collisionBox.halfHeight-(e.y-e.collisionBox.halfHeight)),!i||i>=a?e.y<t.y?this.blocked.down=!0:this.blocked.up=!0:(!a||i<a)&&(e.x<t.x?this.blocked.right=!0:this.blocked.left=!0)}}adjustCollisionWithWalls(){let t;if(this.moving.left){t=r.default.walls[this.row][this.col-1],t&&this.x-this.collisionBox.halfWidth-1<=t.mapX+t.width&&(this.x=t.mapX+t.width+this.collisionBox.halfWidth+1,this.movingDirections.left=!1);const e=Math.floor((this.y+this.collisionBox.halfHeight-1)/a.TILE_SIZE);e&&e!==this.row&&(t=r.default.walls[e][this.col-1],t&&this.x-this.collisionBox.halfWidth-1<=t.mapX+t.width&&(this.moving.down&&this.deltas.dyTop<=this.deltas.dxRight||(this.x=t.mapX+t.width+this.collisionBox.halfWidth+1,this.movingDirections.left=!1)));const i=Math.floor((this.y-this.collisionBox.halfHeight)/a.TILE_SIZE);i&&i!==this.row&&(t=r.default.walls[i][this.col-1],t&&this.x-this.collisionBox.halfWidth-1<=t.mapX+t.width&&(this.moving.up&&this.deltas.dyBottom<=this.deltas.dxRight||(this.x=t.mapX+t.width+this.collisionBox.halfWidth+1,this.movingDirections.left=!1)))}if(this.moving.right){t=r.default.walls[this.row][this.col+1],t&&this.x+this.collisionBox.halfWidth+1>=t.mapX&&(this.x=t.mapX-this.collisionBox.halfWidth-1,this.movingDirections.right=!1);const e=Math.floor((this.y+this.collisionBox.halfHeight-1)/a.TILE_SIZE);e&&e!==this.row&&(t=r.default.walls[e][this.col+1],t&&this.x+this.collisionBox.halfWidth+1>=t.mapX&&(this.moving.down&&this.deltas.dyTop<=this.deltas.dxLeft||(this.x=t.mapX-this.collisionBox.halfWidth-1,this.movingDirections.right=!1)));const i=Math.floor((this.y-this.collisionBox.halfHeight)/a.TILE_SIZE);e&&i!==this.row&&(t=r.default.walls[i][this.col+1],t&&this.x+this.collisionBox.halfWidth+1>=t.mapX&&(this.moving.up&&this.deltas.dyBottom<=this.deltas.dxLeft||(this.x=t.mapX-this.collisionBox.halfWidth-1,this.movingDirections.right=!1)))}if(this.moving.up){t=r.default.walls[this.row-1][this.col],t&&this.y-this.collisionBox.halfHeight-1<=t.mapY+t.height&&(this.y=t.mapY+t.height+this.collisionBox.halfHeight+1,this.movingDirections.up=!1);const e=Math.floor((this.x+this.collisionBox.halfWidth-1)/a.TILE_SIZE);e&&e!==this.col&&(t=r.default.walls[this.row-1][e],t&&this.y-this.collisionBox.halfHeight-1<=t.mapY+t.height&&(this.moving.right&&this.deltas.dyBottom>this.deltas.dxLeft||(this.y=t.mapY+t.height+this.collisionBox.halfHeight+1,this.movingDirections.up=!1)));const i=Math.floor((this.x-this.collisionBox.halfWidth)/a.TILE_SIZE);i&&i!==this.col&&(t=r.default.walls[this.row-1][i],t&&this.y-this.collisionBox.halfHeight-1<=t.mapY+t.height&&(this.moving.left&&this.deltas.dyBottom>this.deltas.dxRight||(this.y=t.mapY+t.height+this.collisionBox.halfHeight+1,this.movingDirections.up=!1)))}this.moving.down&&(t=r.default.walls[this.row+1][this.col],t&&this.y+this.collisionBox.halfHeight+1>=t.mapY&&(this.y=t.mapY-this.collisionBox.halfHeight-1,this.movingDirections.down=!1));const e=Math.floor((this.x+this.collisionBox.halfWidth-1)/a.TILE_SIZE);e&&e!==this.col&&(t=r.default.walls[this.row+1][e],t&&this.y+this.collisionBox.halfHeight+1>=t.mapY&&(this.moving.right&&this.deltas.dyTop>this.deltas.dxLeft||(this.y=t.mapY-this.collisionBox.halfHeight-1,this.movingDirections.down=!1)));const i=Math.floor((this.x-this.collisionBox.halfWidth)/a.TILE_SIZE);i&&i!==this.col&&(t=r.default.walls[this.row+1][i],t&&this.y+this.collisionBox.halfHeight+1>=t.mapY&&(this.moving.left&&this.deltas.dyTop>this.deltas.dxRight||(this.y=t.mapY-this.collisionBox.halfHeight-1,this.movingDirections.down=!1)))}updatePreviousCoordinates(){this.prevX.push(this.x),this.prevX.length>this.prevHistoryLength&&this.prevX.shift(),this.prevY.push(this.y),this.prevY.length>this.prevHistoryLength&&this.prevY.shift()}updateDirection(t){this.state===h.default.Attacking||this.state===h.default.AttackingCooldown||this.state===h.default.MovingCooldown?this.updateDirectionWhenNotMoving(t):this.updateDirectionWhenMoving()}updateDirectionWhenMoving(){const t=[];this.movingDirections.down&&!1===this.blocked.down?t.push(l.Directions.S):this.movingDirections.up&&!1===this.blocked.up&&t.push(l.Directions.N),this.movingDirections.right&&!1===this.blocked.right?t.push(l.Directions.E):this.movingDirections.left&&!1===this.blocked.left&&t.push(l.Directions.W);const e=t.join("")||this.direction||"S";this.direction=l.Directions[e]}updateDirectionWhenNotMoving(t){const e=o.angleBetweenPoints(t,this);this.direction=l.getDirectionBasedOnAngle(e)}checkIfMoving(){const t=this.prevX.every(((t,e)=>0===e||t===this.prevX[0])),e=this.prevY.every(((t,e)=>0===e||t===this.prevY[0]));return!t||!e}initializeHealth(t=1){(t<0||t>1)&&(t=1),this.health=this.maxHealth*t}getHealthColor(){return this.health<=.1*this.maxHealth?"#FF5700":this.health<=.2*this.maxHealth?"#FF7B00":this.health<=.3*this.maxHealth?"#FF9E00":this.health<=.4*this.maxHealth?"#FFC100":this.health<=.5*this.maxHealth?"#FFE400":this.health<=.6*this.maxHealth?"#FFF600":this.health<=.7*this.maxHealth?"#E5FF00":this.health<=.8*this.maxHealth?"#D4FF00":this.health<=.9*this.maxHealth?"#B0FF00":this.health<this.maxHealth?"#8DFF00":this.health===this.maxHealth?"#6AFF00":void 0}}},2187:(t,e)=>{var i;Object.defineProperty(e,"__esModule",{value:!0}),function(t){t[t.Idling=0]="Idling",t[t.Moving=1]="Moving",t[t.MovingCooldown=2]="MovingCooldown",t[t.Attacking=3]="Attacking",t[t.AttackingCooldown=4]="AttackingCooldown",t[t.Dying=5]="Dying",t[t.Decaying=6]="Decaying",t[t.Removed=7]="Removed"}(i||(i={})),e.default=i},1597:(t,e,i)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.LevelTimer=void 0;const a=i(9239),o=i(5899);class s{static resetToStartingLevel(){s.currentLevel=s.startingLevel,h.reset()}static nextLevel(){a.default.clear(),s.currentLevel++,h.reset()}static isLastLevel(){return s.currentLevel===s.lastLevel}}e.default=s,s.lastLevel=o.totalNumberOfMaps,s.startingLevel=1,s.currentLevel=s.startingLevel;const n=i(8861),l=i(4811),r=i(7204);class h{static incrementTimeSpentOnCurrentLevel(){h.timeSpentOnCurrentLevel+=r.default.frameElapsedTime}static reset(){h.timeSpentOnCurrentLevel=0}static debug_displayTimeSpentOnCurrentLevel(){l.context.beginPath(),l.context.fillStyle="#9999ff",l.context.font="8px Monospace";const t=Math.round(h.timeSpentOnCurrentLevel/1e3);l.context.fillText(`Level ${s.currentLevel} Time: ${t}`,10,n.CANVAS_HEIGHT-24),l.context.stroke()}}e.LevelTimer=h,h.timeSpentOnCurrentLevel=0},1108:(t,e,i)=>{Object.defineProperty(e,"__esModule",{value:!0});const a=i(8861),o=i(2063),s=i(7204),n=i(8015),l=i(4811),r=i(5035),h=i(6322),d=i(1533),c=i(5735),u=i(2187),f=i(9776),x=i(2887);class y extends f.default{constructor(t,e,i,o,s){super(t,e,new h.default(14,14),i,o),this.attackSpeed=.45,this.attackCooldownSpeed=.4,this.maxAttackTime=1e3*this.attackSpeed/a.GAME_SPEED,this.maxAttackCooldown=1e3*this.attackCooldownSpeed/a.GAME_SPEED,this.pathfindingTimer=9*s%this.pathfindingInterval,this.resetAttackTime(),this.resetAttackCooldown(),this.animations={[u.default.Idling]:new x.ConcreteEnemyAnimationIdling,[u.default.Moving]:new x.ConcreteEnemyAnimationMoving,[u.default.MovingCooldown]:new x.ConcreteEnemyAnimationMovingCooldown,[u.default.Attacking]:new x.ConcreteEnemyAnimationAttacking,[u.default.AttackingCooldown]:new x.ConcreteEnemyAnimationAttackingCooldown,[u.default.Dying]:new x.ConcreteEnemyAnimationDying,[u.default.Decaying]:new x.ConcreteEnemyAnimationDecaying}}update(t){if(this.state>=u.default.Dying)return super.update(t),void(o.default.stateManager.getState()===n.default.PLAYING&&this.advanceAnimation(!1));this.target||(this.target=t),this.resetBlocked(),this.calculateNextCoordinates(),this.updatePreviousCoordinates(),this.stuck=this.checkIfStuck(),this.state!==u.default.Idling&&this.state!==u.default.MovingCooldown&&this.state!==u.default.Attacking&&this.state!==u.default.AttackingCooldown&&this.previousState!==u.default.AttackingCooldown&&this.previousState!==u.default.MovingCooldown&&!1===this.checkIfMoving()&&this.setState(u.default.Idling),this.distanceFromTarget=r.pointToPointDistance({x:t.x,y:t.y},{x:this.x,y:this.y});const e=this.targetInRange(t);if(this.state!==u.default.Attacking&&this.state!==u.default.AttackingCooldown&&e&&(this.resetAttackTime(),this.setState(u.default.Attacking)),this.state===u.default.AttackingCooldown&&!1===e&&this.setState(u.default.Moving),this.state===u.default.Attacking){if(this.attackTime<=0&&this.attackCooldown<=0&&(this.attack(t),this.resetAttackTime(),this.resetAttackCooldown(),e))return void this.setState(u.default.AttackingCooldown);const i=this.attackTime!==this.maxAttackTime;!1===e&&!1===i&&this.setState(u.default.Moving)}this.thereAreObstaclesBetweenPlayerAndThisEnemy=d.default.determineIfThereAreObstaclesBetweenTwoPathNodes(this,t),this.state!==u.default.Idling&&this.state!==u.default.Moving||(this.findPathToPlayer(t,this.thereAreObstaclesBetweenPlayerAndThisEnemy),this.state!==u.default.Moving&&(!1===this.thereAreObstaclesBetweenPlayerAndThisEnemy||this.shortestPath.length>0)&&this.setState(u.default.Moving)),this.checkForCollisionWithOtherEnemies(t),this.checkForCollisionWithPlayer(t),this.state===u.default.Moving&&this.move(),this.updateTileDeltas(),this.adjustCollisionWithWalls(),this.updateDirection(t),super.update(t),o.default.stateManager.getState()===n.default.PLAYING&&(this.advanceAttackTimeAndCooldown(),this.advanceAnimation(e))}draw(t){a.DEBUG.ENEMY_COLLISION_BOX&&this.state<u.default.Dying&&this.debug_drawCollisionBox(t),a.DEBUG.RAY_TO_PLAYER&&this.debug_drawRayToPlayer(t),a.DEBUG.PATHFINDING_NODES&&c.debug_drawPathNodes(this.pathfindingNodes,t,this.getHealthColor()),a.DEBUG.SHORTEST_PATH_TO_PLAYER&&this.debug_drawShortestPathToPlayer(t),super.draw(t),a.DEBUG.ENEMY_STATE&&this.debug_drawState(t)}advanceAnimation(t){this.state===u.default.Attacking&&this.attackTime!==this.maxAttackTime&&this.animations[this.state].advanceAnimation(),this.state===u.default.AttackingCooldown?(this.animations[this.state].advanceAnimation(),this.animations[this.state].animationFinished&&(!0===t?this.setState(u.default.Attacking):this.setState(u.default.Moving))):this.state===u.default.Moving?this.animations[this.state].advanceAnimation():this.state===u.default.Dying?(this.animations[this.state].advanceAnimation(),this.animations[this.state].animationFinished&&this.setState(u.default.Decaying)):this.state===u.default.Decaying&&(this.animations[this.state].advanceAnimation(),this.animations[this.state].animationFinished&&this.setState(u.default.Removed))}findPathToPlayer(t,e){e?(0===this.pathfindingTimer&&(this.pathfindingNodes=c.generatePathNodes(Math.round(Math.abs(t.row+this.row)/2),Math.round(Math.abs(t.col+this.col)/2),this.collisionBox),this.shortestPath=c.findShortestPath(this,t,this.pathfindingNodes)),this.pathfindingTimer+=s.default.frameElapsedTime,this.pathfindingTimer>this.pathfindingInterval&&(this.pathfindingTimer=0),this.shortestPath.length>0&&this.followTheShortestPath()):(this.pathfindingNodes&&(this.pathfindingNodes=null),this.shortestPath&&(this.shortestPath=[]),this.moveTowardsPlayer(t))}followTheShortestPath(){let t=this.shortestPath[this.shortestPath.length-1].x,e=this.shortestPath[this.shortestPath.length-1].y;this.shortestPath.length>1&&Math.abs(t-this.x)<3&&Math.abs(e-this.y)<3&&(this.shortestPath.pop(),t=this.shortestPath[this.shortestPath.length-1].x,e=this.shortestPath[this.shortestPath.length-1].y),this.moveTowards(t,e)}moveTowardsPlayer(t){this.distanceFromTarget>this.collisionBox.width?this.moveTowards(t.x,t.y):this.resetMoving()}moveTowards(t,e){this.resetMoving(),this.x<t?(this.moving.right=!0,this.movingDirections.right=!0):this.x>t&&(this.moving.left=!0,this.movingDirections.left=!0),this.y<e?(this.moving.down=!0,this.movingDirections.down=!0):this.y>e&&(this.moving.up=!0,this.movingDirections.up=!0)}advanceAttackTimeAndCooldown(){this.state===u.default.Attacking&&this.attackTime>0&&0===this.attackCooldown&&(this.attackTime-=s.default.frameElapsedTime),this.attackTime===this.maxAttackTime&&this.attackCooldown>=0&&(this.attackCooldown-=s.default.frameElapsedTime,this.attackCooldown<0&&(this.attackCooldown=0))}debug_drawCollisionBox(t){l.context.strokeStyle=this.getHealthColor(),l.context.lineWidth=.2,l.context.beginPath(),l.context.moveTo(-.5+l.default.center.x+(this.x-t.x)-this.collisionBox.halfWidth,-.5+l.default.center.y+(this.y-t.y)-this.collisionBox.halfHeight),l.context.lineTo(.5+l.default.center.x+(this.x-t.x)+this.collisionBox.halfWidth,-.5+l.default.center.y+(this.y-t.y)-this.collisionBox.halfHeight),l.context.lineTo(.5+l.default.center.x+(this.x-t.x)+this.collisionBox.halfWidth,.5+l.default.center.y+(this.y-t.y)+this.collisionBox.halfHeight),l.context.lineTo(-.5+l.default.center.x+(this.x-t.x)-this.collisionBox.halfWidth,.5+l.default.center.y+(this.y-t.y)+this.collisionBox.halfHeight),l.context.lineTo(-.5+l.default.center.x+(this.x-t.x)-this.collisionBox.halfWidth,-.5+l.default.center.y+(this.y-t.y)-this.collisionBox.halfHeight),l.context.stroke()}debug_drawState(t){l.context.beginPath(),l.context.fillStyle="#FFC100",l.context.font="8px Monospace",l.context.fillText(this.state.toString(),l.default.center.x+(this.x-t.x)-this.collisionBox.halfWidth,l.default.center.y+(this.y-t.y)-this.collisionBox.halfHeight),l.context.stroke()}debug_drawRayToPlayer(t){this.thereAreObstaclesBetweenPlayerAndThisEnemy?l.context.strokeStyle="#FFFF44":l.context.strokeStyle="#00F0FF",l.context.lineWidth=.5,l.context.beginPath(),l.context.moveTo(l.default.center.x+(this.x-t.x),l.default.center.y+(this.y-t.y)),l.context.lineTo(l.default.center.x,l.default.center.y),l.context.stroke()}debug_drawShortestPathToPlayer(t){this.shortestPath.forEach(((e,i)=>{c.drawNode(e,t,e.visited?"#FF0000":"#FF00FF")})),this.shortestPath.length>0&&this.shortestPath.forEach(((e,i)=>{this.debug_drawRayFromPointToPoint(e,this.shortestPath[i-1]||t,t)}))}debug_drawRayFromPointToPoint(t,e,i){l.context.strokeStyle="#FF00FF",l.context.lineWidth=.2,l.context.beginPath(),l.context.moveTo(l.default.center.x+(e.x-i.x),l.default.center.y+(e.y-i.y)),l.context.lineTo(l.default.center.x+(t.x-i.x),l.default.center.y+(t.y-i.y)),l.context.stroke()}}e.default=y},1666:(t,e,i)=>{Object.defineProperty(e,"__esModule",{value:!0});const a=i(7843),o=i(4458);class s extends o.default{constructor(){super(...arguments),this.sprite=a.default.Zerg,this.animationLength=420,this.animationProgress=0,this.animationSpritePosition=0,this.numberOfSpritesInAnimation=5,this.oneShotAnimation=!0}}e.default=s},5576:(t,e,i)=>{Object.defineProperty(e,"__esModule",{value:!0});const a=i(7843),o=i(4458);class s extends o.default{constructor(){super(...arguments),this.sprite=a.default.Zerg,this.animationLength=0,this.animationProgress=0,this.animationSpritePosition=0,this.numberOfSpritesInAnimation=0}}e.default=s},2863:(t,e,i)=>{Object.defineProperty(e,"__esModule",{value:!0});const a=i(7843),o=i(4458);class s extends o.default{constructor(){super(...arguments),this.sprite=a.default.Decay,this.animationLength=1e4,this.animationProgress=0,this.animationSpritePosition=0,this.numberOfSpritesInAnimation=3}}e.default=s},414:(t,e,i)=>{Object.defineProperty(e,"__esModule",{value:!0});const a=i(7843),o=i(4458);class s extends o.default{constructor(){super(...arguments),this.sprite=a.default.Zerg,this.animationLength=500,this.animationProgress=0,this.animationSpritePosition=0,this.numberOfSpritesInAnimation=7}}e.default=s},5483:(t,e,i)=>{Object.defineProperty(e,"__esModule",{value:!0});const a=i(7843),o=i(4458);class s extends o.default{constructor(){super(...arguments),this.sprite=a.default.Zerg,this.animationLength=0,this.animationProgress=0,this.animationSpritePosition=0,this.numberOfSpritesInAnimation=0}}e.default=s},8625:(t,e,i)=>{Object.defineProperty(e,"__esModule",{value:!0});const a=i(7843),o=i(4458);class s extends o.default{constructor(){super(...arguments),this.sprite=a.default.Zerg,this.animationLength=330,this.animationProgress=0,this.animationSpritePosition=0,this.numberOfSpritesInAnimation=7}}e.default=s},5900:(t,e,i)=>{Object.defineProperty(e,"__esModule",{value:!0});const a=i(7843),o=i(4458);class s extends o.default{constructor(){super(...arguments),this.sprite=a.default.Zerg,this.animationLength=0,this.animationProgress=0,this.animationSpritePosition=0,this.numberOfSpritesInAnimation=0}}e.default=s},2887:(t,e,i)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.ConcreteEnemyAnimationDecaying=e.ConcreteEnemyAnimationDying=e.ConcreteEnemyAnimationAttackingCooldown=e.ConcreteEnemyAnimationAttacking=e.ConcreteEnemyAnimationMovingCooldown=e.ConcreteEnemyAnimationMoving=e.ConcreteEnemyAnimationIdling=void 0;const a=i(5483);e.ConcreteEnemyAnimationIdling=a.default;const o=i(8625);e.ConcreteEnemyAnimationMoving=o.default;const s=i(5900);e.ConcreteEnemyAnimationMovingCooldown=s.default;const n=i(1666);e.ConcreteEnemyAnimationAttacking=n.default;const l=i(5576);e.ConcreteEnemyAnimationAttackingCooldown=l.default;const r=i(414);e.ConcreteEnemyAnimationDying=r.default;const h=i(2863);e.ConcreteEnemyAnimationDecaying=h.default},9776:(t,e,i)=>{Object.defineProperty(e,"__esModule",{value:!0});const a=i(8861),o=i(1533),s=i(1625),n=i(2187),l=i(5198),r=i(9239),h=i(5522),d=i(5789);class c extends s.default{constructor(t,e,i,a,o){super(t,e,i,a,o),this.pathfindingTimer=0,this.pathfindingInterval=500,this.shortestPath=[],this.widgets.damageNumbers=new h.default}draw(t){this.animations[this.state].draw(this,{x:t.x,y:t.y}),Object.values(this.widgets).forEach((e=>e.render(t.x,t.y)))}update(t){Object.values(this.widgets).forEach((t=>t.update()))}isOnScreen(t,e){const i=2*a.TILE_SIZE;return Math.abs(this.x-t)<a.CANVAS_WIDTH/2+i&&Math.abs(this.y-e)<a.CANVAS_HEIGHT/2+i}checkForCollisionWithPlayer(t){const e={x:this.nextX,y:this.nextY,collisionBox:this.collisionBox};this.checkIfBlockedByCreature(t,e)}checkForCollisionWithOtherEnemies(t){const e={x:this.nextX,y:this.nextY,collisionBox:this.collisionBox};r.default.getEnemiesOnScreen(this.x,this.y).forEach((t=>{t.state>=n.default.Dying||this!==t&&this.checkIfBlockedByCreature(t,e)}))}targetInRange(t){const e=(t.collisionBox.halfWidth+this.collisionBox.halfWidth)*Math.sqrt(2);return this.distanceFromTarget<e}targetInEffectiveRange(t){const e=(t.collisionBox.halfWidth+this.collisionBox.halfWidth)*Math.sqrt(2);return this.distanceFromTarget<4*e}checkIfStuck(){const t=this.prevX.every((t=>t===this.prevX[0])),e=this.prevY.every((t=>t===this.prevY[0]));return!(!t||!e)}attack(t){const e=o.default.determineIfThereAreObstaclesBetweenTwoPoints(this,t);this.targetInEffectiveRange(t)&&!1===e?(d.default.playEnemyAttack(),this.dealDamage(t)):(d.default.playEnemyAttackMiss(),this.dealDamage(t,l.default.Miss))}attackIsMiss(){return Math.random()>=.7}resetAttackTime(){this.attackTime=this.maxAttackTime}resetAttackCooldown(){this.attackCooldown=this.maxAttackCooldown}takeDamage(t){this.health-=t,this.widgets.damageNumbers.push(h.DamageNumberFactory.create(this.x,this.y,this.collisionBox,t)),this.health<=0?this.die():d.default.playEnemyHit()}die(){d.default.playEnemyDeath(),this.setState(n.default.Dying)}dealDamage(t,e=null){e===l.default.Miss?t.takeDamage(0,e):t.takeDamage(this.getDamage())}getDamage(){return 10}setState(t){this.previousState=this.state,this.state=t,this.resetAnimations()}resetAnimations(){Object.values(this.animations).forEach((t=>t.resetAnimation()))}}e.default=c},9239:(t,e,i)=>{Object.defineProperty(e,"__esModule",{value:!0});const a=i(8861),o=i(1645),s=i(2187),n=i(1108),l=i(4811),r=i(9179),h=i(471),d=i(3445),c=i(5899),u=i(1597);class f{constructor(){const t=c.default(u.default.currentLevel);this.loadMap(t),this.player=new o.default(t.player.x,t.player.y)}static getEnemiesOnScreen(t,e){return f.enemies.filter((i=>i.isOnScreen(t,e)))}static getDecayingOnScreen(t,e){return f.enemiesDecaying.filter((i=>i.isOnScreen(t,e)))}static enemiesRemaining(){return f.enemies.length}static clear(){f.enemiesDecaying=[]}destroy(){for(;f.enemies.length;)f.enemies.pop()}update(){f.enemies.forEach(((t,e)=>{t.state===s.default.Decaying&&(f.enemies.splice(e,1),f.enemiesDecaying.push(t)),t.update(this.player)})),f.enemiesDecaying.forEach(((t,e)=>{t.update(this.player),t.state===s.default.Removed&&f.enemiesDecaying.splice(e,1)})),this.openPortalWhenAllEnemiesAreKilled()}openPortalWhenAllEnemiesAreKilled(){!1!==f.exitPortal.isOpen||0!==f.enemies.length&&!f.enemies.every((t=>t.state>=s.default.Dying))||f.exitPortal.open()}draw(){this.drawGameObjects(),f.getDecayingOnScreen(this.player.x,this.player.y).forEach((t=>t.draw(this.player))),f.getEnemiesOnScreen(this.player.x,this.player.y).filter((t=>t.state!==s.default.Removed)).forEach((t=>{t.state!==s.default.Removed&&t.draw(this.player)}))}drawGameObjects(){const t=this.player.deltas.dxLeft-l.default.colRemainder,e=this.player.deltas.dyTop-l.default.rowRemainder,i=this.player.row-l.default.halfRows,o=this.player.col-l.default.halfCols;let s;for(let n=i;n<i+l.default.rows+1;++n)for(let r=o-1;r<o+l.default.cols+1;++r)f.walls[n]&&f.walls[n][r]&&(s=f.walls[n][r],s.x=(r-o)*a.TILE_SIZE-t,s.y=(n-i)*a.TILE_SIZE-e,s.draw()),f.exitPortal.row===n&&f.exitPortal.col===r&&(f.exitPortal.x=(r-o)*a.TILE_SIZE-t,f.exitPortal.y=(n-i)*a.TILE_SIZE-e,f.exitPortal.draw())}loadMap(t){this.loadGameObjects(t),this.loadEnemies(t)}loadGameObjects(t){this.loadWalls(t),this.loadExitPortal(t)}loadWalls(t){for(let e=0;e<t.gameObjects.length;++e){f.walls[e]=[];for(let i=0;i<t.gameObjects[e].length;++i){const a=t.gameObjects[e][i];f.walls[e][i]=null,r.isWall(a)&&(f.walls[e][i]=h.default.createWall(e,i,a))}}}loadExitPortal(t){for(let e=0;e<t.gameObjects.length;++e)for(let i=0;i<t.gameObjects[e].length;++i)t.gameObjects[e][i]===r.default.ExitPortal&&(f.exitPortal=new d.default(e,i))}loadEnemies(t){t.enemies.forEach(((t,e)=>{f.enemies.push(new n.default(t.x,t.y,.125,t.healthPercentage,e))}))}}e.default=f,f.walls=[],f.enemies=[],f.enemiesDecaying=[]},9179:(t,e)=>{var i;Object.defineProperty(e,"__esModule",{value:!0}),e.isWall=void 0,function(t){t[t.Empty=0]="Empty",t[t.WallGray=1]="WallGray",t[t.WallGreen=2]="WallGreen",t[t.WallBlue=3]="WallBlue",t[t.ExitPortal=9]="ExitPortal"}(i||(i={})),e.isWall=function(t){return t===i.WallGray||t===i.WallGreen||t===i.WallBlue},e.default=i},5899:(t,e,i)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.totalNumberOfMaps=void 0;const a={Map01:i(8309),Map02:i(649)};e.totalNumberOfMaps=Object.keys(a).length,e.default=function(t){const e=String(t).padStart(2,"0");return a[`Map${e}`]}},6049:(t,e,i)=>{Object.defineProperty(e,"__esModule",{value:!0});const a=i(8861);e.default=class{constructor(t,e,i,o,s,n=!0){this.row=t,this.col=e,this.width=i,this.height=o,this.color=s,this.destructable=n,this.mapX=e*a.TILE_SIZE,this.mapY=t*a.TILE_SIZE}}},3445:(t,e,i)=>{Object.defineProperty(e,"__esModule",{value:!0});const a=i(8861),o=i(4811),s=i(2063),n=i(7204),l=i(8015),r=i(8942);class h extends r.default{constructor(){super(...arguments),this.isOpen=!1,this.opacity=h.opacityRange,this.animationElapsed=0,this.animationLength=4e3,this.animationCompletionPercentage=0}draw(){s.default.stateManager.getState()===l.default.PLAYING&&this.advanceAnimation(),o.context.fillStyle=this.getColor(),o.context.beginPath(),o.context.rect(this.x,this.y,a.TILE_SIZE,a.TILE_SIZE),o.context.fill()}advanceAnimation(){this.animationElapsed=(this.animationElapsed+n.default.elapsedTimeFactor)%this.animationLength,this.animationCompletionPercentage=this.animationElapsed/this.animationLength;const t=Math.sin(this.animationCompletionPercentage*(2*Math.PI));this.opacity=h.opacityBaseline+(t+1)/2*h.opacityRange}open(){this.isOpen=!0}getColor(){return this.isOpen?`rgba(${h.openColor}, ${this.opacity})`:`rgba(${h.closedColor}, ${this.opacity})`}}e.default=h,h.openColor="50, 120, 50",h.closedColor="180, 50, 50",h.opacityBaseline=.05,h.opacityRange=.2},8942:(t,e)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.default=class{constructor(t,e){this.row=t,this.col=e}}},8785:(t,e,i)=>{Object.defineProperty(e,"__esModule",{value:!0});const a=i(8861),o=i(4811),s=i(5789),n=i(6049);class l extends n.default{draw(){o.context.strokeStyle=this.color,o.context.lineWidth=1,o.context.beginPath(),o.context.moveTo(.5+this.x,.5+this.y),o.context.lineTo(-.5+this.x+a.TILE_SIZE,.5+this.y),o.context.lineTo(-.5+this.x+a.TILE_SIZE,-.5+this.y+a.TILE_SIZE),o.context.lineTo(.5+this.x,-.5+this.y+a.TILE_SIZE),o.context.lineTo(.5+this.x,.5+this.y),o.context.moveTo(.5+this.x,.5+this.y),o.context.lineTo(-.5+this.x+a.TILE_SIZE,-.5+this.y+a.TILE_SIZE),o.context.moveTo(-.5+this.x+a.TILE_SIZE,.5+this.y),o.context.lineTo(.5+this.x,-.5+this.y+a.TILE_SIZE),o.context.stroke()}takeDamage(t){s.default.playWallHit()}}e.default=l},471:(t,e,i)=>{Object.defineProperty(e,"__esModule",{value:!0});const a=i(8861),o=i(8785),s=i(9179);e.default=class{static createWall(t,e,i){switch(i){case s.default.WallGray:return new o.default(t,e,a.TILE_SIZE,a.TILE_SIZE,"#4B4B4B",!1);case s.default.WallGreen:return new o.default(t,e,a.TILE_SIZE,a.TILE_SIZE,"#27531B");case s.default.WallBlue:return new o.default(t,e,a.TILE_SIZE,a.TILE_SIZE,"#572F17");default:throw new Error("No such Wall!")}}}},2144:(t,e,i)=>{Object.defineProperty(e,"__esModule",{value:!0});const a=i(4811);e.default=class{static draw(){const t=a.default.mousePosition.x,e=a.default.mousePosition.y;let i,o;a.context.strokeStyle="#FFFFFF",a.context.lineWidth=.5,a.context.beginPath(),i=.5,o=-1.5,a.context.moveTo(t+i,e+o),o=-3.5,a.context.lineTo(t+i,e+o),o=2.5,a.context.moveTo(t+i,e+o),o=4.5,a.context.lineTo(t+i,e+o),o=.5,i=-3.5,a.context.moveTo(t+i,e+o),i=-1.5,a.context.lineTo(t+i,e+o),i=2.5,a.context.moveTo(t+i,e+o),i=4.5,a.context.lineTo(t+i,e+o),a.context.stroke()}}},1645:(t,e,i)=>{Object.defineProperty(e,"__esModule",{value:!0});const a=i(8861),o=i(3602),s=i(4811),n=i(1533),l=i(6322),r=i(5035),h=i(1625),d=i(2187),c=i(9239),u=i(2144),f=i(1304),x=i(73),y=i(5522),g=i(5789);class m extends h.default{constructor(t,e){super(t,e,new l.default(12,12),.18,1),this.x=t,this.y=e,this.alive=!0,this.rotation=0,this.sightLineLength=10,this.AvailableWeapons={1:new x.default,2:new f.default},this.equipedWeapon=this.AvailableWeapons[1],this._keydownHandler=t=>{switch(t.keyCode){case o.KEYBOARD_KEYS.w:this.moving.up=!0,this.movingDirections.up=!0;break;case o.KEYBOARD_KEYS.a:this.moving.left=!0,this.movingDirections.left=!0;break;case o.KEYBOARD_KEYS.s:this.moving.down=!0,this.movingDirections.down=!0;break;case o.KEYBOARD_KEYS.d:this.moving.right=!0,this.movingDirections.right=!0;break;case o.KEYBOARD_KEYS[1]:this.switchWeapons(1);break;case o.KEYBOARD_KEYS[2]:this.switchWeapons(2)}},this.keyupHandler=t=>{switch(t.keyCode){case o.KEYBOARD_KEYS.w:this.moving.up=!1;break;case o.KEYBOARD_KEYS.a:this.moving.left=!1;break;case o.KEYBOARD_KEYS.s:this.moving.down=!1;break;case o.KEYBOARD_KEYS.d:this.moving.right=!1}},a.FEATURES.DAMAGE_NUMBERS_ON_PLAYER&&(this.widgets.damageNumbers=new y.default)}update(){this.resetBlocked(),this.calculateNextCoordinates(),this.checkForCollisionWithEnemies(),this.move(),this.adjustCollisionWithWalls(),this.updateTileDeltas(),this.updateMapPosition(),Object.values(this.AvailableWeapons).forEach((t=>t.update(this.x,this.y))),Object.values(this.widgets).forEach((t=>t.update()))}draw(){const t=this.calculateTheta();this.drawPlayer(t),this.drawPlayerVisionRays(t),u.default.draw(),Object.values(this.AvailableWeapons).forEach((t=>t.draw(this.x,this.y)))}get keydownHandler(){return this._keydownHandler}set keydownHandler(t){this._keydownHandler=t}takeDamage(t,e=null){this.health=this.health-t,this.widgets.damageNumbers&&this.widgets.damageNumbers.push(y.DamageNumberFactory.create(this.x,this.y,this.collisionBox,t,y.DamageNumberColors.gray,e)),this.health<=0?this.die():null===e&&g.default.playPlayerHit()}calculateTheta(){const t=r.angleBetweenPoints(s.default.mousePosition,s.default.center);return s.context.fillStyle="#44FF44",s.context.fillText(`θ = ${t.toFixed(2)}`,10,56),t}drawPlayer(t){s.context.beginPath(),s.context.fillStyle="#00AA00",s.context.font="10px Monospace",s.context.fillText(`p (${this.x}, ${this.y})`,10,20),s.context.strokeStyle="#523DA5",s.context.lineWidth=2,s.context.moveTo(s.default.center.x,s.default.center.y),s.context.lineTo(s.default.center.x+this.sightLineLength*Math.cos(t),s.default.center.y+this.sightLineLength*Math.sin(t)),s.context.stroke(),a.DEBUG.PLAYER_COLLISION_BOX&&this.debug_drawCollisionBox(),Object.values(this.widgets).forEach((t=>t.render(this.x,this.y))),a.DEBUG.PLAYER_WEAPON_DISPLAY&&this.debug_drawWeaponDisplay()}drawPlayerVisionRays(t){this.drawPlayerVisionRay(t),a.DEBUG.PLAYER_VISION_RAY_SHOTGUN&&(this.drawPlayerVisionRay(t-.45),this.drawPlayerVisionRay(t-.4),this.drawPlayerVisionRay(t-.35),this.drawPlayerVisionRay(t-.3),this.drawPlayerVisionRay(t-.25),this.drawPlayerVisionRay(t-.2),this.drawPlayerVisionRay(t-.15),this.drawPlayerVisionRay(t-.1),this.drawPlayerVisionRay(t-.05),this.drawPlayerVisionRay(t+.05),this.drawPlayerVisionRay(t+.1),this.drawPlayerVisionRay(t+.15),this.drawPlayerVisionRay(t+.2),this.drawPlayerVisionRay(t+.25),this.drawPlayerVisionRay(t+.3),this.drawPlayerVisionRay(t+.35),this.drawPlayerVisionRay(t+.4),this.drawPlayerVisionRay(t+.45))}drawPlayerVisionRay(t){const{hitPoint:e,wallHit:i}=n.default.cast(this,t);e&&(i?n.default.drawRay(e,"#FF4444"):n.default.drawRay(e))}checkForCollisionWithEnemies(){const t={x:this.nextX,y:this.nextY,collisionBox:this.collisionBox},e=c.default.getEnemiesOnScreen(this.x,this.y);e.some((e=>l.collisionBoxesIntersect(e,t)))&&e.forEach((e=>{e.state>=d.default.Dying||this.checkIfBlockedByCreature(e,t)}))}setShooting(t){Object.values(this.AvailableWeapons).forEach((t=>t.setShooting(!1))),this.equipedWeapon.setShooting(t)}switchWeapons(t){this.equipedWeapon=this.AvailableWeapons[t]}die(){this.alive=!1,g.default.playPlayerDeath()}debug_drawCollisionBox(){s.context.strokeStyle=this.getHealthColor(),s.context.lineWidth=.5,s.context.beginPath(),s.context.moveTo(-.5+s.default.center.x-this.collisionBox.halfWidth,-.5+s.default.center.y-this.collisionBox.halfHeight),s.context.lineTo(.5+s.default.center.x+this.collisionBox.halfWidth,-.5+s.default.center.y-this.collisionBox.halfHeight),s.context.lineTo(.5+s.default.center.x+this.collisionBox.halfWidth,.5+s.default.center.y+this.collisionBox.halfHeight),s.context.lineTo(-.5+s.default.center.x-this.collisionBox.halfWidth,.5+s.default.center.y+this.collisionBox.halfHeight),s.context.lineTo(-.5+s.default.center.x-this.collisionBox.halfWidth,-.5+s.default.center.y-this.collisionBox.halfHeight),s.context.stroke()}debug_drawWeaponDisplay(){s.context.beginPath(),s.context.fillStyle="#DD0000",s.context.font="8px Monospace";const[t]=Object.entries(this.AvailableWeapons).find((([t,e])=>e===this.equipedWeapon));s.context.fillText(`Weapon: ${t}`,10,a.CANVAS_HEIGHT-36),s.context.stroke()}}e.default=m},9328:(t,e,i)=>{Object.defineProperty(e,"__esModule",{value:!0});const a=i(8861),o=i(4811),s=i(9239),n=i(2187),l=i(2908);e.default=class{constructor(t,e,i,a){this.x=t,this.y=e,this.directionX=i,this.directionY=a,this.numberOfIntermediatePositions=3,this.intermediatePositions=[]}update(t,e){this.previousX=this.x,this.previousY=this.y,this.x+=this.directionX*this.speed,this.y+=this.directionY*this.speed,this.row=Math.floor(this.y/a.TILE_SIZE),this.col=Math.floor(this.x/a.TILE_SIZE);const i=this.getNearbyEnemies();this.calculateIntermediatePoints(),this.isOffScreen(t,e)&&(this.alive=!1),this.intermediatePositions.forEach((t=>{this.alive&&(this.checkCollisionWithEnemies(i,t),this.checkCollisionWithWall(t))})),this.alive&&(this.checkCollisionWithEnemies(i),this.checkCollisionWithWall())}calculateIntermediatePoints(){const t=(this.x-this.previousX)/(this.numberOfIntermediatePositions+1),e=(this.y-this.previousY)/(this.numberOfIntermediatePositions+1);for(let i=this.numberOfIntermediatePositions-1;i>=0;--i)this.intermediatePositions[i].x=this.x-t*(i+1),this.intermediatePositions[i].y=this.y-e*(i+1),this.intermediatePositions[i].row=Math.floor(this.intermediatePositions[i].y/a.TILE_SIZE),this.intermediatePositions[i].col=Math.floor(this.intermediatePositions[i].x/a.TILE_SIZE)}getNearbyEnemies(){return[...s.default.enemies].filter((t=>Math.abs(t.x-this.x)<=a.TILE_SIZE&&Math.abs(t.y-this.y)<=a.TILE_SIZE))}isOffScreen(t,e){return this.x<t-o.default.center.x-a.TILE_SIZE||this.x>t+o.default.center.x+a.TILE_SIZE||this.y<e-o.default.center.y-a.TILE_SIZE||this.y>e+o.default.center.y+a.TILE_SIZE}checkCollisionWithEnemies(t,e){e||(e=this),t.forEach((t=>{if(e.x>=t.x-t.collisionBox.halfWidth&&e.x<=t.x+t.collisionBox.halfWidth&&e.y>=t.y-t.collisionBox.halfHeight&&e.y<=t.y+t.collisionBox.halfHeight){if(t.state>=n.default.Dying)return;this.alive=!1,t.takeDamage(this.getDamage())}}))}checkCollisionWithWall(t){t||(t=this);const e=s.default.walls[t.row][t.col];e&&(e.takeDamage(this.getDamage()),this.alive=!1,e.destructable&&(s.default.walls[t.row][t.col]=null))}getDamage(){return l.randomInRange(this.minDamage,this.maxDamage)}}},44:(t,e,i)=>{Object.defineProperty(e,"__esModule",{value:!0});const a=i(4811),o=i(9328);class s extends o.default{constructor(t,e,i,a){super(t,e,i,a),this.speed=24,this.minDamage=6,this.maxDamage=12,this.alive=!0;for(let t=0;t<this.numberOfIntermediatePositions;++t)this.intermediatePositions[t]={x:null,y:null,row:null,col:null}}draw(t,e){this.x===t&&this.y===e||(a.context.strokeStyle="#8AFCFF",a.context.lineWidth=2,a.context.beginPath(),a.context.arc(this.x+a.default.center.x-t,this.y+a.default.center.y-e,.8,0,2*Math.PI),a.context.stroke())}}e.default=s},9809:(t,e,i)=>{Object.defineProperty(e,"__esModule",{value:!0});const a=i(4811),o=i(9328);class s extends o.default{constructor(t,e,i,a){super(t,e,i,a),this.speed=24,this.minDamage=2,this.maxDamage=6,this.alive=!0;for(let t=0;t<this.numberOfIntermediatePositions;++t)this.intermediatePositions[t]={x:null,y:null,row:null,col:null}}draw(t,e){this.x===t&&this.y===e||(a.context.strokeStyle="#FFFFF",a.context.lineWidth=1,a.context.beginPath(),a.context.beginPath(),a.context.moveTo(this.x+a.default.center.x-t,this.y+a.default.center.y-e),a.context.lineTo(this.previousX+a.default.center.x-t,this.previousY+a.default.center.y-e),a.context.stroke())}}e.default=s},1298:(t,e,i)=>{Object.defineProperty(e,"__esModule",{value:!0});const a=i(8861),o=i(4811),s=i(7204),n=i(5789);e.default=class{constructor(){this.shooting=!1,this.projectiles=[]}update(t,e){this.shoot(t,e),this.projectiles.length&&this.projectiles.forEach(((i,a)=>{i.update(t,e),!1===i.alive&&this.removeProjectile(a)}))}draw(t,e){this.projectiles.length&&this.projectiles.forEach((i=>i.draw(t,e)))}shoot(t,e){this.cooldown>=0&&(this.cooldown-=s.default.frameElapsedTime,this.cooldown<0&&(this.cooldown=0)),!1!==this.shooting&&this.cooldown<=0&&(this.fireProjectile(t,e),this.resetAttackCooldown(),n.default.playSMG())}fireProjectile(t,e){const i=o.default.mousePosition.x-o.default.center.x,s=o.default.mousePosition.y-o.default.center.y;let n=i/(Math.abs(i)+Math.abs(s)),l=s/(Math.abs(i)+Math.abs(s));a.FEATURES.SCATTER_PROJECTILES&&(n+=.1*Math.random()-.05,l+=.1*Math.random()-.05),this.projectiles.push(new this.projectileConstructor(t,e,n,l))}setShooting(t){this.shooting=t}removeProjectile(t){this.projectiles.splice(t,1)}resetAttackCooldown(){this.cooldown=this.maxCooldown}}},73:(t,e,i)=>{Object.defineProperty(e,"__esModule",{value:!0});const a=i(8861),o=i(44),s=i(1298);class n extends s.default{constructor(){super(...arguments),this.firingSpeed=.1,this.cooldown=0,this.maxCooldown=1e3*this.firingSpeed/a.GAME_SPEED,this.projectileConstructor=o.default}}e.default=n},1304:(t,e,i)=>{Object.defineProperty(e,"__esModule",{value:!0});const a=i(8861),o=i(9809),s=i(1298);class n extends s.default{constructor(){super(...arguments),this.firingSpeed=.05,this.cooldown=0,this.maxCooldown=1e3*this.firingSpeed/a.GAME_SPEED,this.projectileConstructor=o.default}}e.default=n},5522:(t,e,i)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.DamageNumberFactory=e.DamageNumberColors=void 0;const a=i(8861),o=i(2063),s=i(7204),n=i(8015),l=i(4811);var r;!function(t){t.red="220, 50, 50",t.yellow="180, 180, 50",t.gray="180, 180, 180"}(r=e.DamageNumberColors||(e.DamageNumberColors={})),e.DamageNumberFactory=class{static create(t,e,i,a,o=r.red,s=null){return new h(t,e-.9*i.halfHeight,Math.random()*i.height-i.halfHeight,Math.random()*i.width/1.5-i.halfWidth/1.5,s||a.toString(),o)}};class h{constructor(t,e,i,a,o,s){this.x=t,this.y=e,this.randomFactorX=i,this.randomFactorY=a,this.damage=o,this.color=s,this.animationFinished=!1,this.animationElapsed=0,this.animationLength=800,this.animationCompletionPercentage=0,this.maxHeight=30,this.fontSize=8,this.font=`${this.fontSize}px Monospace`,this.fontWidth=this.fontSize/2,this.damageTextHalfWidth=0,this.damageTextHalfWidth=this.damage.length*this.fontWidth/2}advanceAnimation(){this.animationElapsed+=s.default.elapsedTimeFactor,this.animationCompletionPercentage=this.animationElapsed/this.animationLength,this.animationHasFinished()&&(this.animationFinished=!0)}animationHasFinished(){return this.animationElapsed>=this.animationLength}draw(t,e){l.context.beginPath();const i=1-this.animationCompletionPercentage;l.context.fillStyle=`rgba(${this.color}, ${i})`,l.context.font=this.font,l.context.fillText(`${this.damage}`,this.randomFactorX+(this.x+l.default.center.x-t)-this.damageTextHalfWidth,this.randomFactorY+(this.y+l.default.center.y-e)-this.animationCompletionPercentage*this.maxHeight),l.context.stroke()}}e.default=class{constructor(){this.damageNumbers=[]}update(){o.default.stateManager.getState()===n.default.PLAYING&&this.damageNumbers.forEach(((t,e)=>{t.advanceAnimation(),!0===t.animationFinished&&this.damageNumbers.splice(e,1)}))}render(t,e){a.FEATURES.DAMAGE_NUMBERS_SHOW&&this.feature_drawDamageNumbers(t,e)}push(t){this.damageNumbers.push(t)}feature_drawDamageNumbers(t,e){this.damageNumbers.forEach((i=>i.draw(t,e)))}}},400:(t,e,i)=>{Object.defineProperty(e,"__esModule",{value:!0});const a=i(7843);e.default=class{static async load(t){a.default.load(t)}}},7843:(t,e,i)=>{Object.defineProperty(e,"__esModule",{value:!0});const a=i(4485),o=i(212);class s{static async load(t){await s.Decay.load((()=>t(.5))),await s.Zerg.load((()=>t(1)))}}e.default=s,s.Zerg=new a.default,s.Decay=new o.default},7569:(t,e)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.default=class{load(t){return new Promise(((e,i)=>{this.spriteSheet=new Image,this.spriteSheet.src=this.url,this.spriteSheet.onload=()=>{t(),e()}}))}}},212:(t,e,i)=>{Object.defineProperty(e,"__esModule",{value:!0});const a=i(4811),o=i(7569);class s extends o.default{constructor(){super(),this.url="./graphics/spritesheets/decay.png",this.spriteProperties={decay:{width:56,height:56,gapX:3,gapY:3}},this.manuallyCalculatedSprites={decay:[{sy:2*(this.spriteProperties.decay.height+this.spriteProperties.decay.gapY)+2},{sy:1*(this.spriteProperties.decay.height+this.spriteProperties.decay.gapY)+2},{sy:0*(this.spriteProperties.decay.height+this.spriteProperties.decay.gapY)+2}]}}draw(t,e,i){this.drawSpritedecay(t,e,i)}drawSpritedecay(t,e,i){const{x:o,y:s}=t,{x:n,y:l}=e,r=Math.floor(this.spriteProperties.decay.width*(t.collisionBox.width/15)),h=Math.floor(this.spriteProperties.decay.height*(t.collisionBox.height/20)),d=2+(t.x+t.y)%4*(this.spriteProperties.decay.width+this.spriteProperties.decay.gapX);a.context.drawImage(this.spriteSheet,d,this.manuallyCalculatedSprites.decay[i].sy,this.spriteProperties.decay.width,this.spriteProperties.decay.height,a.default.center.x+(o-n-r/2),a.default.center.y+(s-l-h/2),r,h)}}e.default=s},4485:(t,e,i)=>{Object.defineProperty(e,"__esModule",{value:!0});const a=i(4811),o=i(2187),s=i(7569);class n extends s.default{constructor(){super(),this.url="./graphics/spritesheets/zergling.png",this.spriteLocations={N:{col:0,flip:!1},NE:{col:2,flip:!1},E:{col:4,flip:!1},SE:{col:6,flip:!1},S:{col:8,flip:!1},SW:{col:6,flip:!0},W:{col:4,flip:!0},NW:{col:2,flip:!0}},this.spriteProperties={default:{width:32,height:32},dying:{width:65,height:53,gapX:3,sy:548}},this.manuallyCalculatedSprites={dying:[{sx:0*(this.spriteProperties.dying.width+this.spriteProperties.dying.gapX)+2,sy:this.spriteProperties.dying.sy},{sx:1*(this.spriteProperties.dying.width+this.spriteProperties.dying.gapX)+2,sy:this.spriteProperties.dying.sy},{sx:2*(this.spriteProperties.dying.width+this.spriteProperties.dying.gapX)+2,sy:this.spriteProperties.dying.sy},{sx:3*(this.spriteProperties.dying.width+this.spriteProperties.dying.gapX)+2,sy:this.spriteProperties.dying.sy},{sx:4*(this.spriteProperties.dying.width+this.spriteProperties.dying.gapX)+2,sy:this.spriteProperties.dying.sy},{sx:5*(this.spriteProperties.dying.width+this.spriteProperties.dying.gapX)+2,sy:this.spriteProperties.dying.sy},{sx:6*(this.spriteProperties.dying.width+this.spriteProperties.dying.gapX)+2,sy:this.spriteProperties.dying.sy}]}}draw(t,e,i){if(t.state===o.default.Dying)this.drawSpriteDying(t,e,i);else{const a=this.spriteProperties.default.width,o=this.spriteProperties.default.height,s={x:a+11,y:o+10},n=this.getSpriteOffsets(t.state,s),l=this.spriteLocations[t.direction];this.drawSprite(t,e,n,s,l,a,o,i)}}getSpriteOffsets(t,e){const i={x:7,y:5};switch(t){case o.default.Idling:case o.default.Moving:case o.default.MovingCooldown:case o.default.AttackingCooldown:return i;case o.default.Attacking:return{x:i.x,y:i.y+7*e.y}}}drawSpriteDying(t,e,i){const{x:o,y:s}=t,{x:n,y:l}=e,r=Math.floor(this.spriteProperties.dying.width*(t.collisionBox.width/20)),h=Math.floor(this.spriteProperties.dying.height*(t.collisionBox.height/20));a.context.drawImage(this.spriteSheet,this.manuallyCalculatedSprites.dying[i].sx,this.manuallyCalculatedSprites.dying[i].sy,this.spriteProperties.dying.width,this.spriteProperties.dying.height,a.default.center.x+(o-n-r/2),a.default.center.y+(s-l-h/2),r,h)}drawSprite(t,e,i,o,s,n,l,r){const{x:h,y:d,collisionBox:c}=t,{x:u,y:f}=e;s.flip&&(a.context.save(),a.context.translate(a.default.center.x+(h-u-c.halfWidth),a.default.center.y+(d-f-c.halfHeight)),a.context.scale(-1,1));const x=t.collisionBox.width+2,y=t.collisionBox.height+2;a.context.drawImage(this.spriteSheet,i.x+o.x*s.col,i.y+o.y*Math.floor(r),n,l,s.flip?0-n/2:a.default.center.x+(h-u-c.halfWidth),s.flip?0:a.default.center.y+(d-f-c.halfHeight),x,y),s.flip&&a.context.restore()}}e.default=n},4811:(t,e,i)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.context=void 0;const a=i(8861),o=i(4301),s=document.getElementById("canvas");s.width=a.CANVAS_WIDTH,s.height=a.CANVAS_HEIGHT,s.style.width=1!==a.SCALE?a.SCALE*a.CANVAS_WIDTH+"px":"auto",s.style.height=1!==a.SCALE?a.SCALE*a.CANVAS_HEIGHT+"px":"auto",e.context=s.getContext("2d"),e.context.imageSmoothingEnabled=!1;class n{static clear(){e.context.clearRect(0,0,s.width,s.height)}static updateMousePosition(){this.mousePosition={x:Math.floor((o.default.x-s.offsetLeft)/a.SCALE),y:Math.floor((o.default.y-s.offsetTop)/a.SCALE)}}}e.default=n,n.halfWidth=s.width/2,n.halfHeight=s.height/2,n.rows=Math.floor(s.height/a.TILE_SIZE),n.cols=Math.floor(s.width/a.TILE_SIZE),n.halfRows=Math.floor(s.height/2/a.TILE_SIZE),n.halfCols=Math.floor(s.width/2/a.TILE_SIZE),n.rowRemainder=s.height/2%a.TILE_SIZE,n.colRemainder=s.width/2%a.TILE_SIZE,n.center={x:a.CANVAS_WIDTH/2,y:a.CANVAS_HEIGHT/2},n.getCanvasDomElement=()=>s},6322:(t,e,i)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.collisionBoxesIntersect=void 0;const a=i(8861);e.default=class{constructor(t,e){if(this.width=t,this.height=e,a.THROW_DEVELOPMENT_ERRORS&&(t%2!=0||e%2!=0))throw new Error("Always use even numbers for collision box dimensions!");this.halfWidth=this.width/2,this.halfHeight=this.height/2}},e.collisionBoxesIntersect=function(t,e){return t.x-t.collisionBox.halfWidth<e.x+e.collisionBox.halfWidth&&t.x+t.collisionBox.halfWidth>e.x-e.collisionBox.halfWidth&&t.y-t.collisionBox.halfHeight<e.y+e.collisionBox.halfHeight&&t.y+t.collisionBox.halfHeight>e.y-e.collisionBox.halfHeight}},2422:(t,e,i)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.getDirectionBasedOnAngle=e.MovingDirections=e.Directions=void 0;const a=i(2908);var o,s;!function(t){t.N="N",t.NE="NE",t.E="E",t.SE="SE",t.S="S",t.SW="SW",t.W="W",t.NW="NW"}(o=e.Directions||(e.Directions={})),(s=e.MovingDirections||(e.MovingDirections={})).up="up",s.right="right",s.down="down",s.left="left";const n={[o.E]:{min:337,max:22},[o.SE]:{min:22,max:67},[o.S]:{min:67,max:112},[o.SW]:{min:112,max:157},[o.W]:{min:157,max:202},[o.NW]:{min:202,max:247},[o.N]:{min:247,max:292},[o.NE]:{min:292,max:337}};e.getDirectionBasedOnAngle=function(t){if(t<0&&(t=2*Math.PI-Math.abs(t)),(t=a.radiansToDegrees(t))>=0&&t<n[o.E].max||t>=n[o.E].min&&t<360)return o.E;const[e]=Object.entries(n).find((([e,i])=>t>=i.min&&t<i.max));return o[e]}},9829:(t,e,i)=>{Object.defineProperty(e,"__esModule",{value:!0});const a=i(8861),o=i(4811),s=[0,0,0,0,0,0,0,0,0,0,0];let n;e.default=class{static restart(){for(let t=0;t<s.length;++t)s[t]=0}static calculateFrameRate(t,e){t?(s.unshift(1e3/e),s.pop(),n=s.reduce(((t,e)=>t+e),0)/s.length):n=0}static debug_drawFPS(){o.context.beginPath(),o.context.fillStyle="#FFC100",o.context.font="8px Monospace",o.context.fillText(`FPS: ${n&&n.toFixed(2)||"unknown"}`,10,a.CANVAS_HEIGHT-10),o.context.stroke()}}},1201:(t,e)=>{var i;Object.defineProperty(e,"__esModule",{value:!0}),function(t){t[t.Graphics=0]="Graphics",t[t.Audio=1]="Audio"}(i||(i={})),e.default=i},7204:(t,e,i)=>{Object.defineProperty(e,"__esModule",{value:!0});const a=i(8861);class o{static setFrameElapsedTime(t){o.frameElapsedTime=t,o.elapsedTimeFactor=a.GAME_SPEED*o.frameElapsedTime}}e.default=o,o.ONE_SECOND=1e3,o.previousTimestamp=0,o.frameElapsedTime=0},5735:(t,e,i)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.PathNode=e.findShortestPath=e.drawNode=e.debug_drawPathNodes=e.generatePathNodes=void 0;const a=i(8861),o=i(5035),s=i(6322),n=i(4811),l=i(9239);function r(t,e,i){n.context.strokeStyle=i,n.context.lineWidth=.1,n.context.beginPath(),n.context.moveTo(.5+n.default.center.x+(t.x-e.x)-t.collisionBox.halfWidth,.5+n.default.center.y+(t.y-e.y)-t.collisionBox.halfHeight),n.context.lineTo(-.5+n.default.center.x+(t.x-e.x)+t.collisionBox.halfWidth,.5+n.default.center.y+(t.y-e.y)-t.collisionBox.halfHeight),n.context.lineTo(-.5+n.default.center.x+(t.x-e.x)+t.collisionBox.halfWidth,-.5+n.default.center.y+(t.y-e.y)+t.collisionBox.halfHeight),n.context.lineTo(.5+n.default.center.x+(t.x-e.x)-t.collisionBox.halfWidth,-.5+n.default.center.y+(t.y-e.y)+t.collisionBox.halfHeight),n.context.lineTo(.5+n.default.center.x+(t.x-e.x)-t.collisionBox.halfWidth,.5+n.default.center.y+(t.y-e.y)-t.collisionBox.halfHeight),n.context.stroke(),n.context.beginPath(),n.context.arc(n.default.center.x+(t.x-e.x),n.default.center.y+(t.y-e.y),1,0,2*Math.PI),n.context.stroke()}e.generatePathNodes=function(t,e,i){const o=[];let s=t-n.default.halfRows-3,r=e-n.default.halfCols-2;const d=t+n.default.halfRows+3,c=e+n.default.halfCols+2;s<0&&(s=0),r<0&&(r=0);for(let t=s;t<d;++t)for(let e=r-1;e<c;++e)l.default.walls[t]&&l.default.walls[t][e]||e>0&&t>0&&o.push(new h({x:e*a.TILE_SIZE+a.TILE_SIZE/2,y:t*a.TILE_SIZE+a.TILE_SIZE/2},i));return o},e.debug_drawPathNodes=function(t,e,i){t&&t.forEach((t=>r(t,e,i)))},e.drawNode=r,e.findShortestPath=function(t,e,i){const a=new h(e,e.collisionBox),s=new h(t,t.collisionBox);i.push(a),s.f=0,s.g=s.heuristic(a);const n=[s];let r;for(;n.length>0||r===a;){for(n.sort(((t,e)=>t.g-e.g));n.length>0&&!0===n[0].visited;)n.shift();if(n.length<=0)break;r=n.shift(),r.visited=!0,r.neighbourNodes=[...i].filter((t=>!(!(t.col===r.col&&t.row===r.row||t.col===r.col&&t.row===r.row-1||t.col===r.col+1&&t.row===r.row||t.col===r.col&&t.row===r.row+1||t.col===r.col-1&&t.row===r.row)&&(t.col!==r.col-1||t.row!==r.row-1||l.default.walls[t.row]&&null!==l.default.walls[t.row][t.col+1]&&l.default.walls[t.row+1]&&null!==l.default.walls[t.row+1][t.col])&&(t.col!==r.col+1||t.row!==r.row-1||l.default.walls[t.row]&&null!==l.default.walls[t.row][t.col-1]&&l.default.walls[t.row+1]&&null!==l.default.walls[t.row+1][t.col])&&(t.col!==r.col+1||t.row!==r.row+1||l.default.walls[t.row]&&null!==l.default.walls[t.row][t.col-1]&&l.default.walls[t.row-1]&&null!==l.default.walls[t.row-1][t.col])&&(t.col!==r.col-1||t.row!==r.row+1||l.default.walls[t.row]&&null!==l.default.walls[t.row][t.col+1]&&l.default.walls[t.row-1]&&null!==l.default.walls[t.row-1][t.col])))),r.neighbourNodes.map((t=>{!1===t.visited&&n.push(t);const e=r.f+o.pointToPointDistance(r,t);return e<t.f&&(t.parent=r,t.f=e,t.g=t.f+t.heuristic(a)),t}))}const d=[];if(a.parent){let t=a;for(;t.parent;)d.push(t),t=t.parent}return d};class h{constructor(t,e){this.deltas={dyTop:0,dyBottom:0,dxLeft:0,dxRight:0},this.visited=!1,this.g=1/0,this.f=1/0,this.parent=null,this.x=t.x,this.y=t.y,this.collisionBox=new s.default(e.width,e.height),this.updateTileDeltas(),this.updateMapPosition()}heuristic(t){return o.pointToPointDistance(this,t)}updateTileDeltas(){this.deltas.dyTop=this.y%a.TILE_SIZE,this.deltas.dyBottom=a.TILE_SIZE-this.deltas.dyTop,this.deltas.dxLeft=this.x%a.TILE_SIZE,this.deltas.dxRight=a.TILE_SIZE-this.deltas.dxLeft}updateMapPosition(){this.row=Math.floor(this.y/a.TILE_SIZE),this.col=Math.floor(this.x/a.TILE_SIZE)}}e.PathNode=h},1533:(t,e,i)=>{Object.defineProperty(e,"__esModule",{value:!0});const a=i(8861),o=i(5035),s=i(9239),n=i(4811),l=i(2908);class r{static cast(t,e,i){if(!(e>=0)){const a=t.deltas.dyTop/Math.tan(-e),o=1/a>0;return a>=0&&o?r.getInterceptPointNE(t,e,i):r.getInterceptPointNW(t,e,i)}{const a=t.deltas.dyBottom/Math.tan(e);if(a>=0)return r.getInterceptPointSE(t,e,i);if(a<0)return r.getInterceptPointSW(t,e,i)}}static drawRay(t,e="#4444FF"){n.context.strokeStyle=e,n.context.lineWidth=.2,n.context.beginPath(),n.context.moveTo(n.default.halfWidth,n.default.halfHeight),n.context.lineTo(n.default.halfWidth+t.x,n.default.halfHeight+t.y),n.context.stroke(),n.context.lineWidth=1}static determineIfThereAreObstaclesBetweenTwoPoints(t,e){const i=o.angleBetweenPoints(e,t),a=r.cast(t,i,e);return!a||null!==a.wallHit}static determineIfThereAreObstaclesBetweenTwoPathNodes(t,e){const i=+o.angleBetweenPoints(e,t).toFixed(2);if(0===i){const[i,a]=E(t,e);if(r.determineIfThereAreObstaclesBetweenTwoPoints(i,a))return!0;const[o,s]=T(t,e);return!!r.determineIfThereAreObstaclesBetweenTwoPoints(o,s)}if(i>0&&i<l.Pi2Decimals/2){const[i,a]=E(t,e);if(r.determineIfThereAreObstaclesBetweenTwoPoints(i,a))return!0;const[o,s]=w(t,e);return!!r.determineIfThereAreObstaclesBetweenTwoPoints(o,s)}if(i===l.Pi2Decimals/2){const[i,a]=T(t,e);if(r.determineIfThereAreObstaclesBetweenTwoPoints(i,a))return!0;const[o,s]=w(t,e);return!!r.determineIfThereAreObstaclesBetweenTwoPoints(o,s)}if(i>l.Pi2Decimals/2&&i<l.Pi2Decimals){const[i,a]=p(t,e);if(r.determineIfThereAreObstaclesBetweenTwoPoints(i,a))return!0;const[o,s]=T(t,e);return!!r.determineIfThereAreObstaclesBetweenTwoPoints(o,s)}if(Math.abs(i)===l.Pi2Decimals){const[i,a]=p(t,e);if(r.determineIfThereAreObstaclesBetweenTwoPoints(i,a))return!0;const[o,s]=w(t,e);return!!r.determineIfThereAreObstaclesBetweenTwoPoints(o,s)}if(i>-l.Pi2Decimals&&i<-l.Pi2Decimals/2){const[i,a]=E(t,e);if(r.determineIfThereAreObstaclesBetweenTwoPoints(i,a))return!0;const[o,s]=w(t,e);return!!r.determineIfThereAreObstaclesBetweenTwoPoints(o,s)}if(i===-l.Pi2Decimals/2){const[i,a]=E(t,e);if(r.determineIfThereAreObstaclesBetweenTwoPoints(i,a))return!0;const[o,s]=p(t,e);return!!r.determineIfThereAreObstaclesBetweenTwoPoints(o,s)}if(i>-l.Pi2Decimals/2&&i<0){const[i,a]=p(t,e);if(r.determineIfThereAreObstaclesBetweenTwoPoints(i,a))return!0;const[o,s]=T(t,e);return!!r.determineIfThereAreObstaclesBetweenTwoPoints(o,s)}}static getInterceptPointSE(t,e,i){let o,s,l=null,h=null,d=0;for(;s=d*a.TILE_SIZE,o=0===e?0:(t.deltas.dxRight+s)*Math.tan(e),!(s+t.deltas.dxRight>r.rangeHorizontal||o>r.rangeVertical||i&&(s+t.deltas.dxRight>i.x-t.x||o>i.y-t.y));){if(a.DEBUG.RAYCASTER){let e;e=i?{x:n.default.center.x-(i.x-t.x)+t.deltas.dxRight+s,y:n.default.center.y-(i.y-t.y)+o}:{x:n.default.center.x+t.deltas.dxRight+s,y:n.default.center.y+o},n.context.strokeStyle="#4444FF",n.context.beginPath(),n.context.arc(e.x,e.y,2,0,2*Math.PI),n.context.stroke()}if(h=r.checkWallCollisionVerticalSE(d,t,o),h){l={x:s+t.deltas.dxRight,y:o};break}++d}let c,u,f=null,x=null,y=0;for(;u=y*a.TILE_SIZE,!(0===e||(c=(t.deltas.dyBottom+u)/Math.tan(e),u+t.deltas.dyBottom>r.rangeVertical||c>r.rangeHorizontal)||i&&(u+t.deltas.dyBottom>i.y-t.y||Math.round(c)>i.x-t.x));){if(a.DEBUG.RAYCASTER){let e;e=i?{x:n.default.center.x-(i.x-t.x)+c,y:n.default.center.y-(i.y-t.y)+t.deltas.dyBottom+u}:{x:n.default.center.x+c,y:n.default.center.y+t.deltas.dyBottom+u},n.context.strokeStyle="#44FF44",n.context.beginPath(),n.context.arc(e.x,e.y,2,0,2*Math.PI),n.context.stroke()}if(o<u)break;if(x=r.checkWallCollisionHorizontalSE(y,t,c),x){f={x:c,y:u+t.deltas.dyBottom};break}++y}if(l&&null===f)return{hitPoint:l,wallHit:h};if(f&&null===l)return{hitPoint:f,wallHit:x};if(f&&l)return Math.sqrt(Math.pow(l.x,2)+Math.pow(l.y,2))>Math.sqrt(Math.pow(f.x,2)+Math.pow(f.y,2))?{hitPoint:f,wallHit:x}:{hitPoint:l,wallHit:h};if(null===f&&null===l){const e={x:c,y:u+t.deltas.dyBottom},i={x:s+t.deltas.dxRight,y:o};return Math.sqrt(Math.pow(i.x,2)+Math.pow(i.y,2))>Math.sqrt(Math.pow(e.x,2)+Math.pow(e.y,2))?{hitPoint:e,wallHit:x}:{hitPoint:i,wallHit:h}}}static getInterceptPointNE(t,e,i){let o,s,l=null,h=null,d=0;for(;s=d*a.TILE_SIZE,o=0===e?0:(t.deltas.dxRight+s)*Math.tan(-e),!(s+t.deltas.dxRight>r.rangeHorizontal||o>r.rangeVertical||i&&(s+t.deltas.dxRight>i.x-t.x||o>t.y-i.y));){if(a.DEBUG.RAYCASTER){let e;e=i?{x:n.default.center.x-(i.x-t.x)+t.deltas.dxRight+s,y:n.default.center.y-(i.y-t.y)-o}:{x:n.default.center.x+t.deltas.dxRight+s,y:n.default.center.y-o},n.context.strokeStyle="#4444FF",n.context.beginPath(),n.context.arc(e.x,e.y,2,0,2*Math.PI),n.context.stroke()}if(h=r.checkWallCollisionVerticalNE(d,t,o),h){l={x:s+t.deltas.dxRight,y:-o};break}++d}let c,u,f=null,x=null,y=0;for(;u=y*a.TILE_SIZE,!(0===e||(c=(t.deltas.dyTop+u)/Math.tan(-e),u+t.deltas.dyTop>r.rangeVertical||c>r.rangeHorizontal)||i&&(u+t.deltas.dyTop>t.y-i.y||Math.round(c)>i.x-t.x));){if(a.DEBUG.RAYCASTER){let e;e=i?{x:n.default.center.x-(i.x-t.x)+c,y:n.default.center.y-(i.y-t.y)-t.deltas.dyTop-u}:{x:n.default.center.x+c,y:n.default.center.y-u-t.deltas.dyTop},n.context.strokeStyle="#44FF44",n.context.beginPath(),n.context.arc(e.x,e.y,2,0,2*Math.PI),n.context.stroke()}if(o<u)break;if(x=r.checkWallCollisionHorizontalNE(y,t,c),x){f={x:c,y:-u-t.deltas.dyTop};break}++y}if(l&&null===f)return{hitPoint:l,wallHit:h};if(f&&null===l)return{hitPoint:f,wallHit:x};if(f&&l)return Math.sqrt(Math.pow(l.x,2)+Math.pow(l.y,2))>Math.sqrt(Math.pow(f.x,2)+Math.pow(f.y,2))?{hitPoint:f,wallHit:x}:{hitPoint:l,wallHit:h};if(null===f&&null===l){const e={x:c,y:-u-t.deltas.dyTop},i={x:s+t.deltas.dxRight,y:-o};return Math.sqrt(Math.pow(i.x,2)+Math.pow(i.y,2))>Math.sqrt(Math.pow(e.x,2)+Math.pow(e.y,2))?{hitPoint:e,wallHit:x}:{hitPoint:i,wallHit:h}}}static getInterceptPointNW(t,e,i){let o,s,l=null,h=null,d=0;for(;s=d*a.TILE_SIZE,o=0===e?0:(t.deltas.dxLeft+s)*Math.tan(Math.PI- -e),!(s+t.deltas.dxLeft>r.rangeHorizontal||o>r.rangeVertical||i&&(s+t.deltas.dxLeft>t.x-i.x||o>t.y-i.y));){if(a.DEBUG.RAYCASTER){let e;e=i?{x:n.default.center.x-(i.x-t.x)-t.deltas.dxLeft-s,y:n.default.center.y-(i.y-t.y)-o}:{x:n.default.center.x-t.deltas.dxLeft-s,y:n.default.center.y-o},n.context.strokeStyle="#4444FF",n.context.beginPath(),n.context.arc(e.x,e.y,2,0,2*Math.PI),n.context.stroke()}if(h=r.checkWallCollisionVerticalNW(d,t,o),h){l={x:-s-t.deltas.dxLeft,y:-o};break}++d}let c,u,f=null,x=null,y=0;for(;u=y*a.TILE_SIZE,!(0===e||(c=(t.deltas.dyTop+u)/Math.tan(Math.PI- -e),u+t.deltas.dyTop>r.rangeVertical||c>r.rangeHorizontal)||i&&(u+t.deltas.dyTop>t.y-i.y||Math.round(c)>t.x-i.x));){if(a.DEBUG.RAYCASTER){let e;e=i?{x:n.default.center.x-(i.x-t.x)-c,y:n.default.center.y-(i.y-t.y)-t.deltas.dyTop-u}:{x:n.default.center.x-c,y:n.default.center.y-t.deltas.dyTop-u},n.context.strokeStyle="#44FF44",n.context.beginPath(),n.context.arc(e.x,e.y,2,0,2*Math.PI),n.context.stroke()}if(o<u)break;if(x=r.checkWallCollisionHorizontalNW(y,t,c),x){f={x:-c,y:-u-t.deltas.dyTop};break}++y}if(l&&null===f)return{hitPoint:l,wallHit:h};if(f&&null===l)return{hitPoint:f,wallHit:x};if(f&&l)return Math.sqrt(Math.pow(l.x,2)+Math.pow(l.y,2))>Math.sqrt(Math.pow(f.x,2)+Math.pow(f.y,2))?{hitPoint:f,wallHit:x}:{hitPoint:l,wallHit:h};if(null===f&&null===l){const e={x:-c,y:-u-t.deltas.dyTop},i={x:-s-t.deltas.dxLeft,y:-o};return Math.sqrt(Math.pow(i.x,2)+Math.pow(i.y,2))>Math.sqrt(Math.pow(e.x,2)+Math.pow(e.y,2))?{hitPoint:e,wallHit:x}:{hitPoint:i,wallHit:h}}}static getInterceptPointSW(t,e,i){let o,s,l=null,h=null,d=0;for(;s=d*a.TILE_SIZE,o=0===e?0:(t.deltas.dxLeft+s)*Math.tan(Math.PI-e),!(s+t.deltas.dxLeft>r.rangeHorizontal||o>r.rangeVertical||i&&(s+t.deltas.dxLeft>t.x-i.x||o>i.y-t.y));){if(a.DEBUG.RAYCASTER){let e;e=i?{x:n.default.center.x-(i.x-t.x)-t.deltas.dxLeft-s,y:n.default.center.y-(i.y-t.y)+o}:{x:n.default.center.x-t.deltas.dxLeft-s,y:n.default.center.y+o},n.context.strokeStyle="#4444FF",n.context.beginPath(),n.context.arc(e.x,e.y,2,0,2*Math.PI),n.context.stroke()}if(h=r.checkWallCollisionVerticalSW(d,t,o),h){l={x:-s-t.deltas.dxLeft,y:o};break}++d}let c,u,f=null,x=null,y=0;for(;u=y*a.TILE_SIZE,!(0===e||(c=(t.deltas.dyBottom+u)/Math.tan(e),u+t.deltas.dyBottom>r.rangeVertical||-c>r.rangeHorizontal)||i&&(u+t.deltas.dyBottom>i.y-t.y||-c>t.x-i.x));){if(a.DEBUG.RAYCASTER){let e;e=i?{x:n.default.center.x-(i.x-t.x)+c,y:n.default.center.y-(i.y-t.y)+t.deltas.dyBottom+u}:{x:n.default.center.x+c,y:n.default.center.y+t.deltas.dyBottom+u},n.context.strokeStyle="#44FF44",n.context.beginPath(),n.context.arc(e.x,e.y,2,0,2*Math.PI),n.context.stroke()}if(o<u)break;if(x=r.checkWallCollisionHorizontalSW(y,t,c),x){f={x:c,y:u+t.deltas.dyBottom};break}++y}if(l&&null===f)return{hitPoint:l,wallHit:h};if(f&&null===l)return{hitPoint:f,wallHit:x};if(f&&l)return Math.sqrt(Math.pow(l.x,2)+Math.pow(l.y,2))>Math.sqrt(Math.pow(f.x,2)+Math.pow(f.y,2))?{hitPoint:f,wallHit:x}:{hitPoint:l,wallHit:h};if(null===f&&null===l){const e={x:c,y:u+t.deltas.dyBottom},i={x:-s-t.deltas.dxLeft,y:o};return Math.sqrt(Math.pow(i.x,2)+Math.pow(i.y,2))>Math.sqrt(Math.pow(e.x,2)+Math.pow(e.y,2))?{hitPoint:e,wallHit:x}:{hitPoint:i,wallHit:h}}}static checkWallCollisionVerticalSE(t,e,i){const o=1+e.col+t,l=e.row+Math.floor((e.deltas.dyTop+i)/a.TILE_SIZE),r=e.row+Math.floor((e.deltas.dyTop+i-1)/a.TILE_SIZE);let h=null;return s.default.walls[l]&&(s.default.walls[l][o]?h=s.default.walls[l][o]:s.default.walls[r][o]&&(h=s.default.walls[r][o])),a.DEBUG.RAYCASTER&&n.context.fillText(`col: ${o}, row: ${l}, hit: ${h?[h.row,h.col]:null}`,10,112+12*t),h}static checkWallCollisionHorizontalSE(t,e,i){const o=e.col+Math.floor((e.deltas.dxLeft+i)/a.TILE_SIZE),l=e.row+t+1;let r=null;return s.default.walls[l]&&s.default.walls[l][o]&&(r=s.default.walls[l][o]),a.DEBUG.RAYCASTER&&n.context.fillText(`col: ${o}, row: ${l}, hit: ${r?[r.row,r.col]:null}`,10,212+12*t),r}static checkWallCollisionVerticalNE(t,e,i){const o=1+e.col+t,l=e.row+Math.floor((e.deltas.dyTop-i)/a.TILE_SIZE);let r=null;return s.default.walls[l]&&s.default.walls[l][o]&&(r=s.default.walls[l][o]),a.DEBUG.RAYCASTER&&n.context.fillText(`col: ${o}, row: ${l}, hit: ${r?[r.row,r.col]:null}`,10,112+12*t),r}static checkWallCollisionHorizontalNE(t,e,i){const o=e.col+Math.floor((e.deltas.dxLeft+i)/a.TILE_SIZE),l=e.col+Math.floor((e.deltas.dxLeft+i-1)/a.TILE_SIZE),r=e.row-t-1;let h=null;return s.default.walls[r]&&(s.default.walls[r][o]?h=s.default.walls[r][o]:s.default.walls[r][l]&&(h=s.default.walls[r][l])),a.DEBUG.RAYCASTER&&n.context.fillText(`col: ${o}, row: ${r}, hit: ${h?[h.row,h.col]:null}`,10,212+12*t),h}static checkWallCollisionVerticalNW(t,e,i){const o=-1+e.col-t,l=e.row+Math.floor((e.deltas.dyTop-i)/a.TILE_SIZE);let r=null;return s.default.walls[l]&&s.default.walls[l][o]&&(r=s.default.walls[l][o]),a.DEBUG.RAYCASTER&&n.context.fillText(`col: ${o}, row: ${l}, hit: ${r?[r.row,r.col]:null}`,10,112+12*t),r}static checkWallCollisionHorizontalNW(t,e,i){const o=e.col-Math.floor((e.deltas.dxRight+i)/a.TILE_SIZE),l=e.row-t-1;let r=null;return s.default.walls[l]&&s.default.walls[l][o]&&(r=s.default.walls[l][o]),a.DEBUG.RAYCASTER&&n.context.fillText(`col: ${o}, row: ${l}, hit: ${r?[r.row,r.col]:null}`,10,212+12*t),r}static checkWallCollisionVerticalSW(t,e,i){const o=e.col-t-1,l=e.row+Math.floor((e.deltas.dyTop+i)/a.TILE_SIZE),r=e.row+Math.floor((e.deltas.dyTop+i-1)/a.TILE_SIZE);let h=null;return s.default.walls[l]&&(s.default.walls[l][o]?h=s.default.walls[l][o]:s.default.walls[r][o]&&(h=s.default.walls[r][o])),a.DEBUG.RAYCASTER&&n.context.fillText(`col: ${o}, row: ${l}, hit: ${h?[h.row,h.col]:null}`,10,112+12*t),h}static checkWallCollisionHorizontalSW(t,e,i){const o=e.col-Math.floor((e.deltas.dxRight-i)/a.TILE_SIZE),l=e.row+t+1;let r=null;return s.default.walls[l]&&s.default.walls[l][o]&&(r=s.default.walls[l][o]),a.DEBUG.RAYCASTER&&n.context.fillText(`col: ${o}, row: ${l}, hit: ${r?[r.row,r.col]:null}`,10,212+12*t),r}}e.default=r,r.outsideOfScreenOffset=2*a.TILE_SIZE,r.rangeHorizontal=n.default.halfWidth+r.outsideOfScreenOffset,r.rangeVertical=n.default.halfHeight+2*r.outsideOfScreenOffset;const h={x:0,y:0,deltas:{dyTop:0,dyBottom:0,dxLeft:0,dxRight:0}},d={...h,deltas:{...h.deltas}},c={...h,deltas:{...h.deltas}},u={...h,deltas:{...h.deltas}},f={...h,deltas:{...h.deltas}},x={...h,deltas:{...h.deltas}},y={...h,deltas:{...h.deltas}},g={...h,deltas:{...h.deltas}},m={...h,deltas:{...h.deltas}};function p(t,e){return d.x=t.x-t.collisionBox.halfWidth,d.y=t.y-t.collisionBox.halfHeight,d.row=Math.floor(d.y/a.TILE_SIZE),d.col=Math.floor(d.x/a.TILE_SIZE),d.deltas.dyTop=d.y%a.TILE_SIZE,d.deltas.dyBottom=a.TILE_SIZE-d.deltas.dyTop,d.deltas.dxLeft=d.x%a.TILE_SIZE,d.deltas.dxRight=a.TILE_SIZE-d.deltas.dxLeft,c.x=e.x-e.collisionBox.halfWidth,c.y=e.y-e.collisionBox.halfHeight,c.row=Math.floor(c.y/a.TILE_SIZE),c.col=Math.floor(c.x/a.TILE_SIZE),c.deltas.dyTop=c.y%a.TILE_SIZE,c.deltas.dyBottom=a.TILE_SIZE-c.deltas.dyTop,c.deltas.dxLeft=c.x%a.TILE_SIZE,c.deltas.dxRight=a.TILE_SIZE-c.deltas.dxLeft,[d,c]}function E(t,e){return u.x=t.x+t.collisionBox.halfWidth,u.y=t.y-t.collisionBox.halfHeight,u.row=Math.floor(u.y/a.TILE_SIZE),u.col=Math.floor(u.x/a.TILE_SIZE),u.deltas.dyTop=u.y%a.TILE_SIZE,u.deltas.dyBottom=a.TILE_SIZE-u.deltas.dyTop,u.deltas.dxLeft=u.x%a.TILE_SIZE,u.deltas.dxRight=a.TILE_SIZE-u.deltas.dxLeft,f.x=e.x+e.collisionBox.halfWidth,f.y=e.y-e.collisionBox.halfHeight,f.row=Math.floor(f.y/a.TILE_SIZE),f.col=Math.floor(f.x/a.TILE_SIZE),f.deltas.dyTop=f.y%a.TILE_SIZE,f.deltas.dyBottom=a.TILE_SIZE-f.deltas.dyTop,f.deltas.dxLeft=f.x%a.TILE_SIZE,f.deltas.dxRight=a.TILE_SIZE-f.deltas.dxLeft,[u,f]}function w(t,e){return x.x=t.x-t.collisionBox.halfWidth,x.y=t.y+t.collisionBox.halfHeight,x.row=Math.floor(x.y/a.TILE_SIZE),x.col=Math.floor(x.x/a.TILE_SIZE),x.deltas.dyTop=x.y%a.TILE_SIZE,x.deltas.dyBottom=a.TILE_SIZE-x.deltas.dyTop,x.deltas.dxLeft=x.x%a.TILE_SIZE,x.deltas.dxRight=a.TILE_SIZE-x.deltas.dxLeft,y.x=e.x-e.collisionBox.halfWidth,y.y=e.y+e.collisionBox.halfHeight,y.row=Math.floor(y.y/a.TILE_SIZE),y.col=Math.floor(y.x/a.TILE_SIZE),y.deltas.dyTop=y.y%a.TILE_SIZE,y.deltas.dyBottom=a.TILE_SIZE-y.deltas.dyTop,y.deltas.dxLeft=y.x%a.TILE_SIZE,y.deltas.dxRight=a.TILE_SIZE-y.deltas.dxLeft,[x,y]}function T(t,e){return g.x=t.x+t.collisionBox.halfWidth,g.y=t.y+t.collisionBox.halfHeight,g.row=Math.floor(g.y/a.TILE_SIZE),g.col=Math.floor(g.x/a.TILE_SIZE),g.deltas.dyTop=g.y%a.TILE_SIZE,g.deltas.dyBottom=a.TILE_SIZE-g.deltas.dyTop,g.deltas.dxLeft=g.x%a.TILE_SIZE,x.deltas.dxRight=a.TILE_SIZE-g.deltas.dxLeft,m.x=e.x+e.collisionBox.halfWidth,m.y=e.y+e.collisionBox.halfHeight,m.row=Math.floor(m.y/a.TILE_SIZE),m.col=Math.floor(m.x/a.TILE_SIZE),m.deltas.dyTop=m.y%a.TILE_SIZE,m.deltas.dyBottom=a.TILE_SIZE-m.deltas.dyTop,m.deltas.dxLeft=m.x%a.TILE_SIZE,y.deltas.dxRight=a.TILE_SIZE-m.deltas.dxLeft,[g,m]}},2063:(t,e,i)=>{Object.defineProperty(e,"__esModule",{value:!0});const a=i(8861),o=i(3549),s=i(400),n=i(4811),l=i(8015),r=i(4897),h=i(1201),d=i(7204),c=i(9829);class u{constructor(){window.onfocus=()=>{c.default.restart()},u.loadedPercentages.set(h.default.Graphics,{weight:.3,loaded:0}),u.loadedPercentages.set(h.default.Audio,{weight:.7,loaded:0}),o.default.load((t=>this.gameAssetLoaded(h.default.Audio,t))),s.default.load((t=>this.gameAssetLoaded(h.default.Graphics,t)))}start(){const t=setInterval((()=>{u.loaded&&(clearInterval(t),u.stateManager.setState(l.default.MAIN_MENU))}),250);this.gameLoop(0)}gameAssetLoaded(t,e){const i=u.loadedPercentages.get(t);i.loaded=e,u.loadedPercentages.set(t,i),u.loadedPercentage=0;for(const[t,e]of u.loadedPercentages)u.loadedPercentage+=e.loaded*e.weight;1===u.loadedPercentage&&(u.loaded=!0)}gameLoop(t){void 0===d.default.previousTimestamp&&(d.default.previousTimestamp=t),d.default.setFrameElapsedTime(t-d.default.previousTimestamp),this.update(),this.render(),c.default.calculateFrameRate(d.default.previousTimestamp,d.default.frameElapsedTime),d.default.previousTimestamp=t,window.requestAnimationFrame((t=>this.gameLoop(t)))}update(){u.stateManager.update()}render(){n.default.clear(),u.stateManager.render(),a.DEBUG.FPS&&c.default.debug_drawFPS()}}e.default=u,u.loaded=!1,u.loadedPercentage=0,u.loadedPercentages=new Map,u.stateManager=new r.default},4137:(t,e,i)=>{Object.defineProperty(e,"__esModule",{value:!0});const a=i(8861),o=i(3602),s=i(2063),n=i(4811),l=i(8015);e.default=class{constructor(){this.handleEnterPress=t=>{t.keyCode===o.KEYBOARD_KEYS.ENTER&&s.default.stateManager.setState(l.default.MAIN_MENU)}}enter(){window.addEventListener("keydown",this.handleEnterPress)}exit(){window.removeEventListener("keydown",this.handleEnterPress)}update(){}render(){this.drawGameOverScreen()}drawGameOverScreen(){n.context.beginPath(),n.context.fillStyle="#dd0000",n.context.font="32px Monospace",n.context.fillText("YOU DIED!",a.CANVAS_WIDTH/2-80,a.CANVAS_HEIGHT/2+10),n.context.stroke()}}},2406:(t,e,i)=>{Object.defineProperty(e,"__esModule",{value:!0});const a=i(8861),o=i(3602),s=i(2063),n=i(4811),l=i(8015),r=i(1597);e.default=class{constructor(){this.handleEnterPress=t=>{t.keyCode===o.KEYBOARD_KEYS.ENTER&&(r.default.isLastLevel()?(r.default.resetToStartingLevel(),s.default.stateManager.setState(l.default.VICTORY)):(r.default.nextLevel(),s.default.stateManager.setState(l.default.PLAYING)))}}enter(){window.addEventListener("keydown",this.handleEnterPress)}exit(){window.removeEventListener("keydown",this.handleEnterPress)}update(){}render(){this.drawLevelClearedStatistics()}drawLevelClearedStatistics(){n.context.beginPath(),n.context.fillStyle="#5555ff",n.context.font="22px Monospace",n.context.fillText(`Level ${r.default.currentLevel} Cleared!`,a.CANVAS_WIDTH/2-100,a.CANVAS_HEIGHT/2),n.context.font="16px Monospace",n.context.fillStyle="#9999ff",n.context.fillText(`Time: ${Math.round(r.LevelTimer.timeSpentOnCurrentLevel/1e3)} seconds`,a.CANVAS_WIDTH/2-100,a.CANVAS_HEIGHT/2+30),n.context.stroke()}}},745:(t,e,i)=>{Object.defineProperty(e,"__esModule",{value:!0});const a=i(8861),o=i(2063),s=i(4811);e.default=class{enter(){}exit(){}update(){}render(){this.drawLoadingDialog()}drawLoadingDialog(){s.context.beginPath(),s.context.fillStyle="#FFC100",s.context.font="20px Monospace",s.context.fillText(`Loading: ${100*o.default.loadedPercentage}%`,a.CANVAS_WIDTH/2-70,a.CANVAS_HEIGHT/2-10),s.context.stroke()}}},7265:(t,e,i)=>{Object.defineProperty(e,"__esModule",{value:!0});const a=i(8861),o=i(3602),s=i(2063),n=i(7204),l=i(4811),r=i(8015);e.default=class{constructor(){this.animationProgress=0,this.animationLength=n.default.ONE_SECOND,this.instructionsVisible=!0,this.handleMenuSelection=t=>{t.keyCode===o.KEYBOARD_KEYS.ENTER&&s.default.stateManager.setState(r.default.PLAYING)}}enter(){window.addEventListener("keydown",this.handleMenuSelection)}exit(){window.removeEventListener("keydown",this.handleMenuSelection)}update(){this.animationProgress=(this.animationProgress+n.default.frameElapsedTime)%this.animationLength,this.animationProgress>=this.animationLength/2?this.instructionsVisible=!1:this.instructionsVisible=!0}render(){this.drawMainMenu()}drawMainMenu(){l.context.beginPath(),l.context.fillStyle="#FFC100",l.context.font="12px Monospace",l.context.fillText("Retro 2D Top-Down Game Engine",a.CANVAS_WIDTH/2-106,a.CANVAS_HEIGHT/2-34),this.instructionsVisible&&(l.context.font="20px Monospace",l.context.fillText("Press Enter to start",a.CANVAS_WIDTH/2-118,a.CANVAS_HEIGHT/2+10)),l.context.stroke()}}},4897:(t,e,i)=>{Object.defineProperty(e,"__esModule",{value:!0});const a=i(8015);e.default=class{constructor(){this.currentState=a.default.LOADING}getState(){return this.currentState}setState(t){this.currentState.exit(t);const e=this.currentState;return t.enter(e),this.currentState=t,this.currentState}update(){this.currentState.update()}render(){this.currentState.render()}}},8839:(t,e,i)=>{Object.defineProperty(e,"__esModule",{value:!0});const a=i(8861),o=i(3602),s=i(4811),n=i(2063),l=i(8015);e.default=class{constructor(){this.pauseHandler=t=>{switch(t.keyCode){case o.KEYBOARD_KEYS.ESC:t.preventDefault(),l.default.PLAYING.destroyGame(),n.default.stateManager.setState(l.default.MAIN_MENU);break;case o.KEYBOARD_KEYS.p:n.default.stateManager.setState(l.default.PLAYING)}}}enter(){window.addEventListener("keydown",this.pauseHandler)}exit(){window.removeEventListener("keydown",this.pauseHandler)}update(){}render(){l.default.PLAYING.render(),this.drawPauseMenu()}drawPauseMenu(){s.context.beginPath(),s.context.fillStyle="#FFC100",s.context.font="20px Monospace",s.context.fillText("Paused",a.CANVAS_WIDTH/2-36,a.CANVAS_HEIGHT/2-54),s.context.font="12px Monospace",s.context.fillText("  p - Resume",a.CANVAS_WIDTH/2-50,a.CANVAS_HEIGHT/2-34),s.context.fillText("ESC - Main Menu",a.CANVAS_WIDTH/2-50,a.CANVAS_HEIGHT/2-18),s.context.stroke()}}},9936:(t,e,i)=>{Object.defineProperty(e,"__esModule",{value:!0});const a=i(8861),o=i(8015),s=i(2063),n=i(4811),l=i(5729),r=i(3602),h=i(4301),d=i(7311),c=i(9239),u=i(1597);e.default=class{constructor(){this.playerSetShootingTrue=t=>{this.player.setShooting(!0)},this.playerSetShootingFalse=t=>{this.player.setShooting(!1)},this.pauseHandler=t=>{switch(t.keyCode){case r.KEYBOARD_KEYS.ESC:case r.KEYBOARD_KEYS.p:t.preventDefault(),s.default.stateManager.setState(o.default.PAUSED)}}}enter(t){t!==o.default.PAUSED&&this.startNewGame(),this.setupOwnEventListeners()}setupOwnEventListeners(){window.onblur=()=>{s.default.stateManager.setState(o.default.PAUSED)},window.addEventListener("keydown",this.pauseHandler)}exit(t){this.clearOwnEventListeners(),t!==o.default.PAUSED&&this.destroyGame()}clearOwnEventListeners(){window.onblur=null,window.removeEventListener("keydown",this.pauseHandler)}update(){this.player.alive?(n.default.updateMousePosition(),d.default.update(this.player),this.player.update(),this.map.update(),this.checkForLevelClearedCondition(),u.LevelTimer.incrementTimeSpentOnCurrentLevel()):(u.default.resetToStartingLevel(),s.default.stateManager.setState(o.default.GAME_OVER))}render(){this.map.draw(),this.player.draw(),a.DEBUG.SHOW_LEVEL_TIME&&u.LevelTimer.debug_displayTimeSpentOnCurrentLevel()}startNewGame(){this.map=new c.default,this.player=this.map.player,l.default.addListenerKeydown(this.player.keydownHandler),l.default.addListenerKeyup(this.player.keyupHandler),h.default.init(this.playerSetShootingTrue,this.playerSetShootingFalse)}checkForLevelClearedCondition(){0===c.default.enemiesRemaining()&&this.checkIfPlayerIsInsideExitPortal()&&s.default.stateManager.setState(o.default.LEVEL_CLEARED)}checkIfPlayerIsInsideExitPortal(){return this.player.row===c.default.exitPortal.row&&this.player.col===c.default.exitPortal.col}destroyGame(){l.default.removeKeydownAndKeyupListeners(this.player.keydownHandler),h.default.removeMouseLeftClickListeners(this.playerSetShootingTrue,this.playerSetShootingFalse),this.map.destroy(),this.map=null,this.player=null}}},9525:(t,e,i)=>{Object.defineProperty(e,"__esModule",{value:!0});const a=i(8861),o=i(3602),s=i(2063),n=i(4811),l=i(8015);e.default=class{constructor(){this.handleEnterPress=t=>{t.keyCode===o.KEYBOARD_KEYS.ENTER&&s.default.stateManager.setState(l.default.MAIN_MENU)}}enter(){window.addEventListener("keydown",this.handleEnterPress)}exit(){window.removeEventListener("keydown",this.handleEnterPress)}update(){}render(){this.drawVictoryScreen()}drawVictoryScreen(){n.context.beginPath(),n.context.fillStyle="#00dd00",n.context.font="32px Monospace",n.context.fillText("VICTORY!",a.CANVAS_WIDTH/2-80,a.CANVAS_HEIGHT/2+10),n.context.stroke()}}},8015:(t,e,i)=>{Object.defineProperty(e,"__esModule",{value:!0});const a=i(745),o=i(7265),s=i(9936),n=i(2406),l=i(8839),r=i(4137),h=i(9525),d={LOADING:new a.default,MAIN_MENU:new o.default,PLAYING:new s.default,LEVEL_CLEARED:new n.default,PAUSED:new l.default,GAME_OVER:new r.default,VICTORY:new h.default};e.default=d},5035:(t,e)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.angleBetweenPoints=e.pointToPointDistance=void 0,e.pointToPointDistance=function(t,e){return Math.sqrt((e.x-t.x)*(e.x-t.x)+(e.y-t.y)*(e.y-t.y))},e.angleBetweenPoints=function(t,e){return Math.atan2(t.y-e.y,t.x-e.x)}},2908:(t,e)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.radiansToDegrees=e.randomInRange=e.Pi2Decimals=void 0,e.Pi2Decimals=+Math.PI.toFixed(2),e.randomInRange=function(t,e){return t+Math.floor(Math.random()*(e-t+1))},e.radiansToDegrees=function(t){return t*(180/Math.PI)}},7311:(t,e,i)=>{Object.defineProperty(e,"__esModule",{value:!0});const a=i(4301);class o{static update(t){const e=navigator.getGamepads();e[0]&&(this.handleMovement(e[0],t),this.handleAiming(e[0]),this.handleButtons(e[0],t))}static handleMovement(t,e){const i=+t.axes[0].toFixed(2);i>0?(e.moving.right=!0,e.movingDirections.right=!0):i<0?(e.moving.left=!0,e.movingDirections.left=!0):(e.moving.left=!1,e.movingDirections.left=!1,e.moving.right=!1,e.movingDirections.right=!1);const a=+t.axes[1].toFixed(2);a>0?(e.moving.down=!0,e.movingDirections.down=!0):a<0?(e.moving.up=!0,e.movingDirections.up=!0):(e.moving.up=!1,e.movingDirections.up=!1,e.moving.down=!1,e.movingDirections.down=!1)}static handleAiming(t){const e=t.axes[2],i=t.axes[3];0!=+e.toFixed(2)&&(a.default.x+=e*this.aimModifier),0!=+i.toFixed(2)&&(a.default.y+=i*this.aimModifier)}static handleButtons(t,e){t.buttons[5].pressed?e.setShooting(!0):e.setShooting(!1)}}e.default=o,o.aimModifier=10},5729:(t,e)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.default=class{static addListenerKeydown(t){document.addEventListener("keydown",t)}static addListenerKeyup(t){document.addEventListener("keyup",t)}static removeKeydownAndKeyupListeners(t){document.removeEventListener("keyup",t),document.removeEventListener("keydown",t)}}},4301:(t,e,i)=>{Object.defineProperty(e,"__esModule",{value:!0});const a=i(4811);class o{static init(t,e){this.hijackRightClick(),this.trackMouseOnCanvas(),this.listenForLeftClicks(t,e)}static hijackRightClick(){window.addEventListener("contextmenu",(t=>{t.preventDefault()}),!1)}static trackMouseOnCanvas(){a.default.getCanvasDomElement().addEventListener("mousemove",(t=>{this.x=t.pageX,this.y=t.pageY}),!1)}static listenForLeftClicks(t,e){const i=a.default.getCanvasDomElement();i.addEventListener("mousedown",t,!1),i.addEventListener("mouseup",e,!1)}static removeMouseLeftClickListeners(t,e){const i=a.default.getCanvasDomElement();i.removeEventListener("mousedown",t),i.removeEventListener("mouseup",e)}}e.default=o,o.x=window.innerWidth/2+100,o.y=window.innerHeight/2+50},3602:(t,e)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.KEYBOARD_KEYS=void 0,e.KEYBOARD_KEYS={ENTER:13,ESC:27,w:87,a:65,s:83,d:68,p:80,1:49,2:50}},8861:t=>{t.exports=JSON.parse('{"CANVAS_WIDTH":480,"CANVAS_HEIGHT":320,"TILE_SIZE":32,"SCALE":2,"GAME_SPEED":1,"DEBUG":{"FPS":true,"SHOW_LEVEL_TIME":true,"RAYCASTER":false,"RAY_TO_PLAYER":false,"PATHFINDING_NODES":false,"SHORTEST_PATH_TO_PLAYER":false,"PLAYER_COLLISION_BOX":true,"PLAYER_VISION_RAY_SHOTGUN":false,"PLAYER_WEAPON_DISPLAY":true,"ENEMY_COLLISION_BOX":true,"ENEMY_STATE":true},"FEATURES":{"SCATTER_PROJECTILES":true,"DAMAGE_NUMBERS_SHOW":true,"DAMAGE_NUMBERS_ON_PLAYER":true},"THROW_DEVELOPMENT_ERRORS":true}')},8309:t=>{t.exports=JSON.parse('{"player":{"x":128,"y":64},"gameObjects":[[1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0],[1,0,0,0,0,0,0,2,0,0,1,1,1,1,1,1,0,0,0,0,0,0,0,0],[1,0,0,0,0,0,0,2,0,0,1,0,0,0,0,1,0,0,0,0,0,0,0,0],[1,0,3,3,3,0,0,3,0,0,2,0,0,0,0,1,1,1,1,1,1,0,0,0],[1,0,0,3,0,0,0,0,3,0,1,0,2,3,0,2,0,0,0,0,1,0,0,0],[1,0,0,0,0,0,0,0,3,0,1,0,2,2,0,2,0,0,2,2,1,0,0,0],[1,0,0,0,0,3,3,0,1,1,1,0,0,0,0,1,0,0,0,0,1,1,1,1],[1,0,0,0,3,3,3,0,1,0,0,0,0,0,0,1,0,0,0,0,2,3,9,1],[1,0,1,0,3,3,0,0,1,0,0,0,0,1,0,1,0,0,0,0,2,3,3,1],[1,0,0,0,0,0,0,0,2,0,0,0,0,0,0,1,0,0,0,0,2,2,2,1],[1,0,0,0,0,0,0,0,2,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1],[1,1,1,1,1,1,1,1,1,0,0,0,1,1,1,1,1,1,2,2,2,1,1,1],[0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0],[0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,3,3,3,0,0,0,1,0,0],[0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,3,3,3,0,1,1,1,0,0],[0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0],[0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0]],"enemies":[{"x":286,"y":88,"healthPercentage":1},{"x":368,"y":90,"healthPercentage":0.5},{"x":368,"y":112,"healthPercentage":0.5},{"x":620,"y":240,"healthPercentage":0.8},{"x":558,"y":216,"healthPercentage":0.01},{"x":540,"y":220,"healthPercentage":0.01},{"x":466,"y":120,"healthPercentage":1},{"x":608,"y":230,"healthPercentage":0.8},{"x":568,"y":226,"healthPercentage":0.01},{"x":540,"y":230,"healthPercentage":0.01},{"x":436,"y":98,"healthPercentage":1},{"x":360,"y":128,"healthPercentage":0.5},{"x":608,"y":246,"healthPercentage":0.8},{"x":548,"y":230,"healthPercentage":0.01},{"x":520,"y":230,"healthPercentage":0.01},{"x":320,"y":500,"healthPercentage":0.01},{"x":336,"y":500,"healthPercentage":0.01},{"x":352,"y":500,"healthPercentage":0.01},{"x":320,"y":484,"healthPercentage":0.01},{"x":336,"y":484,"healthPercentage":0.01},{"x":352,"y":484,"healthPercentage":0.01},{"x":420,"y":500,"healthPercentage":0.01},{"x":436,"y":500,"healthPercentage":0.01},{"x":452,"y":500,"healthPercentage":0.01},{"x":420,"y":484,"healthPercentage":0.01},{"x":436,"y":484,"healthPercentage":0.01},{"x":452,"y":484,"healthPercentage":0.01},{"x":422,"y":404,"healthPercentage":0.01},{"x":438,"y":404,"healthPercentage":0.01},{"x":454,"y":404,"healthPercentage":0.01},{"x":422,"y":420,"healthPercentage":0.01},{"x":438,"y":420,"healthPercentage":0.01},{"x":454,"y":420,"healthPercentage":0.01}]}')},649:t=>{t.exports=JSON.parse('{"player":{"x":50,"y":275},"gameObjects":[[1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0],[1,0,0,0,0,0,0,1,0,0,1,1,1,1,1,1,0,0,0,0,0,0,0,0],[1,0,1,1,0,0,0,1,0,0,1,0,0,0,0,1,0,0,0,0,0,0,0,0],[1,0,1,1,0,0,1,1,0,0,2,0,0,0,0,1,1,1,1,1,1,0,0,0],[1,0,2,2,0,0,1,0,0,0,1,0,2,3,0,2,0,0,0,0,1,0,0,0],[1,0,0,0,0,0,1,3,1,0,1,0,2,2,0,2,0,0,2,2,1,0,0,0],[1,0,0,0,0,0,0,2,1,1,1,0,0,0,0,1,0,0,0,0,1,1,1,1],[1,1,1,1,1,1,0,2,1,0,0,0,0,0,0,1,0,0,0,0,2,3,9,1],[1,0,1,3,3,1,0,0,1,0,0,0,0,1,0,1,0,0,0,0,2,3,3,1],[1,0,1,2,2,1,0,0,2,0,0,0,0,0,0,1,0,0,0,0,2,2,2,1],[1,0,0,0,0,0,0,0,2,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1],[1,0,1,2,2,1,0,0,1,0,0,0,1,1,1,1,1,1,2,2,2,1,1,1],[1,0,1,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0],[1,0,1,0,0,1,0,0,1,0,0,0,0,0,0,3,3,3,0,0,0,1,0,0],[1,0,1,1,1,1,0,0,1,0,0,0,0,0,0,3,3,3,0,1,1,1,0,0],[1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0],[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0]],"enemies":[{"x":286,"y":88,"healthPercentage":1}]}')}},e={};(new(function i(a){var o=e[a];if(void 0!==o)return o.exports;var s=e[a]={exports:{}};return t[a](s,s.exports,i),s.exports}(2063).default)).start()})();
//# sourceMappingURL=app.js.map