(()=>{"use strict";var t={706:(t,e,i)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.load=void 0;const o=i(675);e.load=function(t){return new Promise(((e,i)=>{const l=new XMLHttpRequest;l.open("GET",t,!0),l.responseType="arraybuffer",l.onload=()=>{o.default.decodeAudioData(l.response,(t=>e(t)))},l.send()}))}},675:(t,e)=>{Object.defineProperty(e,"__esModule",{value:!0});const i=new AudioContext;e.default=i},549:(t,e,i)=>{Object.defineProperty(e,"__esModule",{value:!0});const o=i(789);e.default=class{static async load(t){await o.default.load(t)}}},287:(t,e)=>{Object.defineProperty(e,"__esModule",{value:!0});class i{static get musicVolume(){return this._musicVolume}static set musicVolume(t){t>=0&&t<=1&&(this._musicVolume=t)}static get soundFxVolume(){return this._soundFxVolume}static set soundFxVolume(t){t>=0&&t<=1&&(this._soundFxVolume=t)}}e.default=i,i._musicVolume=.3,i._soundFxVolume=.15},789:(t,e,i)=>{Object.defineProperty(e,"__esModule",{value:!0});const o=i(287),l=i(675),s=i(706);class a{static async load(t){const e=[s.load("./audio/smg_1.wav"),s.load("./audio/smg_2.wav"),s.load("./audio/smg_3.wav"),s.load("./audio/smg_4.wav"),s.load("./audio/smg_5.wav"),s.load("./audio/crate_hit_1.wav"),s.load("./audio/enemy_hit_1.mp3"),s.load("./audio/enemy_hit_2.mp3"),s.load("./audio/enemy_hit_3.mp3"),s.load("./audio/enemy_hit_4.mp3"),s.load("./audio/enemy_hit_5.mp3"),s.load("./audio/enemy_die_1.mp3")],i=await Promise.all(e);this.SMG[0]=i[0],this.SMG[1]=i[1],this.SMG[2]=i[2],this.SMG[3]=i[3],this.SMG[4]=i[4],this.CRATE_HIT[0]=i[5],this.ENEMY_HIT[0]=i[6],this.ENEMY_HIT[1]=i[7],this.ENEMY_HIT[2]=i[8],this.ENEMY_HIT[3]=i[9],this.ENEMY_HIT[4]=i[10],this.ENEMY_DEATH[0]=i[11],t(1)}static playSMG(){const t=l.default.createBufferSource();t.buffer=this.SMG[this.SMG_INDEX];const e=l.default.createGain();e.gain.value=.2*o.default.soundFxVolume,t.connect(e),e.connect(l.default.destination),t.start(),this.SMG_INDEX=++this.SMG_INDEX%this.SMG.length}static playEnemyHit(){if(!1===this.ENEMY_HIT_READY)return;const t=l.default.createBufferSource();t.buffer=this.ENEMY_HIT[this.ENEMY_HIT_INDEX];const e=l.default.createGain();e.gain.value=o.default.soundFxVolume,t.connect(e),e.connect(l.default.destination),t.start(),this.ENEMY_HIT_INDEX=++this.ENEMY_HIT_INDEX%this.ENEMY_HIT.length,this.ENEMY_HIT_READY=!1,setTimeout((()=>{this.ENEMY_HIT_READY=!0}),500)}static playEnemyDeath(){const t=l.default.createBufferSource();t.buffer=this.ENEMY_DEATH[0];const e=l.default.createGain();e.gain.value=o.default.soundFxVolume,t.connect(e),e.connect(l.default.destination),t.start()}static playWallHit(){const t=l.default.createBufferSource();t.buffer=this.CRATE_HIT[0];const e=l.default.createGain();e.gain.value=o.default.soundFxVolume,t.connect(e),e.connect(l.default.destination),t.start()}}e.default=a,a.SMG=[],a.SMG_INDEX=0,a.CRATE_HIT=[],a.ENEMY_HIT=[],a.ENEMY_HIT_INDEX=0,a.ENEMY_HIT_READY=!0,a.ENEMY_DEATH=[]},625:(t,e,i)=>{Object.defineProperty(e,"__esModule",{value:!0});const o=i(861),l=i(322),s=i(187),a=i(239),n=i(422);e.default=class{constructor(){this.prevX=[],this.prevY=[],this.maxHealth=100,this.state=s.default.Idling,this.previousState=s.default.Idling,this.animationPosition=0,this.moving={left:!1,right:!1,up:!1,down:!1},this.blocked={left:!1,right:!1,up:!1,down:!1},this.deltas={dyTop:0,dyBottom:0,dxLeft:0,dxRight:0}}resetMoving(){this.moving.left=!1,this.moving.right=!1,this.moving.up=!1,this.moving.down=!1}resetBlocked(){this.blocked.up=!1,this.blocked.down=!1,this.blocked.left=!1,this.blocked.right=!1}calculateNextCoordinates(){this.nextX=this.x,this.nextY=this.y,this.moving.left&&(this.moving.up||this.moving.down?this.nextX-=this.maxSpeedDiagonal:this.nextX-=this.maxSpeed),this.moving.right&&(this.moving.up||this.moving.down?this.nextX+=this.maxSpeedDiagonal:this.nextX+=this.maxSpeed),this.moving.up&&(this.moving.left||this.moving.right?this.nextY-=this.maxSpeedDiagonal:this.nextY-=this.maxSpeed),this.moving.down&&(this.moving.left||this.moving.right?this.nextY+=this.maxSpeedDiagonal:this.nextY+=this.maxSpeed)}checkIfBlockedByCreature(t,e){if(l.collisionBoxesIntersect(e,t)){let i,o;e.x<t.x?i=e.x+e.collisionBox.halfWidth-(t.x-t.collisionBox.halfWidth):e.x>t.x&&(i=t.x+t.collisionBox.halfWidth-(e.x-e.collisionBox.halfWidth)),e.y<t.y?o=e.y+e.collisionBox.halfHeight-(t.y-t.collisionBox.halfHeight):e.y>t.y&&(o=t.y+t.collisionBox.halfHeight-(e.y-e.collisionBox.halfHeight)),!i||i>=o?e.y<t.y?this.blocked.down=!0:this.blocked.up=!0:(!o||i<o)&&(e.x<t.x?this.blocked.right=!0:this.blocked.left=!0)}}adjustCollisionWithWalls(){let t;if(a.default.walls[this.row]){if(this.moving.left){t=a.default.walls[this.row][this.col-1],t&&this.x-this.collisionBox.halfWidth<=t.mapX+t.width&&(this.x=t.mapX+t.width+this.collisionBox.halfWidth+1);const e=Math.floor((this.y+this.collisionBox.halfHeight-1)/o.TILE_SIZE);e&&e!==this.row&&(t=a.default.walls[e][this.col-1],t&&this.x-this.collisionBox.halfWidth<=t.mapX+t.width&&(this.moving.down&&this.deltas.dyTop<=this.deltas.dxRight||(this.x=t.mapX+t.width+this.collisionBox.halfWidth+1)));const i=Math.floor((this.y-this.collisionBox.halfHeight)/o.TILE_SIZE);i&&i!==this.row&&(t=a.default.walls[i][this.col-1],t&&this.x-this.collisionBox.halfWidth<=t.mapX+t.width&&(this.moving.up&&this.deltas.dyBottom<=this.deltas.dxRight||(this.x=t.mapX+t.width+this.collisionBox.halfWidth+1)))}if(this.moving.right){t=a.default.walls[this.row][this.col+1],t&&this.x+this.collisionBox.halfWidth>=t.mapX&&(this.x=t.mapX-this.collisionBox.halfWidth-1);const e=Math.floor((this.y+this.collisionBox.halfHeight-1)/o.TILE_SIZE);e&&e!==this.row&&(t=a.default.walls[e][this.col+1],t&&this.x+this.collisionBox.halfWidth>=t.mapX&&(this.moving.down&&this.deltas.dyTop<=this.deltas.dxLeft||(this.x=t.mapX-this.collisionBox.halfWidth-1)));const i=Math.floor((this.y-this.collisionBox.halfHeight)/o.TILE_SIZE);e&&i!==this.row&&(t=a.default.walls[i][this.col+1],t&&this.x+this.collisionBox.halfWidth>=t.mapX&&(this.moving.up&&this.deltas.dyBottom<=this.deltas.dxLeft||(this.x=t.mapX-this.collisionBox.halfWidth-1)))}}if(a.default.walls[this.row-1]&&this.moving.up){t=a.default.walls[this.row-1][this.col],t&&this.y-this.collisionBox.halfHeight<=t.mapY+t.height&&(this.y=t.mapY+t.height+this.collisionBox.halfHeight+1);const e=Math.floor((this.x+this.collisionBox.halfWidth-1)/o.TILE_SIZE);e&&e!==this.col&&(t=a.default.walls[this.row-1][e],t&&this.y-this.collisionBox.halfHeight<=t.mapY+t.height&&(this.moving.right&&this.deltas.dyBottom>this.deltas.dxLeft||(this.y=t.mapY+t.height+this.collisionBox.halfHeight+1)));const i=Math.floor((this.x-this.collisionBox.halfWidth)/o.TILE_SIZE);i&&i!==this.col&&(t=a.default.walls[this.row-1][i],t&&this.y-this.collisionBox.halfHeight<=t.mapY+t.height&&(this.moving.left&&this.deltas.dyBottom>this.deltas.dxRight||(this.y=t.mapY+t.height+this.collisionBox.halfHeight+1)))}if(a.default.walls[this.row+1]){this.moving.down&&(t=a.default.walls[this.row+1][this.col],t&&this.y+this.collisionBox.halfHeight>=t.mapY&&(this.y=t.mapY-this.collisionBox.halfHeight-1));const e=Math.floor((this.x+this.collisionBox.halfWidth-1)/o.TILE_SIZE);e&&e!==this.col&&(t=a.default.walls[this.row+1][e],t&&this.y+this.collisionBox.halfHeight>=t.mapY&&(this.moving.right&&this.deltas.dyTop>this.deltas.dxLeft||(this.y=t.mapY-this.collisionBox.halfHeight-1)));const i=Math.floor((this.x-this.collisionBox.halfWidth)/o.TILE_SIZE);i&&i!==this.col&&(t=a.default.walls[this.row+1][i],t&&this.y+this.collisionBox.halfHeight>=t.mapY&&(this.moving.left&&this.deltas.dyTop>this.deltas.dxRight||(this.y=t.mapY-this.collisionBox.halfHeight-1)))}}updatePreviousCoordinates(){this.prevX.push(this.x),this.prevX.length>5&&this.prevX.shift(),this.prevY.push(this.y),this.prevY.length>5&&this.prevY.shift()}updateDirection(){const t=[],e=this.prevX[this.prevX.length-1]-this.prevX[this.prevX.length-2],i=this.prevY[this.prevY.length-1]-this.prevY[this.prevY.length-2];i>0?t.push(n.Directions.S):i<0&&t.push(n.Directions.N),e>0?t.push(n.Directions.E):e<0&&t.push(n.Directions.W);const o=t.join("")||this.direction||"S";this.direction=n.Directions[o]}checkIfMoving(){const t=this.prevX[this.prevX.length-1]===this.prevX[this.prevX.length-2],e=this.prevY[this.prevY.length-1]===this.prevY[this.prevY.length-2];return!t||!e}initializeHealth(t=1){(t<0||t>1)&&(t=1),this.health=this.maxHealth*t}getHealthColor(){return this.health<=.1*this.maxHealth?"#FF5700":this.health<=.2*this.maxHealth?"#FF7B00":this.health<=.3*this.maxHealth?"#FF9E00":this.health<=.4*this.maxHealth?"#FFC100":this.health<=.5*this.maxHealth?"#FFE400":this.health<=.6*this.maxHealth?"#FFF600":this.health<=.7*this.maxHealth?"#E5FF00":this.health<=.8*this.maxHealth?"#D4FF00":this.health<=.9*this.maxHealth?"#B0FF00":this.health<this.maxHealth?"#8DFF00":this.health===this.maxHealth?"#6AFF00":void 0}resetAnimation(){this.animationPosition=0}setState(t){this.previousState=this.state,this.state=t,this.resetAnimation()}}},187:(t,e)=>{var i;Object.defineProperty(e,"__esModule",{value:!0}),function(t){t[t.Idling=0]="Idling",t[t.Moving=1]="Moving",t[t.Attacking=2]="Attacking",t[t.Dying=3]="Dying",t[t.Decaying=4]="Decaying"}(i||(i={})),e.default=i},708:(t,e,i)=>{Object.defineProperty(e,"__esModule",{value:!0});const o=i(861),l=i(789),s=i(63),a=i(15),n=i(811),h=i(35),r=i(322),d=i(533),c=i(735),f=i(187),u=i(776),x=i(843);class y extends u.default{constructor(t,e,i,o){super(t,e,new r.default(14,14),1,i),this.pathfindingInterval=o,this.sprite=x.default.Zerg,this.attackSpeed=32,this.updateMapPosition()}update(t,e){if(this.state===f.default.Dying)return;if(this.state===f.default.Decaying)return;this.target||(this.target=t),this.resetBlocked(),this.calculateNextCoordinates(),this.updatePreviousCoordinates(),this.stuck=this.checkIfStuck(),this.state!==f.default.Idling&&this.state!==f.default.Attacking&&!1===this.checkIfMoving()&&this.setState(f.default.Idling),this.adjustCollisionWithWalls(),this.checkForCollisionWithPlayer(t),this.checkForCollisionWithOtherEnemies(t),this.distanceFromTarget=h.pointToPointDistance({x:t.x,y:t.y},{x:this.x,y:this.y});const i=this.targetInRange(t);this.state!==f.default.Attacking&&i&&(this.resetAttackCooldown(),this.setState(f.default.Attacking)),this.state===f.default.Attacking&&(i?this.attack(t):this.setState(f.default.Moving)),this.thereAreObstaclesBetweenPlayerAndThisEnemy=d.default.determineIfThereAreObstaclesBetweenTwoPathNodes(this,t),this.state!==f.default.Idling&&this.state!==f.default.Moving||(this.findPathToPlayer(t,this.thereAreObstaclesBetweenPlayerAndThisEnemy),this.state!==f.default.Moving&&(!1===this.thereAreObstaclesBetweenPlayerAndThisEnemy||this.shortestPath.length>0)&&this.setState(f.default.Moving)),this.state===f.default.Moving&&this.move(),this.updateDirection(),this.updateTileDeltas(),s.default.stateManager.getState()===a.default.PLAYING&&this.advanceAnimation()}draw(t){o.DEBUG.ENEMY_COLLISION_BOX&&this.debug_drawCollisionBox(t),o.DEBUG.ENEMY_STATE&&this.debug_drawState(t),o.DEBUG.RAY_TO_PLAYER&&this.debug_drawRayToPlayer(t),o.DEBUG.PATHFINDING_NODES&&c.debug_drawPathNodes(this.pathfindingNodes,t,this.getHealthColor()),o.DEBUG.SHORTEST_PATH_TO_PLAYER&&this.debug_drawShortestPathToPlayer(t),this.sprite.draw(this,{x:t.x,y:t.y})}takeDamage(t){l.default.playEnemyHit(),this.health-=t,this.health<=0?this.die():l.default.playEnemyHit()}die(){l.default.playEnemyDeath(),this.setState(f.default.Decaying)}advanceAnimation(){this.state===f.default.Attacking?this.animationPosition=(this.animationPosition+.15)%this.sprite.numberOfSpritesInAnimation.attacking:this.state===f.default.Moving&&(this.animationPosition=(this.animationPosition+.25)%this.sprite.numberOfSpritesInAnimation.walking)}findPathToPlayer(t,e){e?(0===this.pathfindingInterval&&(this.pathfindingNodes=c.generatePathNodes(Math.round(Math.abs(t.row+this.row)/2),Math.round(Math.abs(t.col+this.col)/2),this.collisionBox),this.shortestPath=c.findShortestPath(this,t,this.pathfindingNodes)),this.pathfindingInterval=(this.pathfindingInterval+1)%this.pathfindingPeriod,this.shortestPath.length>0&&this.followTheShortestPath()):(this.pathfindingNodes&&(this.pathfindingNodes=null),this.shortestPath&&(this.shortestPath=[]),this.moveTowardsPlayer(t))}followTheShortestPath(){let t=this.shortestPath[this.shortestPath.length-1].x,e=this.shortestPath[this.shortestPath.length-1].y;this.shortestPath.length>1&&Math.abs(t-this.x)<3&&Math.abs(e-this.y)<3&&(this.shortestPath.pop(),t=this.shortestPath[this.shortestPath.length-1].x,e=this.shortestPath[this.shortestPath.length-1].y),this.moveTowards(t,e)}moveTowardsPlayer(t){this.distanceFromTarget>this.collisionBox.width?this.moveTowards(t.x,t.y):this.resetMoving()}moveTowards(t,e){this.resetMoving(),this.x<t?this.moving.right=!0:this.x>t&&(this.moving.left=!0),this.y<e?this.moving.down=!0:this.y>e&&(this.moving.up=!0)}move(){this.moving.left&&!this.blocked.left&&(this.moving.up||this.moving.down?this.x-=this.maxSpeedDiagonal:this.x-=this.maxSpeed),this.moving.right&&!this.blocked.right&&(this.moving.up||this.moving.down?this.x+=this.maxSpeedDiagonal:this.x+=this.maxSpeed),this.moving.up&&!this.blocked.up&&(this.moving.left||this.moving.right?this.y-=this.maxSpeedDiagonal:this.y-=this.maxSpeed),this.moving.down&&!this.blocked.down&&(this.moving.left||this.moving.right?this.y+=this.maxSpeedDiagonal:this.y+=this.maxSpeed),this.updateMapPosition()}updateMapPosition(){this.row=Math.floor(this.y/o.TILE_SIZE),this.col=Math.floor(this.x/o.TILE_SIZE)}updateTileDeltas(){this.deltas.dyTop=this.y%o.TILE_SIZE,this.deltas.dyBottom=o.TILE_SIZE-this.deltas.dyTop,this.deltas.dxLeft=this.x%o.TILE_SIZE,this.deltas.dxRight=o.TILE_SIZE-this.deltas.dxLeft}debug_drawCollisionBox(t){n.context.strokeStyle=this.getHealthColor(),n.context.lineWidth=.2,n.context.beginPath(),n.context.moveTo(.5+n.default.center.x+(this.x-t.x)-this.collisionBox.halfWidth,.5+n.default.center.y+(this.y-t.y)-this.collisionBox.halfHeight),n.context.lineTo(-.5+n.default.center.x+(this.x-t.x)+this.collisionBox.halfWidth,.5+n.default.center.y+(this.y-t.y)-this.collisionBox.halfHeight),n.context.lineTo(-.5+n.default.center.x+(this.x-t.x)+this.collisionBox.halfWidth,-.5+n.default.center.y+(this.y-t.y)+this.collisionBox.halfHeight),n.context.lineTo(.5+n.default.center.x+(this.x-t.x)-this.collisionBox.halfWidth,-.5+n.default.center.y+(this.y-t.y)+this.collisionBox.halfHeight),n.context.lineTo(.5+n.default.center.x+(this.x-t.x)-this.collisionBox.halfWidth,.5+n.default.center.y+(this.y-t.y)-this.collisionBox.halfHeight),n.context.stroke()}debug_drawState(t){n.context.beginPath(),n.context.fillStyle="#FFC100",n.context.font="8px Monospace",n.context.fillText(this.state.toString(),n.default.center.x+(this.x-t.x)-this.collisionBox.halfWidth,n.default.center.y+(this.y-t.y)-this.collisionBox.halfHeight),n.context.stroke()}debug_drawRayToPlayer(t){this.thereAreObstaclesBetweenPlayerAndThisEnemy?n.context.strokeStyle="#FFFF44":n.context.strokeStyle="#00F0FF",n.context.lineWidth=.5,n.context.beginPath(),n.context.moveTo(n.default.center.x+(this.x-t.x),n.default.center.y+(this.y-t.y)),n.context.lineTo(n.default.center.x,n.default.center.y),n.context.stroke()}debug_drawShortestPathToPlayer(t){this.shortestPath.forEach(((e,i)=>{c.drawNode(e,t,e.visited?"#FF0000":"#FF00FF")})),this.shortestPath.length>0&&this.shortestPath.forEach(((e,i)=>{this.debug_drawRayFromPointToPoint(e,this.shortestPath[i-1]||t,t)}))}debug_drawRayFromPointToPoint(t,e,i){n.context.strokeStyle="#FF00FF",n.context.lineWidth=.2,n.context.beginPath(),n.context.moveTo(n.default.center.x+(e.x-i.x),n.default.center.y+(e.y-i.y)),n.context.lineTo(n.default.center.x+(t.x-i.x),n.default.center.y+(t.y-i.y)),n.context.stroke()}}e.default=y},776:(t,e,i)=>{Object.defineProperty(e,"__esModule",{value:!0});const o=i(861),l=i(625),s=i(789),a=i(239);class n extends l.default{constructor(t,e,i,o,l){super(),this.x=t,this.y=e,this.pathfindingInterval=0,this.pathfindingPeriod=30,this.shortestPath=[],this.initializeHealth(l),this.maxSpeed=o,this.maxSpeedDiagonal=Math.round(Math.sin(45)*this.maxSpeed),this.collisionBox=i,this.attackCooldown=this.attackSpeed}isOnScreen(t,e){const i=2*o.TILE_SIZE;return Math.abs(this.x-t)<o.CANVAS_WIDTH/2+i&&Math.abs(this.y-e)<o.CANVAS_HEIGHT/2+i}checkForCollisionWithPlayer(t){const e={x:this.nextX,y:this.nextY,collisionBox:this.collisionBox};this.checkIfBlockedByCreature(t,e)}checkForCollisionWithOtherEnemies(t){const e={x:this.nextX,y:this.nextY,collisionBox:this.collisionBox};a.default.getEnemiesOnScreen(this.x,this.y).forEach((t=>{this!==t&&this.checkIfBlockedByCreature(t,e)}))}targetInRange(t){const e=(t.collisionBox.halfWidth+this.collisionBox.halfWidth)*Math.sqrt(2);return this.distanceFromTarget<e}resetAttackCooldown(){this.attackCooldown=this.attackSpeed}checkIfStuck(){const t=this.prevX.every((t=>t===this.prevX[0])),e=this.prevY.every((t=>t===this.prevY[0]));return!(!t||!e)}attack(t){this.attackCooldown<=0?(this.resetAttackCooldown(),s.default.playSMG(),this.dealDamage(t)):--this.attackCooldown}dealDamage(t){t.takeDamage(this.getDamage())}getDamage(){return 10}}e.default=n},239:(t,e,i)=>{Object.defineProperty(e,"__esModule",{value:!0});const o=i(861),l=i(187),s=i(708),a=i(811),n=i(179),h=i(471),r=i(445),d=i(309);class c{constructor(t){this.player=t,this.loadMap(d)}static getEnemiesOnScreen(t,e){return c.enemies.filter((i=>i.isOnScreen(t,e)))}static enemiesRemaining(){return c.enemies.length}destroy(){for(;c.enemies.length;)c.enemies.pop()}update(){c.enemies.forEach(((t,e)=>{t.update(this.player,c.enemies),t.state===l.default.Decaying&&(c.enemies.splice(e,1),this.openPortalWhenAllEnemiesAreKilled())}))}openPortalWhenAllEnemiesAreKilled(){!1===c.exitPortal.isOpen&&0===c.enemies.length&&c.exitPortal.open()}draw(){this.drawGameObjects(),c.getEnemiesOnScreen(this.player.x,this.player.y).forEach((t=>t.draw(this.player)))}drawGameObjects(){const t=this.player.deltas.dxLeft-a.default.colRemainder,e=this.player.deltas.dyTop-a.default.rowRemainder,i=this.player.row-a.default.halfRows,l=this.player.col-a.default.halfCols;let s;for(let n=i;n<i+a.default.rows+1;++n)for(let h=l-1;h<l+a.default.cols+1;++h)c.walls[n]&&c.walls[n][h]&&(s=c.walls[n][h],s.x=(h-l)*o.TILE_SIZE-t,s.y=(n-i)*o.TILE_SIZE-e,s.draw()),c.exitPortal.row===n&&c.exitPortal.col===h&&(c.exitPortal.x=(h-l)*o.TILE_SIZE-t,c.exitPortal.y=(n-i)*o.TILE_SIZE-e,c.exitPortal.draw())}loadMap(t){this.loadGameObjects(t),this.loadEnemies(t)}loadGameObjects(t){this.loadWalls(t),this.loadExitPortal(t)}loadWalls(t){for(let e=0;e<t.gameObjects.length;++e){c.walls[e]=[];for(let i=0;i<t.gameObjects[e].length;++i){const o=t.gameObjects[e][i];c.walls[e][i]=null,n.isWall(o)&&(c.walls[e][i]=h.default.createWall(e,i,o))}}}loadExitPortal(t){for(let e=0;e<t.gameObjects.length;++e)for(let i=0;i<t.gameObjects[e].length;++i)t.gameObjects[e][i]===n.default.ExitPortal&&(c.exitPortal=new r.default(e,i))}loadEnemies(t){t.enemies.forEach(((t,e)=>{c.enemies.push(new s.default(t.x,t.y,t.healthPercentage,e))}))}}e.default=c,c.walls=[],c.enemies=[]},179:(t,e)=>{var i;Object.defineProperty(e,"__esModule",{value:!0}),e.isWall=void 0,function(t){t[t.Empty=0]="Empty",t[t.WallGray=1]="WallGray",t[t.WallGreen=2]="WallGreen",t[t.WallBlue=3]="WallBlue",t[t.ExitPortal=9]="ExitPortal"}(i||(i={})),e.isWall=function(t){return i[t].startsWith("Wall")},e.default=i},49:(t,e,i)=>{Object.defineProperty(e,"__esModule",{value:!0});const o=i(861);e.default=class{constructor(t,e,i,l,s,a=!0){this.row=t,this.col=e,this.width=i,this.height=l,this.color=s,this.destructable=a,this.mapX=e*o.TILE_SIZE,this.mapY=t*o.TILE_SIZE}}},445:(t,e,i)=>{Object.defineProperty(e,"__esModule",{value:!0});const o=i(861),l=i(811),s=i(942);class a extends s.default{constructor(){super(...arguments),this.isOpen=!1}draw(){l.context.fillStyle=this.getColor(),l.context.beginPath(),l.context.rect(this.x,this.y,o.TILE_SIZE,o.TILE_SIZE),l.context.fill()}open(){this.isOpen=!0}getColor(){return this.isOpen?a.openColor:a.closedColor}}e.default=a,a.openColor="rgba(50, 120, 50, 0.2)",a.closedColor="rgba(180, 50, 50, 0.2)"},942:(t,e)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.default=class{constructor(t,e){this.row=t,this.col=e}}},785:(t,e,i)=>{Object.defineProperty(e,"__esModule",{value:!0});const o=i(861),l=i(811),s=i(789),a=i(49);class n extends a.default{draw(){l.context.strokeStyle=this.color,l.context.lineWidth=1,l.context.beginPath(),l.context.moveTo(.5+this.x,.5+this.y),l.context.lineTo(-.5+this.x+o.TILE_SIZE,.5+this.y),l.context.lineTo(-.5+this.x+o.TILE_SIZE,-.5+this.y+o.TILE_SIZE),l.context.lineTo(.5+this.x,-.5+this.y+o.TILE_SIZE),l.context.lineTo(.5+this.x,.5+this.y),l.context.moveTo(.5+this.x,.5+this.y),l.context.lineTo(-.5+this.x+o.TILE_SIZE,-.5+this.y+o.TILE_SIZE),l.context.moveTo(-.5+this.x+o.TILE_SIZE,.5+this.y),l.context.lineTo(.5+this.x,-.5+this.y+o.TILE_SIZE),l.context.stroke()}takeDamage(t){s.default.playWallHit()}}e.default=n},471:(t,e,i)=>{Object.defineProperty(e,"__esModule",{value:!0});const o=i(861),l=i(785),s=i(179);e.default=class{static createWall(t,e,i){switch(i){case s.default.WallGray:return new l.default(t,e,o.TILE_SIZE,o.TILE_SIZE,"#4B4B4B",!1);case s.default.WallGreen:return new l.default(t,e,o.TILE_SIZE,o.TILE_SIZE,"#27531B");case s.default.WallBlue:return new l.default(t,e,o.TILE_SIZE,o.TILE_SIZE,"#572F17");default:throw new Error("No such Wall!")}}}},144:(t,e,i)=>{Object.defineProperty(e,"__esModule",{value:!0});const o=i(811);e.default=class{static draw(){const t=o.default.mousePosition.x,e=o.default.mousePosition.y;let i,l;o.context.strokeStyle="#FFFFFF",o.context.lineWidth=.5,o.context.beginPath(),i=.5,l=-1.5,o.context.moveTo(t+i,e+l),l=-3.5,o.context.lineTo(t+i,e+l),l=2.5,o.context.moveTo(t+i,e+l),l=4.5,o.context.lineTo(t+i,e+l),l=.5,i=-3.5,o.context.moveTo(t+i,e+l),i=-1.5,o.context.lineTo(t+i,e+l),i=2.5,o.context.moveTo(t+i,e+l),i=4.5,o.context.lineTo(t+i,e+l),o.context.stroke()}}},645:(t,e,i)=>{Object.defineProperty(e,"__esModule",{value:!0});const o=i(861),l=i(602),s=i(811),a=i(533),n=i(322),h=i(35),r=i(625),d=i(239),c=i(144),f=i(537),u=i(789);class x extends r.default{constructor(t,e){super(),this.x=t,this.y=e,this.alive=!0,this.rotation=0,this.sightLineLength=10,this.shooting=!1,this.shootingCooldown=6,this.projectiles=[],this.keydownHandler=t=>{switch(t.keyCode){case l.KEYBOARD_KEYS.w:this.moving.up=!0;break;case l.KEYBOARD_KEYS.a:this.moving.left=!0;break;case l.KEYBOARD_KEYS.s:this.moving.down=!0;break;case l.KEYBOARD_KEYS.d:this.moving.right=!0}},this.keyupHandler=t=>{switch(t.keyCode){case l.KEYBOARD_KEYS.w:this.moving.up=!1;break;case l.KEYBOARD_KEYS.a:this.moving.left=!1;break;case l.KEYBOARD_KEYS.s:this.moving.down=!1;break;case l.KEYBOARD_KEYS.d:this.moving.right=!1}},this.initializeHealth(),this.maxSpeed=2,this.maxSpeedDiagonal=Math.round(Math.sin(45)*this.maxSpeed),this.collisionBox=new n.default(12,12),this.updateMapPosition()}update(){this.resetBlocked(),this.calculateNextCoordinates(),this.checkForCollisionWithEnemies(),this.move(),this.adjustCollisionWithWalls(),this.updateMapPosition(),this.updateTileDeltas(),this.shoot(),this.projectiles.forEach(((t,e)=>{t.update(this.x,this.y),!1===t.alive&&this.projectiles.splice(e,1)}))}draw(){const t=this.calculateTheta();this.drawPlayer(t),this.drawPlayerVisionRay(t),o.DEBUG.PLAYER_VISION_RAY_SHOTGUN&&(this.drawPlayerVisionRay(t-.45),this.drawPlayerVisionRay(t-.4),this.drawPlayerVisionRay(t-.35),this.drawPlayerVisionRay(t-.3),this.drawPlayerVisionRay(t-.25),this.drawPlayerVisionRay(t-.2),this.drawPlayerVisionRay(t-.15),this.drawPlayerVisionRay(t-.1),this.drawPlayerVisionRay(t-.05),this.drawPlayerVisionRay(t+.05),this.drawPlayerVisionRay(t+.1),this.drawPlayerVisionRay(t+.15),this.drawPlayerVisionRay(t+.2),this.drawPlayerVisionRay(t+.25),this.drawPlayerVisionRay(t+.3),this.drawPlayerVisionRay(t+.35),this.drawPlayerVisionRay(t+.4),this.drawPlayerVisionRay(t+.45)),c.default.draw(),this.drawProjectiles()}shoot(){if(this.shooting&&this.shootingCooldown<=0){const t=s.default.mousePosition.x-s.default.center.x,e=s.default.mousePosition.y-s.default.center.y;let i=t/(Math.abs(t)+Math.abs(e)),l=e/(Math.abs(t)+Math.abs(e));if(o.FEATURES.SCATTER_PROJECTILES){const t=.1*Math.random()-.05,e=.1*Math.random()-.05;i+=t,l+=e}this.projectiles.push(new f.default(this.x,this.y,i,l)),this.shootingCooldown=6,u.default.playSMG()}else--this.shootingCooldown}setShooting(t){this.shooting=t}takeDamage(t){this.health=this.health-t,this.health<=0&&this.die()}move(){this.moving.left&&!this.blocked.left&&(this.moving.up||this.moving.down?this.x-=this.maxSpeedDiagonal:this.x-=this.maxSpeed),this.moving.right&&!this.blocked.right&&(this.moving.up||this.moving.down?this.x+=this.maxSpeedDiagonal:this.x+=this.maxSpeed),this.moving.up&&!this.blocked.up&&(this.moving.left||this.moving.right?this.y-=this.maxSpeedDiagonal:this.y-=this.maxSpeed),this.moving.down&&!this.blocked.down&&(this.moving.left||this.moving.right?this.y+=this.maxSpeedDiagonal:this.y+=this.maxSpeed)}calculateTheta(){const t=h.angleBetweenPoints(s.default.mousePosition,s.default.center);return s.context.fillStyle="#44FF44",s.context.fillText(`θ = ${t.toFixed(2)}`,10,56),t}drawPlayer(t){s.context.beginPath(),s.context.fillStyle="#00AA00",s.context.font="10px Monospace",s.context.fillText(`p (${this.x}, ${this.y})`,10,20),s.context.strokeStyle="#523DA5",s.context.lineWidth=2,s.context.moveTo(s.default.center.x,s.default.center.y),s.context.lineTo(s.default.center.x+this.sightLineLength*Math.cos(t),s.default.center.y+this.sightLineLength*Math.sin(t)),s.context.stroke(),o.DEBUG.PLAYER_COLLISION_BOX&&this.debug_drawCollisionBox()}debug_drawCollisionBox(){s.context.strokeStyle=this.getHealthColor(),s.context.lineWidth=.5,s.context.beginPath(),s.context.moveTo(-.5+s.default.center.x-this.collisionBox.halfWidth,-.5+s.default.center.y-this.collisionBox.halfHeight),s.context.lineTo(.5+s.default.center.x+this.collisionBox.halfWidth,-.5+s.default.center.y-this.collisionBox.halfHeight),s.context.lineTo(.5+s.default.center.x+this.collisionBox.halfWidth,.5+s.default.center.y+this.collisionBox.halfHeight),s.context.lineTo(-.5+s.default.center.x-this.collisionBox.halfWidth,.5+s.default.center.y+this.collisionBox.halfHeight),s.context.lineTo(-.5+s.default.center.x-this.collisionBox.halfWidth,-.5+s.default.center.y-this.collisionBox.halfHeight),s.context.stroke()}drawPlayerVisionRay(t){const{hitPoint:e,wallHit:i}=a.default.cast(this,t);e&&(i?a.default.drawRay(e,"#FF4444"):a.default.drawRay(e))}drawProjectiles(){this.projectiles.forEach((t=>t.draw(this.x,this.y)))}updateMapPosition(){this.row=Math.floor(this.y/o.TILE_SIZE),this.col=Math.floor(this.x/o.TILE_SIZE)}updateTileDeltas(){this.deltas.dyTop=this.y%o.TILE_SIZE,this.deltas.dyBottom=o.TILE_SIZE-this.deltas.dyTop,this.deltas.dxLeft=this.x%o.TILE_SIZE,this.deltas.dxRight=o.TILE_SIZE-this.deltas.dxLeft}checkForCollisionWithEnemies(){const t={x:this.nextX,y:this.nextY,collisionBox:this.collisionBox},e=d.default.getEnemiesOnScreen(this.x,this.y);e.some((e=>n.collisionBoxesIntersect(e,t)))&&e.forEach((e=>{this.checkIfBlockedByCreature(e,t)}))}die(){this.alive=!1}}e.default=x},537:(t,e,i)=>{Object.defineProperty(e,"__esModule",{value:!0});const o=i(861),l=i(811),s=i(239);e.default=class{constructor(t,e,i,o){this.x=t,this.y=e,this.directionX=i,this.directionY=o,this.speed=24,this.damage=10,this.alive=!0,this.numberOfIntermediatePositions=3,this.intermediatePositions=[];for(let t=0;t<this.numberOfIntermediatePositions;++t)this.intermediatePositions[t]={x:null,y:null,row:null,col:null}}update(t,e){this.previousX=this.x,this.previousY=this.y,this.x+=this.directionX*this.speed,this.y+=this.directionY*this.speed,this.row=Math.floor(this.y/o.TILE_SIZE),this.col=Math.floor(this.x/o.TILE_SIZE);const i=this.getNearbyEnemies();this.calculateIntermediatePoints(),this.isOffScreen(t,e)&&(this.alive=!1),this.intermediatePositions.forEach((t=>{this.alive&&(this.checkCollisionWithEnemies(i,t),this.checkCollisionWithWall(t))})),this.alive&&(this.checkCollisionWithEnemies(i),this.checkCollisionWithWall())}draw(t,e){this.x===t&&this.y===e||(l.context.strokeStyle="#8AFCFF",l.context.lineWidth=1,l.context.beginPath(),l.context.arc(this.x+l.default.center.x-t,this.y+l.default.center.y-e,2,0,2*Math.PI),l.context.stroke())}getNearbyEnemies(){return[...s.default.enemies].filter((t=>Math.abs(t.x-this.x)<=o.TILE_SIZE&&Math.abs(t.y-this.y)<=o.TILE_SIZE))}calculateIntermediatePoints(){const t=(this.x-this.previousX)/(this.numberOfIntermediatePositions+1),e=(this.y-this.previousY)/(this.numberOfIntermediatePositions+1);for(let i=this.numberOfIntermediatePositions-1;i>=0;--i)this.intermediatePositions[i].x=this.x-t*(i+1),this.intermediatePositions[i].y=this.y-e*(i+1),this.intermediatePositions[i].row=Math.floor(this.intermediatePositions[i].y/o.TILE_SIZE),this.intermediatePositions[i].col=Math.floor(this.intermediatePositions[i].x/o.TILE_SIZE)}isOffScreen(t,e){return this.x<t-l.default.center.x-o.TILE_SIZE||this.x>t+l.default.center.x+o.TILE_SIZE||this.y<e-l.default.center.y-o.TILE_SIZE||this.y>e+l.default.center.y+o.TILE_SIZE}checkCollisionWithEnemies(t,e){e||(e=this),t.forEach((t=>{e.x>=t.x-t.collisionBox.halfWidth&&e.x<=t.x+t.collisionBox.halfWidth&&e.y>=t.y-t.collisionBox.halfHeight&&e.y<=t.y+t.collisionBox.halfHeight&&(this.alive=!1,t.takeDamage(this.getDamage()))}))}checkCollisionWithWall(t){t||(t=this);const e=s.default.walls[t.row][t.col];e&&(e.takeDamage(this.getDamage()),this.alive=!1,e.destructable&&(s.default.walls[t.row][t.col]=null))}getDamage(){return this.damage}}},400:(t,e,i)=>{Object.defineProperty(e,"__esModule",{value:!0});const o=i(843);e.default=class{static async load(t){o.default.load(t)}}},843:(t,e,i)=>{Object.defineProperty(e,"__esModule",{value:!0});const o=i(945);class l{static async load(t){await l.Zerg.load((()=>t(1)))}}e.default=l,l.Zerg=new o.default},569:(t,e)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.default=class{load(t){return new Promise(((e,i)=>{this.spriteSheet=new Image,this.spriteSheet.src=this.url,this.spriteSheet.onload=()=>{t(),e()}}))}}},945:(t,e,i)=>{Object.defineProperty(e,"__esModule",{value:!0});const o=i(811),l=i(187),s=i(569);class a extends s.default{constructor(){super(),this.url="./graphics/spritesheets/zergling.png",this.numberOfSpritesInAnimation={walking:7,attacking:5},this.spriteLocations={N:{col:0,flip:!1},NE:{col:2,flip:!1},E:{col:4,flip:!1},SE:{col:6,flip:!1},S:{col:8,flip:!1},SW:{col:6,flip:!0},W:{col:4,flip:!0},NW:{col:2,flip:!0}},this.spriteSize=32,this.spriteStep={x:this.spriteSize+11,y:this.spriteSize+10}}draw(t,e){const i=this.getSpriteOffsets(t.state,this.spriteStep),o=this.spriteLocations[t.direction];this.drawSprite(t,e,i,o)}getSpriteOffsets(t,e){switch(t){case l.default.Moving:case l.default.Idling:return{x:7,y:5};case l.default.Attacking:return{x:7,y:5+7*e.y}}}drawSprite(t,e,i,l){const{x:s,y:a,collisionBox:n}=t,{x:h,y:r}=e;l.flip&&(o.context.save(),o.context.translate(o.default.center.x+(s-h-n.halfWidth),o.default.center.y+(a-r-n.halfHeight)),o.context.scale(-1,1)),o.context.drawImage(this.spriteSheet,i.x+this.spriteStep.x*l.col,i.y+this.spriteStep.y*Math.floor(t.animationPosition),this.spriteSize,this.spriteSize,l.flip?0-this.spriteSize/2:o.default.center.x+(s-h-n.halfWidth),l.flip?0:o.default.center.y+(a-r-n.halfHeight),t.collisionBox.width+2,t.collisionBox.height+2),l.flip&&o.context.restore()}}e.default=a},811:(t,e,i)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.context=void 0;const o=i(861),l=i(301),s=document.getElementById("canvas");s.width=o.CANVAS_WIDTH,s.height=o.CANVAS_HEIGHT,s.style.width=1!==o.SCALE?o.SCALE*o.CANVAS_WIDTH+"px":"auto",s.style.height=1!==o.SCALE?o.SCALE*o.CANVAS_HEIGHT+"px":"auto",e.context=s.getContext("2d");class a{static clear(){e.context.clearRect(0,0,s.width,s.height)}static updateMousePosition(){this.mousePosition={x:Math.floor((l.default.x-s.offsetLeft)/o.SCALE),y:Math.floor((l.default.y-s.offsetTop)/o.SCALE)}}}e.default=a,a.halfWidth=s.width/2,a.halfHeight=s.height/2,a.rows=Math.floor(s.height/o.TILE_SIZE),a.cols=Math.floor(s.width/o.TILE_SIZE),a.halfRows=Math.floor(s.height/2/o.TILE_SIZE),a.halfCols=Math.floor(s.width/2/o.TILE_SIZE),a.rowRemainder=s.height/2%o.TILE_SIZE,a.colRemainder=s.width/2%o.TILE_SIZE,a.center={x:o.CANVAS_WIDTH/2,y:o.CANVAS_HEIGHT/2},a.getCanvasDomElement=()=>s},322:(t,e,i)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.collisionBoxesIntersect=void 0;const o=i(861);e.default=class{constructor(t,e){if(this.width=t,this.height=e,o.THROW_DEVELOPMENT_ERRORS&&(t%2!=0||e%2!=0))throw new Error("Always use even numbers for collision box dimensions!");this.halfWidth=this.width/2,this.halfHeight=this.height/2}},e.collisionBoxesIntersect=function(t,e){return t.x-t.collisionBox.halfWidth<e.x+e.collisionBox.halfWidth&&t.x+t.collisionBox.halfWidth>e.x-e.collisionBox.halfWidth&&t.y-t.collisionBox.halfHeight<e.y+e.collisionBox.halfHeight&&t.y+t.collisionBox.halfHeight>e.y-e.collisionBox.halfHeight}},422:(t,e)=>{var i;Object.defineProperty(e,"__esModule",{value:!0}),e.Directions=void 0,(i=e.Directions||(e.Directions={})).N="N",i.NE="NE",i.E="E",i.SE="SE",i.S="S",i.SW="SW",i.W="W",i.NW="NW"},829:(t,e,i)=>{Object.defineProperty(e,"__esModule",{value:!0});const o=i(861),l=i(811);let s,a;const n=[0,0,0,0,0,0,0,0,0,0,0];let h;e.default=class{static restart(){s=null;for(let t=0;t<n.length;++t)n[t]=0}static calculateFrameRate(){if(s){const t=performance.now();a=t-s,n.unshift(1e3/a),n.pop(),h=n.reduce(((t,e)=>t+e),0)/n.length,s=t}else s=performance.now(),h=0}static drawFPS(){l.context.beginPath(),l.context.fillStyle="#FFC100",l.context.font="8px Monospace",l.context.fillText(`FPS: ${h&&h.toFixed(2)||"unknown"}`,10,o.CANVAS_HEIGHT-10),l.context.stroke()}}},201:(t,e)=>{var i;Object.defineProperty(e,"__esModule",{value:!0}),function(t){t[t.Graphics=0]="Graphics",t[t.Audio=1]="Audio"}(i||(i={})),e.default=i},735:(t,e,i)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.PathNode=e.findShortestPath=e.drawNode=e.debug_drawPathNodes=e.generatePathNodes=void 0;const o=i(861),l=i(35),s=i(322),a=i(811),n=i(239);function h(t,e,i){a.context.strokeStyle=i,a.context.lineWidth=.1,a.context.beginPath(),a.context.moveTo(.5+a.default.center.x+(t.x-e.x)-t.collisionBox.halfWidth,.5+a.default.center.y+(t.y-e.y)-t.collisionBox.halfHeight),a.context.lineTo(-.5+a.default.center.x+(t.x-e.x)+t.collisionBox.halfWidth,.5+a.default.center.y+(t.y-e.y)-t.collisionBox.halfHeight),a.context.lineTo(-.5+a.default.center.x+(t.x-e.x)+t.collisionBox.halfWidth,-.5+a.default.center.y+(t.y-e.y)+t.collisionBox.halfHeight),a.context.lineTo(.5+a.default.center.x+(t.x-e.x)-t.collisionBox.halfWidth,-.5+a.default.center.y+(t.y-e.y)+t.collisionBox.halfHeight),a.context.lineTo(.5+a.default.center.x+(t.x-e.x)-t.collisionBox.halfWidth,.5+a.default.center.y+(t.y-e.y)-t.collisionBox.halfHeight),a.context.stroke(),a.context.beginPath(),a.context.arc(a.default.center.x+(t.x-e.x),a.default.center.y+(t.y-e.y),1,0,2*Math.PI),a.context.stroke()}e.generatePathNodes=function(t,e,i){const l=[];let s=t-a.default.halfRows-3,h=e-a.default.halfCols-2;const d=t+a.default.halfRows+3,c=e+a.default.halfCols+2;s<0&&(s=0),h<0&&(h=0);for(let t=s;t<d;++t)for(let e=h-1;e<c;++e)n.default.walls[t]&&n.default.walls[t][e]||e>0&&t>0&&l.push(new r({x:e*o.TILE_SIZE+o.TILE_SIZE/2,y:t*o.TILE_SIZE+o.TILE_SIZE/2},i));return l},e.debug_drawPathNodes=function(t,e,i){t&&t.forEach((t=>h(t,e,i)))},e.drawNode=h,e.findShortestPath=function(t,e,i){const o=new r(e,e.collisionBox),s=new r(t,t.collisionBox);i.push(o),s.f=0,s.g=s.heuristic(o);const a=[s];let h;for(;a.length>0||h===o;){for(a.sort(((t,e)=>t.g-e.g));a.length>0&&!0===a[0].visited;)a.shift();if(a.length<=0)break;h=a.shift(),h.visited=!0,h.neighbourNodes=[...i].filter((t=>!(!(t.col===h.col&&t.row===h.row||t.col===h.col&&t.row===h.row-1||t.col===h.col+1&&t.row===h.row||t.col===h.col&&t.row===h.row+1||t.col===h.col-1&&t.row===h.row)&&(t.col!==h.col-1||t.row!==h.row-1||n.default.walls[t.row]&&null!==n.default.walls[t.row][t.col+1]&&n.default.walls[t.row+1]&&null!==n.default.walls[t.row+1][t.col])&&(t.col!==h.col+1||t.row!==h.row-1||n.default.walls[t.row]&&null!==n.default.walls[t.row][t.col-1]&&n.default.walls[t.row+1]&&null!==n.default.walls[t.row+1][t.col])&&(t.col!==h.col+1||t.row!==h.row+1||n.default.walls[t.row]&&null!==n.default.walls[t.row][t.col-1]&&n.default.walls[t.row-1]&&null!==n.default.walls[t.row-1][t.col])&&(t.col!==h.col-1||t.row!==h.row+1||n.default.walls[t.row]&&null!==n.default.walls[t.row][t.col+1]&&n.default.walls[t.row-1]&&null!==n.default.walls[t.row-1][t.col])))),h.neighbourNodes.map((t=>{!1===t.visited&&a.push(t);const e=h.f+l.pointToPointDistance(h,t);return e<t.f&&(t.parent=h,t.f=e,t.g=t.f+t.heuristic(o)),t}))}const d=[];if(o.parent){let t=o;for(;t.parent;)d.push(t),t=t.parent}return d};class r{constructor(t,e){this.deltas={dyTop:0,dyBottom:0,dxLeft:0,dxRight:0},this.visited=!1,this.g=1/0,this.f=1/0,this.parent=null,this.x=t.x,this.y=t.y,this.collisionBox=new s.default(e.width,e.height),this.updateTileDeltas(),this.updateMapPosition()}heuristic(t){return l.pointToPointDistance(this,t)}updateTileDeltas(){this.deltas.dyTop=this.y%o.TILE_SIZE,this.deltas.dyBottom=o.TILE_SIZE-this.deltas.dyTop,this.deltas.dxLeft=this.x%o.TILE_SIZE,this.deltas.dxRight=o.TILE_SIZE-this.deltas.dxLeft}updateMapPosition(){this.row=Math.floor(this.y/o.TILE_SIZE),this.col=Math.floor(this.x/o.TILE_SIZE)}}e.PathNode=r},533:(t,e,i)=>{Object.defineProperty(e,"__esModule",{value:!0});const o=i(861),l=i(35),s=i(239),a=i(811);class n{static cast(t,e,i){if(!(e>=0)){const o=t.deltas.dyTop/Math.tan(-e),l=1/o>0;return o>=0&&l?n.getInterceptPointNE(t,e,i):n.getInterceptPointNW(t,e,i)}{const o=t.deltas.dyBottom/Math.tan(e);if(o>=0)return n.getInterceptPointSE(t,e,i);if(o<0)return n.getInterceptPointSW(t,e,i)}}static drawRay(t,e="#4444FF"){a.context.strokeStyle=e,a.context.lineWidth=.5,a.context.beginPath(),a.context.moveTo(a.default.halfWidth,a.default.halfHeight),a.context.lineTo(a.default.halfWidth+t.x,a.default.halfHeight+t.y),a.context.stroke(),a.context.lineWidth=1}static determineIfThereAreObstaclesBetweenTwoPoints(t,e){const i=l.angleBetweenPoints(e,t),o=n.cast(t,i,e);return!o||null!==o.wallHit}static determineIfThereAreObstaclesBetweenTwoPathNodes(t,e){const i=+l.angleBetweenPoints(e,t).toFixed(2);if(0===i){const[i,o]=p(t,e);if(n.determineIfThereAreObstaclesBetweenTwoPoints(i,o))return!0;const[l,s]=I(t,e);return!!n.determineIfThereAreObstaclesBetweenTwoPoints(l,s)}if(i>0&&i<Math.PI/2){const[i,o]=p(t,e);if(n.determineIfThereAreObstaclesBetweenTwoPoints(i,o))return!0;const[l,s]=w(t,e);return!!n.determineIfThereAreObstaclesBetweenTwoPoints(l,s)}if(i===Math.PI/2){const[i,o]=I(t,e);if(n.determineIfThereAreObstaclesBetweenTwoPoints(i,o))return!0;const[l,s]=w(t,e);return!!n.determineIfThereAreObstaclesBetweenTwoPoints(l,s)}if(i>Math.PI/2&&i<Math.PI){const[i,o]=g(t,e);if(n.determineIfThereAreObstaclesBetweenTwoPoints(i,o))return!0;const[l,s]=I(t,e);return!!n.determineIfThereAreObstaclesBetweenTwoPoints(l,s)}if(3.14===Math.abs(i)){const[i,o]=g(t,e);if(n.determineIfThereAreObstaclesBetweenTwoPoints(i,o))return!0;const[l,s]=w(t,e);return!!n.determineIfThereAreObstaclesBetweenTwoPoints(l,s)}if(i>-Math.PI&&i<-Math.PI/2){const[i,o]=p(t,e);if(n.determineIfThereAreObstaclesBetweenTwoPoints(i,o))return!0;const[l,s]=w(t,e);return!!n.determineIfThereAreObstaclesBetweenTwoPoints(l,s)}if(-1.57===i){const[i,o]=p(t,e);if(n.determineIfThereAreObstaclesBetweenTwoPoints(i,o))return!0;const[l,s]=g(t,e);return!!n.determineIfThereAreObstaclesBetweenTwoPoints(l,s)}if(i>-Math.PI/2&&i<0){const[i,o]=g(t,e);if(n.determineIfThereAreObstaclesBetweenTwoPoints(i,o))return!0;const[l,s]=I(t,e);return!!n.determineIfThereAreObstaclesBetweenTwoPoints(l,s)}}static getInterceptPointSE(t,e,i){let l,s,h=null,r=null,d=0;for(;s=d*o.TILE_SIZE,l=0===e?0:(t.deltas.dxRight+s)*Math.tan(e),!(s+t.deltas.dxRight>n.rangeHorizontal||l>n.rangeVertical||i&&(s+t.deltas.dxRight>i.x-t.x||l>i.y-t.y));){if(o.DEBUG.RAYCASTER){let e;e=i?{x:a.default.center.x-(i.x-t.x)+t.deltas.dxRight+s,y:a.default.center.y-(i.y-t.y)+l}:{x:a.default.center.x+t.deltas.dxRight+s,y:a.default.center.y+l},a.context.strokeStyle="#4444FF",a.context.beginPath(),a.context.arc(e.x,e.y,2,0,2*Math.PI),a.context.stroke()}if(r=n.checkWallCollisionVerticalSE(d,t,l),r){h={x:s+t.deltas.dxRight,y:l};break}++d}let c,f,u=null,x=null,y=0;for(;f=y*o.TILE_SIZE,!(0===e||(c=(t.deltas.dyBottom+f)/Math.tan(e),f+t.deltas.dyBottom>n.rangeVertical||c>n.rangeHorizontal)||i&&(f+t.deltas.dyBottom>i.y-t.y||Math.round(c)>i.x-t.x));){if(o.DEBUG.RAYCASTER){let e;e=i?{x:a.default.center.x-(i.x-t.x)+c,y:a.default.center.y-(i.y-t.y)+t.deltas.dyBottom+f}:{x:a.default.center.x+c,y:a.default.center.y+t.deltas.dyBottom+f},a.context.strokeStyle="#44FF44",a.context.beginPath(),a.context.arc(e.x,e.y,2,0,2*Math.PI),a.context.stroke()}if(l<f)break;if(x=n.checkWallCollisionHorizontalSE(y,t,c),x){u={x:c,y:f+t.deltas.dyBottom};break}++y}if(h&&null===u)return{hitPoint:h,wallHit:r};if(u&&null===h)return{hitPoint:u,wallHit:x};if(u&&h)return Math.sqrt(Math.pow(h.x,2)+Math.pow(h.y,2))>Math.sqrt(Math.pow(u.x,2)+Math.pow(u.y,2))?{hitPoint:u,wallHit:x}:{hitPoint:h,wallHit:r};if(null===u&&null===h){const e={x:c,y:f+t.deltas.dyBottom},i={x:s+t.deltas.dxRight,y:l};return Math.sqrt(Math.pow(i.x,2)+Math.pow(i.y,2))>Math.sqrt(Math.pow(e.x,2)+Math.pow(e.y,2))?{hitPoint:e,wallHit:x}:{hitPoint:i,wallHit:r}}}static getInterceptPointNE(t,e,i){let l,s,h=null,r=null,d=0;for(;s=d*o.TILE_SIZE,l=0===e?0:(t.deltas.dxRight+s)*Math.tan(-e),!(s+t.deltas.dxRight>n.rangeHorizontal||l>n.rangeVertical||i&&(s+t.deltas.dxRight>i.x-t.x||l>t.y-i.y));){if(o.DEBUG.RAYCASTER){let e;e=i?{x:a.default.center.x-(i.x-t.x)+t.deltas.dxRight+s,y:a.default.center.y-(i.y-t.y)-l}:{x:a.default.center.x+t.deltas.dxRight+s,y:a.default.center.y-l},a.context.strokeStyle="#4444FF",a.context.beginPath(),a.context.arc(e.x,e.y,2,0,2*Math.PI),a.context.stroke()}if(r=n.checkWallCollisionVerticalNE(d,t,l),r){h={x:s+t.deltas.dxRight,y:-l};break}++d}let c,f,u=null,x=null,y=0;for(;f=y*o.TILE_SIZE,!(0===e||(c=(t.deltas.dyTop+f)/Math.tan(-e),f+t.deltas.dyTop>n.rangeVertical||c>n.rangeHorizontal)||i&&(f+t.deltas.dyTop>t.y-i.y||Math.round(c)>i.x-t.x));){if(o.DEBUG.RAYCASTER){let e;e=i?{x:a.default.center.x-(i.x-t.x)+c,y:a.default.center.y-(i.y-t.y)-t.deltas.dyTop-f}:{x:a.default.center.x+c,y:a.default.center.y-f-t.deltas.dyTop},a.context.strokeStyle="#44FF44",a.context.beginPath(),a.context.arc(e.x,e.y,2,0,2*Math.PI),a.context.stroke()}if(l<f)break;if(x=n.checkWallCollisionHorizontalNE(y,t,c),x){u={x:c,y:-f-t.deltas.dyTop};break}++y}if(h&&null===u)return{hitPoint:h,wallHit:r};if(u&&null===h)return{hitPoint:u,wallHit:x};if(u&&h)return Math.sqrt(Math.pow(h.x,2)+Math.pow(h.y,2))>Math.sqrt(Math.pow(u.x,2)+Math.pow(u.y,2))?{hitPoint:u,wallHit:x}:{hitPoint:h,wallHit:r};if(null===u&&null===h){const e={x:c,y:-f-t.deltas.dyTop},i={x:s+t.deltas.dxRight,y:-l};return Math.sqrt(Math.pow(i.x,2)+Math.pow(i.y,2))>Math.sqrt(Math.pow(e.x,2)+Math.pow(e.y,2))?{hitPoint:e,wallHit:x}:{hitPoint:i,wallHit:r}}}static getInterceptPointNW(t,e,i){let l,s,h=null,r=null,d=0;for(;s=d*o.TILE_SIZE,l=0===e?0:(t.deltas.dxLeft+s)*Math.tan(Math.PI- -e),!(s+t.deltas.dxLeft>n.rangeHorizontal||l>n.rangeVertical||i&&(s+t.deltas.dxLeft>t.x-i.x||l>t.y-i.y));){if(o.DEBUG.RAYCASTER){let e;e=i?{x:a.default.center.x-(i.x-t.x)-t.deltas.dxLeft-s,y:a.default.center.y-(i.y-t.y)-l}:{x:a.default.center.x-t.deltas.dxLeft-s,y:a.default.center.y-l},a.context.strokeStyle="#4444FF",a.context.beginPath(),a.context.arc(e.x,e.y,2,0,2*Math.PI),a.context.stroke()}if(r=n.checkWallCollisionVerticalNW(d,t,l),r){h={x:-s-t.deltas.dxLeft,y:-l};break}++d}let c,f,u=null,x=null,y=0;for(;f=y*o.TILE_SIZE,!(0===e||(c=(t.deltas.dyTop+f)/Math.tan(Math.PI- -e),f+t.deltas.dyTop>n.rangeVertical||c>n.rangeHorizontal)||i&&(f+t.deltas.dyTop>t.y-i.y||Math.round(c)>t.x-i.x));){if(o.DEBUG.RAYCASTER){let e;e=i?{x:a.default.center.x-(i.x-t.x)-c,y:a.default.center.y-(i.y-t.y)-t.deltas.dyTop-f}:{x:a.default.center.x-c,y:a.default.center.y-t.deltas.dyTop-f},a.context.strokeStyle="#44FF44",a.context.beginPath(),a.context.arc(e.x,e.y,2,0,2*Math.PI),a.context.stroke()}if(l<f)break;if(x=n.checkWallCollisionHorizontalNW(y,t,c),x){u={x:-c,y:-f-t.deltas.dyTop};break}++y}if(h&&null===u)return{hitPoint:h,wallHit:r};if(u&&null===h)return{hitPoint:u,wallHit:x};if(u&&h)return Math.sqrt(Math.pow(h.x,2)+Math.pow(h.y,2))>Math.sqrt(Math.pow(u.x,2)+Math.pow(u.y,2))?{hitPoint:u,wallHit:x}:{hitPoint:h,wallHit:r};if(null===u&&null===h){const e={x:-c,y:-f-t.deltas.dyTop},i={x:-s-t.deltas.dxLeft,y:-l};return Math.sqrt(Math.pow(i.x,2)+Math.pow(i.y,2))>Math.sqrt(Math.pow(e.x,2)+Math.pow(e.y,2))?{hitPoint:e,wallHit:x}:{hitPoint:i,wallHit:r}}}static getInterceptPointSW(t,e,i){let l,s,h=null,r=null,d=0;for(;s=d*o.TILE_SIZE,l=0===e?0:(t.deltas.dxLeft+s)*Math.tan(Math.PI-e),!(s+t.deltas.dxLeft>n.rangeHorizontal||l>n.rangeVertical||i&&(s+t.deltas.dxLeft>t.x-i.x||l>i.y-t.y));){if(o.DEBUG.RAYCASTER){let e;e=i?{x:a.default.center.x-(i.x-t.x)-t.deltas.dxLeft-s,y:a.default.center.y-(i.y-t.y)+l}:{x:a.default.center.x-t.deltas.dxLeft-s,y:a.default.center.y+l},a.context.strokeStyle="#4444FF",a.context.beginPath(),a.context.arc(e.x,e.y,2,0,2*Math.PI),a.context.stroke()}if(r=n.checkWallCollisionVerticalSW(d,t,l),r){h={x:-s-t.deltas.dxLeft,y:l};break}++d}let c,f,u=null,x=null,y=0;for(;f=y*o.TILE_SIZE,!(0===e||(c=(t.deltas.dyBottom+f)/Math.tan(e),f+t.deltas.dyBottom>n.rangeVertical||-c>n.rangeHorizontal)||i&&(f+t.deltas.dyBottom>i.y-t.y||-c>t.x-i.x));){if(o.DEBUG.RAYCASTER){let e;e=i?{x:a.default.center.x-(i.x-t.x)+c,y:a.default.center.y-(i.y-t.y)+t.deltas.dyBottom+f}:{x:a.default.center.x+c,y:a.default.center.y+t.deltas.dyBottom+f},a.context.strokeStyle="#44FF44",a.context.beginPath(),a.context.arc(e.x,e.y,2,0,2*Math.PI),a.context.stroke()}if(l<f)break;if(x=n.checkWallCollisionHorizontalSW(y,t,c),x){u={x:c,y:f+t.deltas.dyBottom};break}++y}if(h&&null===u)return{hitPoint:h,wallHit:r};if(u&&null===h)return{hitPoint:u,wallHit:x};if(u&&h)return Math.sqrt(Math.pow(h.x,2)+Math.pow(h.y,2))>Math.sqrt(Math.pow(u.x,2)+Math.pow(u.y,2))?{hitPoint:u,wallHit:x}:{hitPoint:h,wallHit:r};if(null===u&&null===h){const e={x:c,y:f+t.deltas.dyBottom},i={x:-s-t.deltas.dxLeft,y:l};return Math.sqrt(Math.pow(i.x,2)+Math.pow(i.y,2))>Math.sqrt(Math.pow(e.x,2)+Math.pow(e.y,2))?{hitPoint:e,wallHit:x}:{hitPoint:i,wallHit:r}}}static checkWallCollisionVerticalSE(t,e,i){const l=1+e.col+t,n=e.row+Math.floor((e.deltas.dyTop+i)/o.TILE_SIZE),h=e.row+Math.floor((e.deltas.dyTop+i-1)/o.TILE_SIZE);let r=null;return s.default.walls[n]&&(s.default.walls[n][l]?r=s.default.walls[n][l]:s.default.walls[h][l]&&(r=s.default.walls[h][l])),o.DEBUG.RAYCASTER&&a.context.fillText(`col: ${l}, row: ${n}, hit: ${r?[r.row,r.col]:null}`,10,112+12*t),r}static checkWallCollisionHorizontalSE(t,e,i){const l=e.col+Math.floor((e.deltas.dxLeft+i)/o.TILE_SIZE),n=e.row+t+1;let h=null;return s.default.walls[n]&&s.default.walls[n][l]&&(h=s.default.walls[n][l]),o.DEBUG.RAYCASTER&&a.context.fillText(`col: ${l}, row: ${n}, hit: ${h?[h.row,h.col]:null}`,10,212+12*t),h}static checkWallCollisionVerticalNE(t,e,i){const l=1+e.col+t,n=e.row+Math.floor((e.deltas.dyTop-i)/o.TILE_SIZE);let h=null;return s.default.walls[n]&&s.default.walls[n][l]&&(h=s.default.walls[n][l]),o.DEBUG.RAYCASTER&&a.context.fillText(`col: ${l}, row: ${n}, hit: ${h?[h.row,h.col]:null}`,10,112+12*t),h}static checkWallCollisionHorizontalNE(t,e,i){const l=e.col+Math.floor((e.deltas.dxLeft+i)/o.TILE_SIZE),n=e.col+Math.floor((e.deltas.dxLeft+i-1)/o.TILE_SIZE),h=e.row-t-1;let r=null;return s.default.walls[h]&&(s.default.walls[h][l]?r=s.default.walls[h][l]:s.default.walls[h][n]&&(r=s.default.walls[h][n])),o.DEBUG.RAYCASTER&&a.context.fillText(`col: ${l}, row: ${h}, hit: ${r?[r.row,r.col]:null}`,10,212+12*t),r}static checkWallCollisionVerticalNW(t,e,i){const l=-1+e.col-t,n=e.row+Math.floor((e.deltas.dyTop-i)/o.TILE_SIZE);let h=null;return s.default.walls[n]&&s.default.walls[n][l]&&(h=s.default.walls[n][l]),o.DEBUG.RAYCASTER&&a.context.fillText(`col: ${l}, row: ${n}, hit: ${h?[h.row,h.col]:null}`,10,112+12*t),h}static checkWallCollisionHorizontalNW(t,e,i){const l=e.col-Math.floor((e.deltas.dxRight+i)/o.TILE_SIZE),n=e.row-t-1;let h=null;return s.default.walls[n]&&s.default.walls[n][l]&&(h=s.default.walls[n][l]),o.DEBUG.RAYCASTER&&a.context.fillText(`col: ${l}, row: ${n}, hit: ${h?[h.row,h.col]:null}`,10,212+12*t),h}static checkWallCollisionVerticalSW(t,e,i){const l=e.col-t-1,n=e.row+Math.floor((e.deltas.dyTop+i)/o.TILE_SIZE),h=e.row+Math.floor((e.deltas.dyTop+i-1)/o.TILE_SIZE);let r=null;return s.default.walls[n]&&(s.default.walls[n][l]?r=s.default.walls[n][l]:s.default.walls[h][l]&&(r=s.default.walls[h][l])),o.DEBUG.RAYCASTER&&a.context.fillText(`col: ${l}, row: ${n}, hit: ${r?[r.row,r.col]:null}`,10,112+12*t),r}static checkWallCollisionHorizontalSW(t,e,i){const l=e.col-Math.floor((e.deltas.dxRight-i)/o.TILE_SIZE),n=e.row+t+1;let h=null;return s.default.walls[n]&&s.default.walls[n][l]&&(h=s.default.walls[n][l]),o.DEBUG.RAYCASTER&&a.context.fillText(`col: ${l}, row: ${n}, hit: ${h?[h.row,h.col]:null}`,10,212+12*t),h}}e.default=n,n.outsideOfScreenOffset=2*o.TILE_SIZE,n.rangeHorizontal=a.default.halfWidth+n.outsideOfScreenOffset,n.rangeVertical=a.default.halfHeight+2*n.outsideOfScreenOffset;const h={x:0,y:0,deltas:{dyTop:0,dyBottom:0,dxLeft:0,dxRight:0}},r={...h,deltas:{...h.deltas}},d={...h,deltas:{...h.deltas}},c={...h,deltas:{...h.deltas}},f={...h,deltas:{...h.deltas}},u={...h,deltas:{...h.deltas}},x={...h,deltas:{...h.deltas}},y={...h,deltas:{...h.deltas}},E={...h,deltas:{...h.deltas}};function g(t,e){return r.x=t.x-t.collisionBox.halfWidth,r.y=t.y-t.collisionBox.halfHeight,r.row=Math.floor(r.y/o.TILE_SIZE),r.col=Math.floor(r.x/o.TILE_SIZE),r.deltas.dyTop=r.y%o.TILE_SIZE,r.deltas.dyBottom=o.TILE_SIZE-r.deltas.dyTop,r.deltas.dxLeft=r.x%o.TILE_SIZE,r.deltas.dxRight=o.TILE_SIZE-r.deltas.dxLeft,d.x=e.x-e.collisionBox.halfWidth,d.y=e.y-e.collisionBox.halfHeight,d.row=Math.floor(d.y/o.TILE_SIZE),d.col=Math.floor(d.x/o.TILE_SIZE),d.deltas.dyTop=d.y%o.TILE_SIZE,d.deltas.dyBottom=o.TILE_SIZE-d.deltas.dyTop,d.deltas.dxLeft=d.x%o.TILE_SIZE,d.deltas.dxRight=o.TILE_SIZE-d.deltas.dxLeft,[r,d]}function p(t,e){return c.x=t.x+t.collisionBox.halfWidth,c.y=t.y-t.collisionBox.halfHeight,c.row=Math.floor(c.y/o.TILE_SIZE),c.col=Math.floor(c.x/o.TILE_SIZE),c.deltas.dyTop=c.y%o.TILE_SIZE,c.deltas.dyBottom=o.TILE_SIZE-c.deltas.dyTop,c.deltas.dxLeft=c.x%o.TILE_SIZE,c.deltas.dxRight=o.TILE_SIZE-c.deltas.dxLeft,f.x=e.x+e.collisionBox.halfWidth,f.y=e.y-e.collisionBox.halfHeight,f.row=Math.floor(f.y/o.TILE_SIZE),f.col=Math.floor(f.x/o.TILE_SIZE),f.deltas.dyTop=f.y%o.TILE_SIZE,f.deltas.dyBottom=o.TILE_SIZE-f.deltas.dyTop,f.deltas.dxLeft=f.x%o.TILE_SIZE,f.deltas.dxRight=o.TILE_SIZE-f.deltas.dxLeft,[c,f]}function w(t,e){return u.x=t.x-t.collisionBox.halfWidth,u.y=t.y+t.collisionBox.halfHeight,u.row=Math.floor(u.y/o.TILE_SIZE),u.col=Math.floor(u.x/o.TILE_SIZE),u.deltas.dyTop=u.y%o.TILE_SIZE,u.deltas.dyBottom=o.TILE_SIZE-u.deltas.dyTop,u.deltas.dxLeft=u.x%o.TILE_SIZE,u.deltas.dxRight=o.TILE_SIZE-u.deltas.dxLeft,x.x=e.x-e.collisionBox.halfWidth,x.y=e.y+e.collisionBox.halfHeight,x.row=Math.floor(x.y/o.TILE_SIZE),x.col=Math.floor(x.x/o.TILE_SIZE),x.deltas.dyTop=x.y%o.TILE_SIZE,x.deltas.dyBottom=o.TILE_SIZE-x.deltas.dyTop,x.deltas.dxLeft=x.x%o.TILE_SIZE,x.deltas.dxRight=o.TILE_SIZE-x.deltas.dxLeft,[u,x]}function I(t,e){return y.x=t.x+t.collisionBox.halfWidth,y.y=t.y+t.collisionBox.halfHeight,y.row=Math.floor(y.y/o.TILE_SIZE),y.col=Math.floor(y.x/o.TILE_SIZE),y.deltas.dyTop=y.y%o.TILE_SIZE,y.deltas.dyBottom=o.TILE_SIZE-y.deltas.dyTop,y.deltas.dxLeft=y.x%o.TILE_SIZE,u.deltas.dxRight=o.TILE_SIZE-y.deltas.dxLeft,E.x=e.x+e.collisionBox.halfWidth,E.y=e.y+e.collisionBox.halfHeight,E.row=Math.floor(E.y/o.TILE_SIZE),E.col=Math.floor(E.x/o.TILE_SIZE),E.deltas.dyTop=E.y%o.TILE_SIZE,E.deltas.dyBottom=o.TILE_SIZE-E.deltas.dyTop,E.deltas.dxLeft=E.x%o.TILE_SIZE,x.deltas.dxRight=o.TILE_SIZE-E.deltas.dxLeft,[y,E]}},63:(t,e,i)=>{Object.defineProperty(e,"__esModule",{value:!0});const o=i(861),l=i(549),s=i(400),a=i(811),n=i(829),h=i(15),r=i(897),d=i(201);class c{constructor(){window.onfocus=()=>{n.default.restart()},c.loadedPercentages.set(d.default.Graphics,{weight:.3,loaded:0}),c.loadedPercentages.set(d.default.Audio,{weight:.7,loaded:0}),l.default.load((t=>this.gameAssetLoaded(d.default.Audio,t))),s.default.load((t=>this.gameAssetLoaded(d.default.Graphics,t)))}start(){const t=setInterval((()=>{c.loaded&&(clearInterval(t),c.stateManager.setState(h.default.MAIN_MENU))}),250);this.gameLoop()}gameAssetLoaded(t,e){const i=c.loadedPercentages.get(t);i.loaded=e,c.loadedPercentages.set(t,i),c.loadedPercentage=0;for(const[t,e]of c.loadedPercentages)c.loadedPercentage+=e.loaded*e.weight;1===c.loadedPercentage&&(c.loaded=!0)}gameLoop(){this.update(),this.render(),n.default.calculateFrameRate(),window.requestAnimationFrame((()=>this.gameLoop()))}update(){c.stateManager.update()}render(){a.default.clear(),c.stateManager.render(),o.DEBUG.FPS&&n.default.drawFPS()}}e.default=c,c.loaded=!1,c.loadedPercentage=0,c.loadedPercentages=new Map,c.stateManager=new r.default},137:(t,e,i)=>{Object.defineProperty(e,"__esModule",{value:!0});const o=i(861),l=i(602),s=i(63),a=i(811),n=i(15);e.default=class{constructor(){this.handleEnterPress=t=>{t.keyCode===l.KEYBOARD_KEYS.ENTER&&s.default.stateManager.setState(n.default.MAIN_MENU)}}enter(){window.addEventListener("keydown",this.handleEnterPress)}exit(){window.removeEventListener("keydown",this.handleEnterPress)}update(){}render(){this.drawGameOverScreen()}drawGameOverScreen(){a.context.beginPath(),a.context.fillStyle="#dd0000",a.context.font="32px Monospace",a.context.fillText("YOU DIED!",o.CANVAS_WIDTH/2-80,o.CANVAS_HEIGHT/2+10),a.context.stroke()}}},745:(t,e,i)=>{Object.defineProperty(e,"__esModule",{value:!0});const o=i(861),l=i(63),s=i(811);e.default=class{enter(){}exit(){}update(){}render(){this.drawLoadingDialog()}drawLoadingDialog(){s.context.beginPath(),s.context.fillStyle="#FFC100",s.context.font="20px Monospace",s.context.fillText(`Loading: ${100*l.default.loadedPercentage}%`,o.CANVAS_WIDTH/2-70,o.CANVAS_HEIGHT/2-10),s.context.stroke()}}},265:(t,e,i)=>{Object.defineProperty(e,"__esModule",{value:!0});const o=i(861),l=i(602),s=i(63),a=i(811),n=i(15);e.default=class{constructor(){this.animationCounter=0,this.animationPosition=100,this.instructionsVisible=!0,this.handleMenuSelection=t=>{t.keyCode===l.KEYBOARD_KEYS.ENTER&&s.default.stateManager.setState(n.default.PLAYING)}}enter(){window.addEventListener("keydown",this.handleMenuSelection)}exit(){window.removeEventListener("keydown",this.handleMenuSelection)}update(){this.animationCounter=(this.animationCounter+1)%this.animationPosition,this.animationCounter>=this.animationPosition/2?this.instructionsVisible=!1:this.instructionsVisible=!0}render(){this.drawMainMenu()}drawMainMenu(){a.context.beginPath(),a.context.fillStyle="#FFC100",a.context.font="12px Monospace",a.context.fillText("Retro 2D Top-Down Game Engine",o.CANVAS_WIDTH/2-106,o.CANVAS_HEIGHT/2-34),this.instructionsVisible&&(a.context.font="20px Monospace",a.context.fillText("Press Enter to start",o.CANVAS_WIDTH/2-118,o.CANVAS_HEIGHT/2+10)),a.context.stroke()}}},897:(t,e,i)=>{Object.defineProperty(e,"__esModule",{value:!0});const o=i(15);e.default=class{constructor(){this.currentState=o.default.LOADING}getState(){return this.currentState}setState(t){this.currentState.exit(t);const e=this.currentState;return t.enter(e),this.currentState=t,this.currentState}update(){this.currentState.update()}render(){this.currentState.render()}}},839:(t,e,i)=>{Object.defineProperty(e,"__esModule",{value:!0});const o=i(861),l=i(602),s=i(811),a=i(63),n=i(15);e.default=class{constructor(){this.pauseHandler=t=>{switch(t.keyCode){case l.KEYBOARD_KEYS.ESC:t.preventDefault(),n.default.PLAYING.destroyGame(),a.default.stateManager.setState(n.default.MAIN_MENU);break;case l.KEYBOARD_KEYS.p:a.default.stateManager.setState(n.default.PLAYING)}}}enter(){window.addEventListener("keydown",this.pauseHandler)}exit(){window.removeEventListener("keydown",this.pauseHandler)}update(){}render(){n.default.PLAYING.render(),this.drawPauseMenu()}drawPauseMenu(){s.context.beginPath(),s.context.fillStyle="#FFC100",s.context.font="20px Monospace",s.context.fillText("Paused",o.CANVAS_WIDTH/2-36,o.CANVAS_HEIGHT/2-54),s.context.font="12px Monospace",s.context.fillText("  p - Resume",o.CANVAS_WIDTH/2-50,o.CANVAS_HEIGHT/2-34),s.context.fillText("ESC - Main Menu",o.CANVAS_WIDTH/2-50,o.CANVAS_HEIGHT/2-18),s.context.stroke()}}},936:(t,e,i)=>{Object.defineProperty(e,"__esModule",{value:!0});const o=i(63),l=i(811),s=i(729),a=i(602),n=i(301),h=i(311),r=i(239),d=i(645),c=i(15);e.default=class{constructor(){this.playerSetShootingTrue=t=>{this.player.setShooting(!0)},this.playerSetShootingFalse=t=>{this.player.setShooting(!1)},this.pauseHandler=t=>{switch(t.keyCode){case a.KEYBOARD_KEYS.ESC:case a.KEYBOARD_KEYS.p:t.preventDefault(),o.default.stateManager.setState(c.default.PAUSED)}}}enter(t){t!==c.default.PAUSED&&this.startNewGame(),this.setupOwnEventListeners()}setupOwnEventListeners(){window.onblur=()=>{o.default.stateManager.setState(c.default.PAUSED)},window.addEventListener("keydown",this.pauseHandler)}exit(t){this.clearOwnEventListeners(),t!==c.default.PAUSED&&this.destroyGame()}clearOwnEventListeners(){window.onblur=null,window.removeEventListener("keydown",this.pauseHandler)}update(){this.player.alive?(l.default.updateMousePosition(),h.default.update(this.player),this.player.update(),this.map.update(),this.checkForVictoryCondition()):o.default.stateManager.setState(c.default.GAME_OVER)}render(){this.map.draw(),this.player.draw()}startNewGame(){this.player=new d.default(128,64),this.map=new r.default(this.player),s.default.addListenerKeydown(this.player.keydownHandler),s.default.addListenerKeyup(this.player.keyupHandler),n.default.init(this.playerSetShootingTrue,this.playerSetShootingFalse)}checkForVictoryCondition(){0===r.default.enemiesRemaining()&&this.checkIfPlayerIsInsideExitPortal()&&o.default.stateManager.setState(c.default.VICTORY)}checkIfPlayerIsInsideExitPortal(){return this.player.row===r.default.exitPortal.row&&this.player.col===r.default.exitPortal.col}destroyGame(){s.default.removeKeydownAndKeyupListeners(this.player.keydownHandler),n.default.removeMouseLeftClickListeners(this.playerSetShootingTrue,this.playerSetShootingFalse),this.map.destroy(),this.map=null,this.player=null}}},525:(t,e,i)=>{Object.defineProperty(e,"__esModule",{value:!0});const o=i(861),l=i(602),s=i(63),a=i(811),n=i(15);e.default=class{constructor(){this.handleEnterPress=t=>{t.keyCode===l.KEYBOARD_KEYS.ENTER&&s.default.stateManager.setState(n.default.MAIN_MENU)}}enter(){window.addEventListener("keydown",this.handleEnterPress)}exit(){window.removeEventListener("keydown",this.handleEnterPress)}update(){}render(){this.drawGameOverScreen()}drawGameOverScreen(){a.context.beginPath(),a.context.fillStyle="#00dd00",a.context.font="32px Monospace",a.context.fillText("VICTORY!",o.CANVAS_WIDTH/2-80,o.CANVAS_HEIGHT/2+10),a.context.stroke()}}},15:(t,e,i)=>{Object.defineProperty(e,"__esModule",{value:!0});const o=i(745),l=i(265),s=i(936),a=i(839),n=i(137),h=i(525),r={LOADING:new o.default,MAIN_MENU:new l.default,PLAYING:new s.default,PAUSED:new a.default,GAME_OVER:new n.default,VICTORY:new h.default};e.default=r},35:(t,e,i)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.updatePointDeltas=e.updatePointRowAndColValues=e.angleBetweenPoints=e.pointToPointDistance=void 0;const o=i(861);e.pointToPointDistance=function(t,e){return Math.sqrt((e.x-t.x)*(e.x-t.x)+(e.y-t.y)*(e.y-t.y))},e.angleBetweenPoints=function(t,e){return Math.atan2(t.y-e.y,t.x-e.x)},e.updatePointRowAndColValues=function(t){t.row=Math.floor(t.y/o.TILE_SIZE),t.col=Math.floor(t.x/o.TILE_SIZE)},e.updatePointDeltas=function(t){t.deltas.dyTop=t.y%o.TILE_SIZE,t.deltas.dyBottom=o.TILE_SIZE-t.deltas.dyTop,t.deltas.dxLeft=t.x%o.TILE_SIZE,t.deltas.dxRight=o.TILE_SIZE-t.deltas.dxLeft}},311:(t,e,i)=>{Object.defineProperty(e,"__esModule",{value:!0});const o=i(301);class l{static update(t){const e=navigator.getGamepads();e[0]&&(this.handleMovement(e[0],t),this.handleAiming(e[0]),this.handleButtons(e[0],t))}static handleMovement(t,e){const i=+t.axes[0].toFixed(2);i>0?e.moving.right=!0:i<0?e.moving.left=!0:(e.moving.left=!1,e.moving.right=!1);const o=+t.axes[1].toFixed(2);o>0?e.moving.down=!0:o<0?e.moving.up=!0:(e.moving.up=!1,e.moving.down=!1)}static handleAiming(t){const e=t.axes[2],i=t.axes[3];0!=+e.toFixed(2)&&(o.default.x+=e*this.aimModifier),0!=+i.toFixed(2)&&(o.default.y+=i*this.aimModifier)}static handleButtons(t,e){t.buttons[5].pressed?e.setShooting(!0):e.setShooting(!1)}}e.default=l,l.aimModifier=10},729:(t,e)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.default=class{static addListenerKeydown(t){document.addEventListener("keydown",t)}static addListenerKeyup(t){document.addEventListener("keyup",t)}static removeKeydownAndKeyupListeners(t){document.removeEventListener("keyup",t),document.removeEventListener("keydown",t)}}},301:(t,e,i)=>{Object.defineProperty(e,"__esModule",{value:!0});const o=i(811);class l{static init(t,e){this.hijackRightClick(),this.trackMouseOnCanvas(),this.listenForLeftClicks(t,e)}static hijackRightClick(){window.addEventListener("contextmenu",(t=>{t.preventDefault()}),!1)}static trackMouseOnCanvas(){o.default.getCanvasDomElement().addEventListener("mousemove",(t=>{this.x=t.pageX,this.y=t.pageY}),!1)}static listenForLeftClicks(t,e){const i=o.default.getCanvasDomElement();i.addEventListener("mousedown",t,!1),i.addEventListener("mouseup",e,!1)}static removeMouseLeftClickListeners(t,e){const i=o.default.getCanvasDomElement();i.removeEventListener("mousedown",t),i.removeEventListener("mouseup",e)}}e.default=l,l.x=window.innerWidth/2+100,l.y=window.innerHeight/2+50},602:(t,e)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.KEYBOARD_KEYS=void 0,e.KEYBOARD_KEYS={ENTER:13,ESC:27,w:87,a:65,s:83,d:68,p:80}},861:t=>{t.exports=JSON.parse('{"CANVAS_WIDTH":480,"CANVAS_HEIGHT":320,"TILE_SIZE":32,"SCALE":2,"DEBUG":{"FPS":true,"RAYCASTER":false,"RAY_TO_PLAYER":false,"PATHFINDING_NODES":false,"SHORTEST_PATH_TO_PLAYER":false,"PLAYER_COLLISION_BOX":true,"PLAYER_VISION_RAY_SHOTGUN":false,"ENEMY_COLLISION_BOX":true,"ENEMY_STATE":true},"FEATURES":{"SCATTER_PROJECTILES":true},"THROW_DEVELOPMENT_ERRORS":true}')},309:t=>{t.exports=JSON.parse('{"gameObjects":[[1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0],[1,0,0,0,0,0,0,2,0,0,1,1,1,1,1,1,0,0,0,0,0,0,0,0],[1,0,0,0,0,0,0,2,0,0,1,0,0,0,0,1,0,0,0,0,0,0,0,0],[1,0,3,3,3,0,0,3,0,0,2,0,0,0,0,1,1,1,1,1,1,0,0,0],[1,0,0,3,0,0,0,0,3,0,1,0,2,3,0,2,0,0,0,0,1,0,0,0],[1,0,0,0,0,0,0,0,3,0,1,0,2,2,0,2,0,0,2,2,1,0,0,0],[1,0,0,0,0,3,3,0,1,1,1,0,0,0,0,1,0,0,0,0,1,1,1,1],[1,0,0,0,3,3,3,0,1,0,0,0,0,0,0,1,0,0,0,0,2,3,9,1],[1,0,1,0,3,3,0,0,1,0,0,0,0,1,0,1,0,0,0,0,2,3,3,1],[1,0,0,0,0,0,0,0,2,0,0,0,0,0,0,1,0,0,0,0,2,2,2,1],[1,0,0,0,0,0,0,0,2,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1],[1,1,1,1,1,1,1,1,1,0,0,0,1,1,1,1,1,1,2,2,2,1,1,1],[0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0],[0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,3,3,3,0,0,0,1,0,0],[0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,3,3,3,0,1,1,1,0,0],[0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0],[0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0]],"enemies":[{"x":286,"y":88,"healthPercentage":1},{"x":368,"y":90,"healthPercentage":0.5},{"x":368,"y":112,"healthPercentage":0.5},{"x":620,"y":240,"healthPercentage":0.8},{"x":558,"y":216,"healthPercentage":0.3},{"x":540,"y":220,"healthPercentage":0.3},{"x":466,"y":120,"healthPercentage":1},{"x":608,"y":230,"healthPercentage":0.8},{"x":568,"y":226,"healthPercentage":0.3},{"x":540,"y":230,"healthPercentage":0.3},{"x":436,"y":98,"healthPercentage":1},{"x":360,"y":128,"healthPercentage":0.5},{"x":608,"y":246,"healthPercentage":0.8},{"x":548,"y":230,"healthPercentage":0.3},{"x":520,"y":230,"healthPercentage":0.3},{"x":320,"y":500,"healthPercentage":0.3},{"x":336,"y":500,"healthPercentage":0.3},{"x":352,"y":500,"healthPercentage":0.3},{"x":320,"y":484,"healthPercentage":0.3},{"x":336,"y":484,"healthPercentage":0.3},{"x":352,"y":484,"healthPercentage":0.3},{"x":420,"y":500,"healthPercentage":0.3},{"x":436,"y":500,"healthPercentage":0.3},{"x":452,"y":500,"healthPercentage":0.3},{"x":420,"y":484,"healthPercentage":0.3},{"x":436,"y":484,"healthPercentage":0.3},{"x":452,"y":484,"healthPercentage":0.3},{"x":422,"y":404,"healthPercentage":0.3},{"x":438,"y":404,"healthPercentage":0.3},{"x":454,"y":404,"healthPercentage":0.3},{"x":422,"y":420,"healthPercentage":0.3},{"x":438,"y":420,"healthPercentage":0.3},{"x":454,"y":420,"healthPercentage":0.3}]}')}},e={};(new(function i(o){var l=e[o];if(void 0!==l)return l.exports;var s=e[o]={exports:{}};return t[o](s,s.exports,i),s.exports}(63).default)).start()})();
//# sourceMappingURL=app.js.map