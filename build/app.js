(()=>{"use strict";var t={4706:(t,e,i)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.load=void 0;const a=i(4675);e.load=function(t){return new Promise(((e,i)=>{const o=new XMLHttpRequest;o.open("GET",t,!0),o.responseType="arraybuffer",o.onload=()=>{a.default.decodeAudioData(o.response,(t=>e(t)))},o.send()}))}},4675:(t,e)=>{Object.defineProperty(e,"__esModule",{value:!0});const i=new AudioContext;e.default=i},3549:(t,e,i)=>{Object.defineProperty(e,"__esModule",{value:!0});const a=i(5789);e.default=class{static async load(t){await a.default.load(t)}}},3287:(t,e)=>{Object.defineProperty(e,"__esModule",{value:!0});class i{static get musicVolume(){return this._musicVolume}static set musicVolume(t){t>=0&&t<=1&&(this._musicVolume=t)}static get soundFxVolume(){return this._soundFxVolume}static set soundFxVolume(t){t>=0&&t<=1&&(this._soundFxVolume=t)}}e.default=i,i._musicVolume=.3,i._soundFxVolume=.15},5789:(t,e,i)=>{Object.defineProperty(e,"__esModule",{value:!0});const a=i(3287),o=i(4675),s=i(4706);class l{static async load(t){const e=[s.load("./audio/smg_1.wav"),s.load("./audio/smg_2.wav"),s.load("./audio/smg_3.wav"),s.load("./audio/smg_4.wav"),s.load("./audio/smg_5.wav"),s.load("./audio/crate_hit_1.wav"),s.load("./audio/enemy_hit_1.mp3"),s.load("./audio/enemy_hit_2.mp3"),s.load("./audio/enemy_hit_3.mp3"),s.load("./audio/enemy_hit_4.mp3"),s.load("./audio/enemy_hit_5.mp3"),s.load("./audio/enemy_die_1.mp3")],i=await Promise.all(e);this.SMG[0]=i[0],this.SMG[1]=i[1],this.SMG[2]=i[2],this.SMG[3]=i[3],this.SMG[4]=i[4],this.CRATE_HIT[0]=i[5],this.ENEMY_HIT[0]=i[6],this.ENEMY_HIT[1]=i[7],this.ENEMY_HIT[2]=i[8],this.ENEMY_HIT[3]=i[9],this.ENEMY_HIT[4]=i[10],this.ENEMY_DEATH[0]=i[11],t(1)}static playSMG(){const t=o.default.createBufferSource();t.buffer=this.SMG[this.SMG_INDEX];const e=o.default.createGain();e.gain.value=.2*a.default.soundFxVolume,t.connect(e),e.connect(o.default.destination),t.start(),this.SMG_INDEX=++this.SMG_INDEX%this.SMG.length}static playEnemyHit(){if(!1===this.ENEMY_HIT_READY)return;const t=o.default.createBufferSource();t.buffer=this.ENEMY_HIT[this.ENEMY_HIT_INDEX];const e=o.default.createGain();e.gain.value=a.default.soundFxVolume,t.connect(e),e.connect(o.default.destination),t.start(),this.ENEMY_HIT_INDEX=++this.ENEMY_HIT_INDEX%this.ENEMY_HIT.length,this.ENEMY_HIT_READY=!1,setTimeout((()=>{this.ENEMY_HIT_READY=!0}),500)}static playEnemyDeath(){const t=o.default.createBufferSource();t.buffer=this.ENEMY_DEATH[0];const e=o.default.createGain();e.gain.value=a.default.soundFxVolume,t.connect(e),e.connect(o.default.destination),t.start()}static playWallHit(){const t=o.default.createBufferSource();t.buffer=this.CRATE_HIT[0];const e=o.default.createGain();e.gain.value=a.default.soundFxVolume,t.connect(e),e.connect(o.default.destination),t.start()}}e.default=l,l.SMG=[],l.SMG_INDEX=0,l.CRATE_HIT=[],l.ENEMY_HIT=[],l.ENEMY_HIT_INDEX=0,l.ENEMY_HIT_READY=!0,l.ENEMY_DEATH=[]},1625:(t,e,i)=>{Object.defineProperty(e,"__esModule",{value:!0});const a=i(8861),o=i(7204),s=i(6322),l=i(2422),n=i(9239),h=i(2187);e.default=class{constructor(t,e,i,a,o){this.x=t,this.y=e,this.collisionBox=i,this.speed=a,this.prevX=[],this.prevY=[],this.maxHealth=100,this.state=h.default.Idling,this.previousState=h.default.Idling,this.animationSpritePosition=0,this.moving={left:!1,right:!1,up:!1,down:!1},this.blocked={left:!1,right:!1,up:!1,down:!1},this.deltas={dyTop:0,dyBottom:0,dxLeft:0,dxRight:0},this.widgets={},this.maxSpeed=this.speed,this.maxSpeedDiagonal=Math.sin(45)*this.maxSpeed,this.initializeHealth(o),this.updateMapPosition()}resetMoving(){this.moving.left=!1,this.moving.right=!1,this.moving.up=!1,this.moving.down=!1}resetBlocked(){this.blocked.up=!1,this.blocked.down=!1,this.blocked.left=!1,this.blocked.right=!1}calculateNextCoordinates(){this.nextX=this.x,this.nextY=this.y,this.moving.left&&(this.moving.up||this.moving.down?this.nextX-=this.maxSpeedDiagonal:this.nextX-=this.maxSpeed),this.moving.right&&(this.moving.up||this.moving.down?this.nextX+=this.maxSpeedDiagonal:this.nextX+=this.maxSpeed),this.moving.up&&(this.moving.left||this.moving.right?this.nextY-=this.maxSpeedDiagonal:this.nextY-=this.maxSpeed),this.moving.down&&(this.moving.left||this.moving.right?this.nextY+=this.maxSpeedDiagonal:this.nextY+=this.maxSpeed)}move(){this.moving.left&&!this.blocked.left&&(this.moving.up||this.moving.down?this.x-=Math.round(o.default.elapsedTimeFactor*this.maxSpeedDiagonal):this.x-=Math.round(o.default.elapsedTimeFactor*this.maxSpeed)),this.moving.right&&!this.blocked.right&&(this.moving.up||this.moving.down?this.x+=Math.round(o.default.elapsedTimeFactor*this.maxSpeedDiagonal):this.x+=Math.round(o.default.elapsedTimeFactor*this.maxSpeed)),this.moving.up&&!this.blocked.up&&(this.moving.left||this.moving.right?this.y-=Math.round(o.default.elapsedTimeFactor*this.maxSpeedDiagonal):this.y-=Math.round(o.default.elapsedTimeFactor*this.maxSpeed)),this.moving.down&&!this.blocked.down&&(this.moving.left||this.moving.right?this.y+=Math.round(o.default.elapsedTimeFactor*this.maxSpeedDiagonal):this.y+=Math.round(o.default.elapsedTimeFactor*this.maxSpeed)),this.updateMapPosition()}updateMapPosition(){this.row=Math.floor(this.y/a.TILE_SIZE),this.col=Math.floor(this.x/a.TILE_SIZE)}updateTileDeltas(){this.deltas.dyTop=this.y%a.TILE_SIZE,this.deltas.dyBottom=a.TILE_SIZE-this.deltas.dyTop,this.deltas.dxLeft=this.x%a.TILE_SIZE,this.deltas.dxRight=a.TILE_SIZE-this.deltas.dxLeft}checkIfBlockedByCreature(t,e){if(s.collisionBoxesIntersect(e,t)){let i,a;e.x<t.x?i=e.x+e.collisionBox.halfWidth-(t.x-t.collisionBox.halfWidth):e.x>t.x&&(i=t.x+t.collisionBox.halfWidth-(e.x-e.collisionBox.halfWidth)),e.y<t.y?a=e.y+e.collisionBox.halfHeight-(t.y-t.collisionBox.halfHeight):e.y>t.y&&(a=t.y+t.collisionBox.halfHeight-(e.y-e.collisionBox.halfHeight)),!i||i>=a?e.y<t.y?this.blocked.down=!0:this.blocked.up=!0:(!a||i<a)&&(e.x<t.x?this.blocked.right=!0:this.blocked.left=!0)}}adjustCollisionWithWalls(){let t;if(n.default.walls[this.row]){if(this.moving.left){t=n.default.walls[this.row][this.col-1],t&&this.x-this.collisionBox.halfWidth<=t.mapX+t.width&&(this.x=t.mapX+t.width+this.collisionBox.halfWidth+1);const e=Math.floor((this.y+this.collisionBox.halfHeight-1)/a.TILE_SIZE);e&&e!==this.row&&(t=n.default.walls[e][this.col-1],t&&this.x-this.collisionBox.halfWidth<=t.mapX+t.width&&(this.moving.down&&this.deltas.dyTop<=this.deltas.dxRight||(this.x=t.mapX+t.width+this.collisionBox.halfWidth+1)));const i=Math.floor((this.y-this.collisionBox.halfHeight)/a.TILE_SIZE);i&&i!==this.row&&(t=n.default.walls[i][this.col-1],t&&this.x-this.collisionBox.halfWidth<=t.mapX+t.width&&(this.moving.up&&this.deltas.dyBottom<=this.deltas.dxRight||(this.x=t.mapX+t.width+this.collisionBox.halfWidth+1)))}if(this.moving.right){t=n.default.walls[this.row][this.col+1],t&&this.x+this.collisionBox.halfWidth>=t.mapX&&(this.x=t.mapX-this.collisionBox.halfWidth-1);const e=Math.floor((this.y+this.collisionBox.halfHeight-1)/a.TILE_SIZE);e&&e!==this.row&&(t=n.default.walls[e][this.col+1],t&&this.x+this.collisionBox.halfWidth>=t.mapX&&(this.moving.down&&this.deltas.dyTop<=this.deltas.dxLeft||(this.x=t.mapX-this.collisionBox.halfWidth-1)));const i=Math.floor((this.y-this.collisionBox.halfHeight)/a.TILE_SIZE);e&&i!==this.row&&(t=n.default.walls[i][this.col+1],t&&this.x+this.collisionBox.halfWidth>=t.mapX&&(this.moving.up&&this.deltas.dyBottom<=this.deltas.dxLeft||(this.x=t.mapX-this.collisionBox.halfWidth-1)))}}if(n.default.walls[this.row-1]&&this.moving.up){t=n.default.walls[this.row-1][this.col],t&&this.y-this.collisionBox.halfHeight<=t.mapY+t.height&&(this.y=t.mapY+t.height+this.collisionBox.halfHeight+1);const e=Math.floor((this.x+this.collisionBox.halfWidth-1)/a.TILE_SIZE);e&&e!==this.col&&(t=n.default.walls[this.row-1][e],t&&this.y-this.collisionBox.halfHeight<=t.mapY+t.height&&(this.moving.right&&this.deltas.dyBottom>this.deltas.dxLeft||(this.y=t.mapY+t.height+this.collisionBox.halfHeight+1)));const i=Math.floor((this.x-this.collisionBox.halfWidth)/a.TILE_SIZE);i&&i!==this.col&&(t=n.default.walls[this.row-1][i],t&&this.y-this.collisionBox.halfHeight<=t.mapY+t.height&&(this.moving.left&&this.deltas.dyBottom>this.deltas.dxRight||(this.y=t.mapY+t.height+this.collisionBox.halfHeight+1)))}if(n.default.walls[this.row+1]){this.moving.down&&(t=n.default.walls[this.row+1][this.col],t&&this.y+this.collisionBox.halfHeight>=t.mapY&&(this.y=t.mapY-this.collisionBox.halfHeight-1));const e=Math.floor((this.x+this.collisionBox.halfWidth-1)/a.TILE_SIZE);e&&e!==this.col&&(t=n.default.walls[this.row+1][e],t&&this.y+this.collisionBox.halfHeight>=t.mapY&&(this.moving.right&&this.deltas.dyTop>this.deltas.dxLeft||(this.y=t.mapY-this.collisionBox.halfHeight-1)));const i=Math.floor((this.x-this.collisionBox.halfWidth)/a.TILE_SIZE);i&&i!==this.col&&(t=n.default.walls[this.row+1][i],t&&this.y+this.collisionBox.halfHeight>=t.mapY&&(this.moving.left&&this.deltas.dyTop>this.deltas.dxRight||(this.y=t.mapY-this.collisionBox.halfHeight-1)))}}updatePreviousCoordinates(){this.prevX.push(this.x),this.prevX.length>5&&this.prevX.shift(),this.prevY.push(this.y),this.prevY.length>5&&this.prevY.shift()}updateDirection(){const t=[],e=this.prevX[this.prevX.length-1]-this.prevX[this.prevX.length-2],i=this.prevY[this.prevY.length-1]-this.prevY[this.prevY.length-2];i>0?t.push(l.Directions.S):i<0&&t.push(l.Directions.N),e>0?t.push(l.Directions.E):e<0&&t.push(l.Directions.W);const a=t.join("")||this.direction||"S";this.direction=l.Directions[a]}checkIfMoving(){const t=this.prevX[this.prevX.length-1]===this.prevX[this.prevX.length-2],e=this.prevY[this.prevY.length-1]===this.prevY[this.prevY.length-2];return!t||!e}initializeHealth(t=1){(t<0||t>1)&&(t=1),this.health=this.maxHealth*t}getHealthColor(){return this.health<=.1*this.maxHealth?"#FF5700":this.health<=.2*this.maxHealth?"#FF7B00":this.health<=.3*this.maxHealth?"#FF9E00":this.health<=.4*this.maxHealth?"#FFC100":this.health<=.5*this.maxHealth?"#FFE400":this.health<=.6*this.maxHealth?"#FFF600":this.health<=.7*this.maxHealth?"#E5FF00":this.health<=.8*this.maxHealth?"#D4FF00":this.health<=.9*this.maxHealth?"#B0FF00":this.health<this.maxHealth?"#8DFF00":this.health===this.maxHealth?"#6AFF00":void 0}}},2187:(t,e)=>{var i;Object.defineProperty(e,"__esModule",{value:!0}),function(t){t[t.Idling=0]="Idling",t[t.Moving=1]="Moving",t[t.Attacking=2]="Attacking",t[t.Dying=3]="Dying",t[t.Decaying=4]="Decaying"}(i||(i={})),e.default=i},1597:(t,e,i)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.LevelTimer=void 0;const a=i(5899);class o{static resetToStartingLevel(){o.currentLevel=o.startingLevel,h.reset()}static nextLevel(){o.currentLevel++,h.reset()}static isLastLevel(){return o.currentLevel===o.lastLevel}}e.default=o,o.lastLevel=a.totalNumberOfMaps,o.startingLevel=1,o.currentLevel=o.startingLevel;const s=i(8861),l=i(4811),n=i(7204);class h{static incrementTimeSpentOnCurrentLevel(){h.timeSpentOnCurrentLevel+=n.default.frameElapsedTime}static reset(){h.timeSpentOnCurrentLevel=0}static debug_displayTimeSpentOnCurrentLevel(){l.context.beginPath(),l.context.fillStyle="#9999ff",l.context.font="8px Monospace";const t=Math.round(h.timeSpentOnCurrentLevel/1e3);l.context.fillText(`Level ${o.currentLevel} Time: ${t}`,10,s.CANVAS_HEIGHT-24),l.context.stroke()}}e.LevelTimer=h,h.timeSpentOnCurrentLevel=0},1708:(t,e,i)=>{Object.defineProperty(e,"__esModule",{value:!0});const a=i(8861),o=i(2063),s=i(7204),l=i(8015),n=i(4811),h=i(5035),r=i(6322),d=i(1533),c=i(5735),u=i(2187),f=i(9776),x=i(7843);class y extends f.default{constructor(t,e,i,a){super(t,e,new r.default(14,14),i,a),this.sprite=x.default.Zerg,this.attackSpeed=.45,this.animationLengthAttack=420,this.animationProgressAttack=0,this.animationLengthMove=330,this.animationProgressMove=0}update(t){if(this.state===u.default.Dying)return;if(this.state===u.default.Decaying)return;this.target||(this.target=t),this.resetBlocked(),this.calculateNextCoordinates(),this.updatePreviousCoordinates(),this.stuck=this.checkIfStuck(),this.state!==u.default.Idling&&this.state!==u.default.Attacking&&!1===this.checkIfMoving()&&this.setState(u.default.Idling),this.adjustCollisionWithWalls(),this.checkForCollisionWithPlayer(t),this.checkForCollisionWithOtherEnemies(t),this.distanceFromTarget=h.pointToPointDistance({x:t.x,y:t.y},{x:this.x,y:this.y});const e=this.targetInRange(t);this.state!==u.default.Attacking&&e&&(this.resetAttackCooldown(),this.setState(u.default.Attacking)),this.state===u.default.Attacking&&(e?this.attack(t):this.setState(u.default.Moving)),this.thereAreObstaclesBetweenPlayerAndThisEnemy=d.default.determineIfThereAreObstaclesBetweenTwoPathNodes(this,t),this.state!==u.default.Idling&&this.state!==u.default.Moving||(this.findPathToPlayer(t,this.thereAreObstaclesBetweenPlayerAndThisEnemy),this.state!==u.default.Moving&&(!1===this.thereAreObstaclesBetweenPlayerAndThisEnemy||this.shortestPath.length>0)&&this.setState(u.default.Moving)),this.state===u.default.Moving&&this.move(),this.updateDirection(),this.updateTileDeltas(),super.update(t),o.default.stateManager.getState()===l.default.PLAYING&&this.advanceAnimation()}draw(t){a.DEBUG.ENEMY_COLLISION_BOX&&this.debug_drawCollisionBox(t),a.DEBUG.ENEMY_STATE&&this.debug_drawState(t),a.DEBUG.RAY_TO_PLAYER&&this.debug_drawRayToPlayer(t),a.DEBUG.PATHFINDING_NODES&&c.debug_drawPathNodes(this.pathfindingNodes,t,this.getHealthColor()),a.DEBUG.SHORTEST_PATH_TO_PLAYER&&this.debug_drawShortestPathToPlayer(t),this.sprite.draw(this,{x:t.x,y:t.y}),super.draw(t)}advanceAnimation(){this.state===u.default.Attacking?(this.animationProgressAttack=(this.animationProgressAttack+s.default.elapsedTimeFactor)%this.animationLengthAttack,this.animationSpritePosition=Math.round(this.animationProgressAttack/this.animationLengthAttack*this.sprite.numberOfSpritesInAnimation.attacking)%this.sprite.numberOfSpritesInAnimation.attacking):this.state===u.default.Moving&&(this.animationProgressMove=(this.animationProgressMove+s.default.elapsedTimeFactor)%this.animationLengthMove,this.animationSpritePosition=Math.round(this.animationProgressMove/this.animationLengthMove*this.sprite.numberOfSpritesInAnimation.walking)%this.sprite.numberOfSpritesInAnimation.walking)}findPathToPlayer(t,e){e?(0===this.pathfindingTimer&&(this.pathfindingNodes=c.generatePathNodes(Math.round(Math.abs(t.row+this.row)/2),Math.round(Math.abs(t.col+this.col)/2),this.collisionBox),this.shortestPath=c.findShortestPath(this,t,this.pathfindingNodes)),this.pathfindingTimer+=s.default.elapsedTimeFactor,this.pathfindingTimer>this.pathfindingInterval&&(this.pathfindingTimer=0),this.shortestPath.length>0&&this.followTheShortestPath()):(this.pathfindingNodes&&(this.pathfindingNodes=null),this.shortestPath&&(this.shortestPath=[]),this.moveTowardsPlayer(t))}followTheShortestPath(){let t=this.shortestPath[this.shortestPath.length-1].x,e=this.shortestPath[this.shortestPath.length-1].y;this.shortestPath.length>1&&Math.abs(t-this.x)<3&&Math.abs(e-this.y)<3&&(this.shortestPath.pop(),t=this.shortestPath[this.shortestPath.length-1].x,e=this.shortestPath[this.shortestPath.length-1].y),this.moveTowards(t,e)}moveTowardsPlayer(t){this.distanceFromTarget>this.collisionBox.width?this.moveTowards(t.x,t.y):this.resetMoving()}moveTowards(t,e){this.resetMoving(),this.x<t?this.moving.right=!0:this.x>t&&(this.moving.left=!0),this.y<e?this.moving.down=!0:this.y>e&&(this.moving.up=!0)}debug_drawCollisionBox(t){n.context.strokeStyle=this.getHealthColor(),n.context.lineWidth=.2,n.context.beginPath(),n.context.moveTo(.5+n.default.center.x+(this.x-t.x)-this.collisionBox.halfWidth,.5+n.default.center.y+(this.y-t.y)-this.collisionBox.halfHeight),n.context.lineTo(-.5+n.default.center.x+(this.x-t.x)+this.collisionBox.halfWidth,.5+n.default.center.y+(this.y-t.y)-this.collisionBox.halfHeight),n.context.lineTo(-.5+n.default.center.x+(this.x-t.x)+this.collisionBox.halfWidth,-.5+n.default.center.y+(this.y-t.y)+this.collisionBox.halfHeight),n.context.lineTo(.5+n.default.center.x+(this.x-t.x)-this.collisionBox.halfWidth,-.5+n.default.center.y+(this.y-t.y)+this.collisionBox.halfHeight),n.context.lineTo(.5+n.default.center.x+(this.x-t.x)-this.collisionBox.halfWidth,.5+n.default.center.y+(this.y-t.y)-this.collisionBox.halfHeight),n.context.stroke()}debug_drawState(t){n.context.beginPath(),n.context.fillStyle="#FFC100",n.context.font="8px Monospace",n.context.fillText(this.state.toString(),n.default.center.x+(this.x-t.x)-this.collisionBox.halfWidth,n.default.center.y+(this.y-t.y)-this.collisionBox.halfHeight),n.context.stroke()}debug_drawRayToPlayer(t){this.thereAreObstaclesBetweenPlayerAndThisEnemy?n.context.strokeStyle="#FFFF44":n.context.strokeStyle="#00F0FF",n.context.lineWidth=.5,n.context.beginPath(),n.context.moveTo(n.default.center.x+(this.x-t.x),n.default.center.y+(this.y-t.y)),n.context.lineTo(n.default.center.x,n.default.center.y),n.context.stroke()}debug_drawShortestPathToPlayer(t){this.shortestPath.forEach(((e,i)=>{c.drawNode(e,t,e.visited?"#FF0000":"#FF00FF")})),this.shortestPath.length>0&&this.shortestPath.forEach(((e,i)=>{this.debug_drawRayFromPointToPoint(e,this.shortestPath[i-1]||t,t)}))}debug_drawRayFromPointToPoint(t,e,i){n.context.strokeStyle="#FF00FF",n.context.lineWidth=.2,n.context.beginPath(),n.context.moveTo(n.default.center.x+(e.x-i.x),n.default.center.y+(e.y-i.y)),n.context.lineTo(n.default.center.x+(t.x-i.x),n.default.center.y+(t.y-i.y)),n.context.stroke()}}e.default=y},9776:(t,e,i)=>{Object.defineProperty(e,"__esModule",{value:!0});const a=i(8861),o=i(7204),s=i(1625),l=i(2187),n=i(9239),h=i(5522),r=i(5789);class d extends s.default{constructor(t,e,i,a,o){super(t,e,i,a,o),this.pathfindingTimer=0,this.pathfindingInterval=500,this.shortestPath=[],this.resetAttackCooldown(),this.widgets.damageNumbers=new h.default}draw(t){Object.values(this.widgets).forEach((e=>e.render(t.x,t.y)))}update(t){Object.values(this.widgets).forEach((t=>t.update()))}isOnScreen(t,e){const i=2*a.TILE_SIZE;return Math.abs(this.x-t)<a.CANVAS_WIDTH/2+i&&Math.abs(this.y-e)<a.CANVAS_HEIGHT/2+i}checkForCollisionWithPlayer(t){const e={x:this.nextX,y:this.nextY,collisionBox:this.collisionBox};this.checkIfBlockedByCreature(t,e)}checkForCollisionWithOtherEnemies(t){const e={x:this.nextX,y:this.nextY,collisionBox:this.collisionBox};n.default.getEnemiesOnScreen(this.x,this.y).forEach((t=>{this!==t&&this.checkIfBlockedByCreature(t,e)}))}targetInRange(t){const e=(t.collisionBox.halfWidth+this.collisionBox.halfWidth)*Math.sqrt(2);return this.distanceFromTarget<e}checkIfStuck(){const t=this.prevX.every((t=>t===this.prevX[0])),e=this.prevY.every((t=>t===this.prevY[0]));return!(!t||!e)}attack(t){this.attackCooldown<=0?(this.resetAttackCooldown(),r.default.playSMG(),this.dealDamage(t)):this.attackCooldown-=o.default.frameElapsedTime}resetAttackCooldown(){this.attackCooldown=1e3*this.attackSpeed/a.GAME_SPEED}takeDamage(t){r.default.playEnemyHit(),this.health-=t,this.widgets.damageNumbers.push(h.DamageNumberFactory.create(this.x,this.y,this.collisionBox,t)),this.health<=0?this.die():r.default.playEnemyHit()}die(){r.default.playEnemyDeath(),this.setState(l.default.Decaying)}dealDamage(t){t.takeDamage(this.getDamage())}getDamage(){return 10}setState(t){this.previousState=this.state,this.state=t,this.resetAnimation()}resetAnimation(){this.animationSpritePosition=0,this.animationProgressAttack=0,this.animationProgressMove=0}}e.default=d},9239:(t,e,i)=>{Object.defineProperty(e,"__esModule",{value:!0});const a=i(8861),o=i(1645),s=i(2187),l=i(1708),n=i(4811),h=i(9179),r=i(471),d=i(3445),c=i(5899),u=i(1597);class f{constructor(){const t=c.default(u.default.currentLevel);this.loadMap(t),this.player=new o.default(t.player.x,t.player.y)}static getEnemiesOnScreen(t,e){return f.enemies.filter((i=>i.isOnScreen(t,e)))}static enemiesRemaining(){return f.enemies.length}destroy(){for(;f.enemies.length;)f.enemies.pop()}update(){f.enemies.forEach(((t,e)=>{t.update(this.player),t.state===s.default.Decaying&&(f.enemies.splice(e,1),this.openPortalWhenAllEnemiesAreKilled())}))}openPortalWhenAllEnemiesAreKilled(){!1===f.exitPortal.isOpen&&0===f.enemies.length&&f.exitPortal.open()}draw(){this.drawGameObjects(),f.getEnemiesOnScreen(this.player.x,this.player.y).forEach((t=>t.draw(this.player)))}drawGameObjects(){const t=this.player.deltas.dxLeft-n.default.colRemainder,e=this.player.deltas.dyTop-n.default.rowRemainder,i=this.player.row-n.default.halfRows,o=this.player.col-n.default.halfCols;let s;for(let l=i;l<i+n.default.rows+1;++l)for(let h=o-1;h<o+n.default.cols+1;++h)f.walls[l]&&f.walls[l][h]&&(s=f.walls[l][h],s.x=(h-o)*a.TILE_SIZE-t,s.y=(l-i)*a.TILE_SIZE-e,s.draw()),f.exitPortal.row===l&&f.exitPortal.col===h&&(f.exitPortal.x=(h-o)*a.TILE_SIZE-t,f.exitPortal.y=(l-i)*a.TILE_SIZE-e,f.exitPortal.draw())}loadMap(t){this.loadGameObjects(t),this.loadEnemies(t)}loadGameObjects(t){this.loadWalls(t),this.loadExitPortal(t)}loadWalls(t){for(let e=0;e<t.gameObjects.length;++e){f.walls[e]=[];for(let i=0;i<t.gameObjects[e].length;++i){const a=t.gameObjects[e][i];f.walls[e][i]=null,h.isWall(a)&&(f.walls[e][i]=r.default.createWall(e,i,a))}}}loadExitPortal(t){for(let e=0;e<t.gameObjects.length;++e)for(let i=0;i<t.gameObjects[e].length;++i)t.gameObjects[e][i]===h.default.ExitPortal&&(f.exitPortal=new d.default(e,i))}loadEnemies(t){t.enemies.forEach((t=>{f.enemies.push(new l.default(t.x,t.y,.125,t.healthPercentage))}))}}e.default=f,f.walls=[],f.enemies=[]},9179:(t,e)=>{var i;Object.defineProperty(e,"__esModule",{value:!0}),e.isWall=void 0,function(t){t[t.Empty=0]="Empty",t[t.WallGray=1]="WallGray",t[t.WallGreen=2]="WallGreen",t[t.WallBlue=3]="WallBlue",t[t.ExitPortal=9]="ExitPortal"}(i||(i={})),e.isWall=function(t){return t===i.WallGray||t===i.WallGreen||t===i.WallBlue},e.default=i},5899:(t,e,i)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.totalNumberOfMaps=void 0;const a={Map01:i(8309),Map02:i(649)};e.totalNumberOfMaps=Object.keys(a).length,e.default=function(t){const e=String(t).padStart(2,"0");return a[`Map${e}`]}},6049:(t,e,i)=>{Object.defineProperty(e,"__esModule",{value:!0});const a=i(8861);e.default=class{constructor(t,e,i,o,s,l=!0){this.row=t,this.col=e,this.width=i,this.height=o,this.color=s,this.destructable=l,this.mapX=e*a.TILE_SIZE,this.mapY=t*a.TILE_SIZE}}},3445:(t,e,i)=>{Object.defineProperty(e,"__esModule",{value:!0});const a=i(8861),o=i(4811),s=i(8942);class l extends s.default{constructor(){super(...arguments),this.isOpen=!1}draw(){o.context.fillStyle=this.getColor(),o.context.beginPath(),o.context.rect(this.x,this.y,a.TILE_SIZE,a.TILE_SIZE),o.context.fill()}open(){this.isOpen=!0}getColor(){return this.isOpen?l.openColor:l.closedColor}}e.default=l,l.openColor="rgba(50, 120, 50, 0.2)",l.closedColor="rgba(180, 50, 50, 0.2)"},8942:(t,e)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.default=class{constructor(t,e){this.row=t,this.col=e}}},8785:(t,e,i)=>{Object.defineProperty(e,"__esModule",{value:!0});const a=i(8861),o=i(4811),s=i(5789),l=i(6049);class n extends l.default{draw(){o.context.strokeStyle=this.color,o.context.lineWidth=1,o.context.beginPath(),o.context.moveTo(.5+this.x,.5+this.y),o.context.lineTo(-.5+this.x+a.TILE_SIZE,.5+this.y),o.context.lineTo(-.5+this.x+a.TILE_SIZE,-.5+this.y+a.TILE_SIZE),o.context.lineTo(.5+this.x,-.5+this.y+a.TILE_SIZE),o.context.lineTo(.5+this.x,.5+this.y),o.context.moveTo(.5+this.x,.5+this.y),o.context.lineTo(-.5+this.x+a.TILE_SIZE,-.5+this.y+a.TILE_SIZE),o.context.moveTo(-.5+this.x+a.TILE_SIZE,.5+this.y),o.context.lineTo(.5+this.x,-.5+this.y+a.TILE_SIZE),o.context.stroke()}takeDamage(t){s.default.playWallHit()}}e.default=n},471:(t,e,i)=>{Object.defineProperty(e,"__esModule",{value:!0});const a=i(8861),o=i(8785),s=i(9179);e.default=class{static createWall(t,e,i){switch(i){case s.default.WallGray:return new o.default(t,e,a.TILE_SIZE,a.TILE_SIZE,"#4B4B4B",!1);case s.default.WallGreen:return new o.default(t,e,a.TILE_SIZE,a.TILE_SIZE,"#27531B");case s.default.WallBlue:return new o.default(t,e,a.TILE_SIZE,a.TILE_SIZE,"#572F17");default:throw new Error("No such Wall!")}}}},2144:(t,e,i)=>{Object.defineProperty(e,"__esModule",{value:!0});const a=i(4811);e.default=class{static draw(){const t=a.default.mousePosition.x,e=a.default.mousePosition.y;let i,o;a.context.strokeStyle="#FFFFFF",a.context.lineWidth=.5,a.context.beginPath(),i=.5,o=-1.5,a.context.moveTo(t+i,e+o),o=-3.5,a.context.lineTo(t+i,e+o),o=2.5,a.context.moveTo(t+i,e+o),o=4.5,a.context.lineTo(t+i,e+o),o=.5,i=-3.5,a.context.moveTo(t+i,e+o),i=-1.5,a.context.lineTo(t+i,e+o),i=2.5,a.context.moveTo(t+i,e+o),i=4.5,a.context.lineTo(t+i,e+o),a.context.stroke()}}},1645:(t,e,i)=>{Object.defineProperty(e,"__esModule",{value:!0});const a=i(8861),o=i(3602),s=i(4811),l=i(7204),n=i(1533),h=i(6322),r=i(5035),d=i(1625),c=i(9239),u=i(2144),f=i(4144),x=i(5522),y=i(5789);class E extends d.default{constructor(t,e){super(t,e,new h.default(12,12),.18,1),this.x=t,this.y=e,this.alive=!0,this.rotation=0,this.sightLineLength=10,this.shooting=!1,this.attackSpeed=.1,this.attackCooldown=0,this.projectiles=[],this.keydownHandler=t=>{switch(t.keyCode){case o.KEYBOARD_KEYS.w:this.moving.up=!0;break;case o.KEYBOARD_KEYS.a:this.moving.left=!0;break;case o.KEYBOARD_KEYS.s:this.moving.down=!0;break;case o.KEYBOARD_KEYS.d:this.moving.right=!0}},this.keyupHandler=t=>{switch(t.keyCode){case o.KEYBOARD_KEYS.w:this.moving.up=!1;break;case o.KEYBOARD_KEYS.a:this.moving.left=!1;break;case o.KEYBOARD_KEYS.s:this.moving.down=!1;break;case o.KEYBOARD_KEYS.d:this.moving.right=!1}},a.FEATURES.DAMAGE_NUMBERS_ON_PLAYER&&(this.widgets.damageNumbers=new x.default)}update(){this.resetBlocked(),this.calculateNextCoordinates(),this.checkForCollisionWithEnemies(),this.move(),this.adjustCollisionWithWalls(),this.updateMapPosition(),this.updateTileDeltas(),this.shoot(),this.projectiles.forEach(((t,e)=>{t.update(this.x,this.y),!1===t.alive&&this.projectiles.splice(e,1)})),Object.values(this.widgets).forEach((t=>t.update()))}draw(){const t=this.calculateTheta();this.drawPlayer(t),this.drawPlayerVisionRay(t),a.DEBUG.PLAYER_VISION_RAY_SHOTGUN&&(this.drawPlayerVisionRay(t-.45),this.drawPlayerVisionRay(t-.4),this.drawPlayerVisionRay(t-.35),this.drawPlayerVisionRay(t-.3),this.drawPlayerVisionRay(t-.25),this.drawPlayerVisionRay(t-.2),this.drawPlayerVisionRay(t-.15),this.drawPlayerVisionRay(t-.1),this.drawPlayerVisionRay(t-.05),this.drawPlayerVisionRay(t+.05),this.drawPlayerVisionRay(t+.1),this.drawPlayerVisionRay(t+.15),this.drawPlayerVisionRay(t+.2),this.drawPlayerVisionRay(t+.25),this.drawPlayerVisionRay(t+.3),this.drawPlayerVisionRay(t+.35),this.drawPlayerVisionRay(t+.4),this.drawPlayerVisionRay(t+.45)),u.default.draw(),this.drawProjectiles()}setShooting(t){this.shooting=t}shoot(){if(!1!==this.shooting)if(this.attackCooldown<=0){const t=s.default.mousePosition.x-s.default.center.x,e=s.default.mousePosition.y-s.default.center.y;let i=t/(Math.abs(t)+Math.abs(e)),o=e/(Math.abs(t)+Math.abs(e));if(a.FEATURES.SCATTER_PROJECTILES){const t=.1*Math.random()-.05,e=.1*Math.random()-.05;i+=t,o+=e}this.projectiles.push(new f.default(this.x,this.y,i,o)),this.resetAttackCooldown(),y.default.playSMG()}else this.attackCooldown-=l.default.frameElapsedTime}resetAttackCooldown(){this.attackCooldown=1e3*this.attackSpeed/a.GAME_SPEED}takeDamage(t){this.health=this.health-t,this.widgets.damageNumbers&&this.widgets.damageNumbers.push(x.DamageNumberFactory.create(this.x,this.y,this.collisionBox,t,x.DamageNumberColors.gray)),this.health<=0&&this.die()}calculateTheta(){const t=r.angleBetweenPoints(s.default.mousePosition,s.default.center);return s.context.fillStyle="#44FF44",s.context.fillText(`θ = ${t.toFixed(2)}`,10,56),t}drawPlayer(t){s.context.beginPath(),s.context.fillStyle="#00AA00",s.context.font="10px Monospace",s.context.fillText(`p (${this.x}, ${this.y})`,10,20),s.context.strokeStyle="#523DA5",s.context.lineWidth=2,s.context.moveTo(s.default.center.x,s.default.center.y),s.context.lineTo(s.default.center.x+this.sightLineLength*Math.cos(t),s.default.center.y+this.sightLineLength*Math.sin(t)),s.context.stroke(),a.DEBUG.PLAYER_COLLISION_BOX&&this.debug_drawCollisionBox(),Object.values(this.widgets).forEach((t=>t.render(this.x,this.y)))}debug_drawCollisionBox(){s.context.strokeStyle=this.getHealthColor(),s.context.lineWidth=.5,s.context.beginPath(),s.context.moveTo(-.5+s.default.center.x-this.collisionBox.halfWidth,-.5+s.default.center.y-this.collisionBox.halfHeight),s.context.lineTo(.5+s.default.center.x+this.collisionBox.halfWidth,-.5+s.default.center.y-this.collisionBox.halfHeight),s.context.lineTo(.5+s.default.center.x+this.collisionBox.halfWidth,.5+s.default.center.y+this.collisionBox.halfHeight),s.context.lineTo(-.5+s.default.center.x-this.collisionBox.halfWidth,.5+s.default.center.y+this.collisionBox.halfHeight),s.context.lineTo(-.5+s.default.center.x-this.collisionBox.halfWidth,-.5+s.default.center.y-this.collisionBox.halfHeight),s.context.stroke()}drawPlayerVisionRay(t){const{hitPoint:e,wallHit:i}=n.default.cast(this,t);e&&(i?n.default.drawRay(e,"#FF4444"):n.default.drawRay(e))}drawProjectiles(){this.projectiles.forEach((t=>t.draw(this.x,this.y)))}checkForCollisionWithEnemies(){const t={x:this.nextX,y:this.nextY,collisionBox:this.collisionBox},e=c.default.getEnemiesOnScreen(this.x,this.y);e.some((e=>h.collisionBoxesIntersect(e,t)))&&e.forEach((e=>{this.checkIfBlockedByCreature(e,t)}))}die(){this.alive=!1}}e.default=E},4144:(t,e,i)=>{Object.defineProperty(e,"__esModule",{value:!0});const a=i(8861),o=i(4811),s=i(9239);e.default=class{constructor(t,e,i,a){this.x=t,this.y=e,this.directionX=i,this.directionY=a,this.speed=24,this.damage=10,this.alive=!0,this.numberOfIntermediatePositions=3,this.intermediatePositions=[];for(let t=0;t<this.numberOfIntermediatePositions;++t)this.intermediatePositions[t]={x:null,y:null,row:null,col:null}}update(t,e){this.previousX=this.x,this.previousY=this.y,this.x+=this.directionX*this.speed,this.y+=this.directionY*this.speed,this.row=Math.floor(this.y/a.TILE_SIZE),this.col=Math.floor(this.x/a.TILE_SIZE);const i=this.getNearbyEnemies();this.calculateIntermediatePoints(),this.isOffScreen(t,e)&&(this.alive=!1),this.intermediatePositions.forEach((t=>{this.alive&&(this.checkCollisionWithEnemies(i,t),this.checkCollisionWithWall(t))})),this.alive&&(this.checkCollisionWithEnemies(i),this.checkCollisionWithWall())}draw(t,e){this.x===t&&this.y===e||(o.context.strokeStyle="#8AFCFF",o.context.lineWidth=1,o.context.beginPath(),o.context.arc(this.x+o.default.center.x-t,this.y+o.default.center.y-e,2,0,2*Math.PI),o.context.stroke())}getNearbyEnemies(){return[...s.default.enemies].filter((t=>Math.abs(t.x-this.x)<=a.TILE_SIZE&&Math.abs(t.y-this.y)<=a.TILE_SIZE))}calculateIntermediatePoints(){const t=(this.x-this.previousX)/(this.numberOfIntermediatePositions+1),e=(this.y-this.previousY)/(this.numberOfIntermediatePositions+1);for(let i=this.numberOfIntermediatePositions-1;i>=0;--i)this.intermediatePositions[i].x=this.x-t*(i+1),this.intermediatePositions[i].y=this.y-e*(i+1),this.intermediatePositions[i].row=Math.floor(this.intermediatePositions[i].y/a.TILE_SIZE),this.intermediatePositions[i].col=Math.floor(this.intermediatePositions[i].x/a.TILE_SIZE)}isOffScreen(t,e){return this.x<t-o.default.center.x-a.TILE_SIZE||this.x>t+o.default.center.x+a.TILE_SIZE||this.y<e-o.default.center.y-a.TILE_SIZE||this.y>e+o.default.center.y+a.TILE_SIZE}checkCollisionWithEnemies(t,e){e||(e=this),t.forEach((t=>{e.x>=t.x-t.collisionBox.halfWidth&&e.x<=t.x+t.collisionBox.halfWidth&&e.y>=t.y-t.collisionBox.halfHeight&&e.y<=t.y+t.collisionBox.halfHeight&&(this.alive=!1,t.takeDamage(this.getDamage()))}))}checkCollisionWithWall(t){t||(t=this);const e=s.default.walls[t.row][t.col];e&&(e.takeDamage(this.getDamage()),this.alive=!1,e.destructable&&(s.default.walls[t.row][t.col]=null))}getDamage(){return this.damage}}},5522:(t,e,i)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.DamageNumber=e.DamageNumberFactory=e.DamageNumberColors=void 0;const a=i(8861),o=i(2063),s=i(7204),l=i(8015),n=i(4811);var h;!function(t){t.red="220, 50, 50",t.yellow="180, 180, 50",t.gray="180, 180, 180"}(h=e.DamageNumberColors||(e.DamageNumberColors={})),e.DamageNumberFactory=class{static create(t,e,i,a,o=h.red){return new r(t,e-.9*i.halfHeight,Math.random()*i.height-i.halfHeight,Math.random()*i.width/1.5-i.halfWidth/1.5,a.toString(),o)}};class r{constructor(t,e,i,a,o,s){this.x=t,this.y=e,this.randomFactorX=i,this.randomFactorY=a,this.damage=o,this.color=s,this.animationFinished=!1,this.animationElapsed=0,this.animationLength=800,this.animationCompletionPercentage=0,this.maxHeight=30,this.fontSize=8,this.font=`${this.fontSize}px Monospace`,this.fontWidth=this.fontSize/2,this.damageTextHalfWidth=0,this.damageTextHalfWidth=this.damage.length*this.fontWidth/2}advanceAnimation(){this.animationElapsed+=s.default.elapsedTimeFactor,this.animationCompletionPercentage=this.animationElapsed/this.animationLength,this.animationHasFinished()&&(this.animationFinished=!0)}animationHasFinished(){return this.animationElapsed>=this.animationLength}draw(t,e){n.context.beginPath();const i=1-this.animationCompletionPercentage;n.context.fillStyle=`rgba(${this.color}, ${i})`,n.context.font=this.font,n.context.fillText(`${this.damage}`,this.randomFactorX+(this.x+n.default.center.x-t)-this.damageTextHalfWidth,this.randomFactorY+(this.y+n.default.center.y-e)-this.animationCompletionPercentage*this.maxHeight),n.context.stroke()}}e.DamageNumber=r,e.default=class{constructor(){this.damageNumbers=[]}update(){o.default.stateManager.getState()===l.default.PLAYING&&this.damageNumbers.forEach(((t,e)=>{t.advanceAnimation(),!0===t.animationFinished&&this.damageNumbers.splice(e,1)}))}render(t,e){a.FEATURES.DAMAGE_NUMBERS_SHOW&&this.feature_drawDamageNumbers(t,e)}push(t){this.damageNumbers.push(t)}feature_drawDamageNumbers(t,e){this.damageNumbers.forEach((i=>i.draw(t,e)))}}},400:(t,e,i)=>{Object.defineProperty(e,"__esModule",{value:!0});const a=i(7843);e.default=class{static async load(t){a.default.load(t)}}},7843:(t,e,i)=>{Object.defineProperty(e,"__esModule",{value:!0});const a=i(3945);class o{static async load(t){await o.Zerg.load((()=>t(1)))}}e.default=o,o.Zerg=new a.default},7569:(t,e)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.default=class{load(t){return new Promise(((e,i)=>{this.spriteSheet=new Image,this.spriteSheet.src=this.url,this.spriteSheet.onload=()=>{t(),e()}}))}}},3945:(t,e,i)=>{Object.defineProperty(e,"__esModule",{value:!0});const a=i(4811),o=i(2187),s=i(7569);class l extends s.default{constructor(){super(),this.url="./graphics/spritesheets/zergling.png",this.numberOfSpritesInAnimation={walking:7,attacking:5},this.spriteLocations={N:{col:0,flip:!1},NE:{col:2,flip:!1},E:{col:4,flip:!1},SE:{col:6,flip:!1},S:{col:8,flip:!1},SW:{col:6,flip:!0},W:{col:4,flip:!0},NW:{col:2,flip:!0}},this.spriteSize=32,this.spriteStep={x:this.spriteSize+11,y:this.spriteSize+10}}draw(t,e){const i=this.getSpriteOffsets(t.state,this.spriteStep),a=this.spriteLocations[t.direction];this.drawSprite(t,e,i,a)}getSpriteOffsets(t,e){switch(t){case o.default.Moving:case o.default.Idling:return{x:7,y:5};case o.default.Attacking:return{x:7,y:5+7*e.y}}}drawSprite(t,e,i,o){const{x:s,y:l,collisionBox:n}=t,{x:h,y:r}=e;o.flip&&(a.context.save(),a.context.translate(a.default.center.x+(s-h-n.halfWidth),a.default.center.y+(l-r-n.halfHeight)),a.context.scale(-1,1)),a.context.drawImage(this.spriteSheet,i.x+this.spriteStep.x*o.col,i.y+this.spriteStep.y*Math.floor(t.animationSpritePosition),this.spriteSize,this.spriteSize,o.flip?0-this.spriteSize/2:a.default.center.x+(s-h-n.halfWidth),o.flip?0:a.default.center.y+(l-r-n.halfHeight),t.collisionBox.width+2,t.collisionBox.height+2),o.flip&&a.context.restore()}}e.default=l},4811:(t,e,i)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.context=void 0;const a=i(8861),o=i(4301),s=document.getElementById("canvas");s.width=a.CANVAS_WIDTH,s.height=a.CANVAS_HEIGHT,s.style.width=1!==a.SCALE?a.SCALE*a.CANVAS_WIDTH+"px":"auto",s.style.height=1!==a.SCALE?a.SCALE*a.CANVAS_HEIGHT+"px":"auto",e.context=s.getContext("2d");class l{static clear(){e.context.clearRect(0,0,s.width,s.height)}static updateMousePosition(){this.mousePosition={x:Math.floor((o.default.x-s.offsetLeft)/a.SCALE),y:Math.floor((o.default.y-s.offsetTop)/a.SCALE)}}}e.default=l,l.halfWidth=s.width/2,l.halfHeight=s.height/2,l.rows=Math.floor(s.height/a.TILE_SIZE),l.cols=Math.floor(s.width/a.TILE_SIZE),l.halfRows=Math.floor(s.height/2/a.TILE_SIZE),l.halfCols=Math.floor(s.width/2/a.TILE_SIZE),l.rowRemainder=s.height/2%a.TILE_SIZE,l.colRemainder=s.width/2%a.TILE_SIZE,l.center={x:a.CANVAS_WIDTH/2,y:a.CANVAS_HEIGHT/2},l.getCanvasDomElement=()=>s},6322:(t,e,i)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.collisionBoxesIntersect=void 0;const a=i(8861);e.default=class{constructor(t,e){if(this.width=t,this.height=e,a.THROW_DEVELOPMENT_ERRORS&&(t%2!=0||e%2!=0))throw new Error("Always use even numbers for collision box dimensions!");this.halfWidth=this.width/2,this.halfHeight=this.height/2}},e.collisionBoxesIntersect=function(t,e){return t.x-t.collisionBox.halfWidth<e.x+e.collisionBox.halfWidth&&t.x+t.collisionBox.halfWidth>e.x-e.collisionBox.halfWidth&&t.y-t.collisionBox.halfHeight<e.y+e.collisionBox.halfHeight&&t.y+t.collisionBox.halfHeight>e.y-e.collisionBox.halfHeight}},2422:(t,e)=>{var i;Object.defineProperty(e,"__esModule",{value:!0}),e.Directions=void 0,(i=e.Directions||(e.Directions={})).N="N",i.NE="NE",i.E="E",i.SE="SE",i.S="S",i.SW="SW",i.W="W",i.NW="NW"},9829:(t,e,i)=>{Object.defineProperty(e,"__esModule",{value:!0});const a=i(8861),o=i(4811),s=[0,0,0,0,0,0,0,0,0,0,0];let l;e.default=class{static restart(){for(let t=0;t<s.length;++t)s[t]=0}static calculateFrameRate(t,e){t?(s.unshift(1e3/e),s.pop(),l=s.reduce(((t,e)=>t+e),0)/s.length):l=0}static debug_drawFPS(){o.context.beginPath(),o.context.fillStyle="#FFC100",o.context.font="8px Monospace",o.context.fillText(`FPS: ${l&&l.toFixed(2)||"unknown"}`,10,a.CANVAS_HEIGHT-10),o.context.stroke()}}},1201:(t,e)=>{var i;Object.defineProperty(e,"__esModule",{value:!0}),function(t){t[t.Graphics=0]="Graphics",t[t.Audio=1]="Audio"}(i||(i={})),e.default=i},7204:(t,e,i)=>{Object.defineProperty(e,"__esModule",{value:!0});const a=i(8861);class o{static setFrameElapsedTime(t){o.frameElapsedTime=t,o.elapsedTimeFactor=a.GAME_SPEED*o.frameElapsedTime}}e.default=o,o.ONE_SECOND=1e3,o.previousTimestamp=0,o.frameElapsedTime=0},5735:(t,e,i)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.PathNode=e.findShortestPath=e.drawNode=e.debug_drawPathNodes=e.generatePathNodes=void 0;const a=i(8861),o=i(5035),s=i(6322),l=i(4811),n=i(9239);function h(t,e,i){l.context.strokeStyle=i,l.context.lineWidth=.1,l.context.beginPath(),l.context.moveTo(.5+l.default.center.x+(t.x-e.x)-t.collisionBox.halfWidth,.5+l.default.center.y+(t.y-e.y)-t.collisionBox.halfHeight),l.context.lineTo(-.5+l.default.center.x+(t.x-e.x)+t.collisionBox.halfWidth,.5+l.default.center.y+(t.y-e.y)-t.collisionBox.halfHeight),l.context.lineTo(-.5+l.default.center.x+(t.x-e.x)+t.collisionBox.halfWidth,-.5+l.default.center.y+(t.y-e.y)+t.collisionBox.halfHeight),l.context.lineTo(.5+l.default.center.x+(t.x-e.x)-t.collisionBox.halfWidth,-.5+l.default.center.y+(t.y-e.y)+t.collisionBox.halfHeight),l.context.lineTo(.5+l.default.center.x+(t.x-e.x)-t.collisionBox.halfWidth,.5+l.default.center.y+(t.y-e.y)-t.collisionBox.halfHeight),l.context.stroke(),l.context.beginPath(),l.context.arc(l.default.center.x+(t.x-e.x),l.default.center.y+(t.y-e.y),1,0,2*Math.PI),l.context.stroke()}e.generatePathNodes=function(t,e,i){const o=[];let s=t-l.default.halfRows-3,h=e-l.default.halfCols-2;const d=t+l.default.halfRows+3,c=e+l.default.halfCols+2;s<0&&(s=0),h<0&&(h=0);for(let t=s;t<d;++t)for(let e=h-1;e<c;++e)n.default.walls[t]&&n.default.walls[t][e]||e>0&&t>0&&o.push(new r({x:e*a.TILE_SIZE+a.TILE_SIZE/2,y:t*a.TILE_SIZE+a.TILE_SIZE/2},i));return o},e.debug_drawPathNodes=function(t,e,i){t&&t.forEach((t=>h(t,e,i)))},e.drawNode=h,e.findShortestPath=function(t,e,i){const a=new r(e,e.collisionBox),s=new r(t,t.collisionBox);i.push(a),s.f=0,s.g=s.heuristic(a);const l=[s];let h;for(;l.length>0||h===a;){for(l.sort(((t,e)=>t.g-e.g));l.length>0&&!0===l[0].visited;)l.shift();if(l.length<=0)break;h=l.shift(),h.visited=!0,h.neighbourNodes=[...i].filter((t=>!(!(t.col===h.col&&t.row===h.row||t.col===h.col&&t.row===h.row-1||t.col===h.col+1&&t.row===h.row||t.col===h.col&&t.row===h.row+1||t.col===h.col-1&&t.row===h.row)&&(t.col!==h.col-1||t.row!==h.row-1||n.default.walls[t.row]&&null!==n.default.walls[t.row][t.col+1]&&n.default.walls[t.row+1]&&null!==n.default.walls[t.row+1][t.col])&&(t.col!==h.col+1||t.row!==h.row-1||n.default.walls[t.row]&&null!==n.default.walls[t.row][t.col-1]&&n.default.walls[t.row+1]&&null!==n.default.walls[t.row+1][t.col])&&(t.col!==h.col+1||t.row!==h.row+1||n.default.walls[t.row]&&null!==n.default.walls[t.row][t.col-1]&&n.default.walls[t.row-1]&&null!==n.default.walls[t.row-1][t.col])&&(t.col!==h.col-1||t.row!==h.row+1||n.default.walls[t.row]&&null!==n.default.walls[t.row][t.col+1]&&n.default.walls[t.row-1]&&null!==n.default.walls[t.row-1][t.col])))),h.neighbourNodes.map((t=>{!1===t.visited&&l.push(t);const e=h.f+o.pointToPointDistance(h,t);return e<t.f&&(t.parent=h,t.f=e,t.g=t.f+t.heuristic(a)),t}))}const d=[];if(a.parent){let t=a;for(;t.parent;)d.push(t),t=t.parent}return d};class r{constructor(t,e){this.deltas={dyTop:0,dyBottom:0,dxLeft:0,dxRight:0},this.visited=!1,this.g=1/0,this.f=1/0,this.parent=null,this.x=t.x,this.y=t.y,this.collisionBox=new s.default(e.width,e.height),this.updateTileDeltas(),this.updateMapPosition()}heuristic(t){return o.pointToPointDistance(this,t)}updateTileDeltas(){this.deltas.dyTop=this.y%a.TILE_SIZE,this.deltas.dyBottom=a.TILE_SIZE-this.deltas.dyTop,this.deltas.dxLeft=this.x%a.TILE_SIZE,this.deltas.dxRight=a.TILE_SIZE-this.deltas.dxLeft}updateMapPosition(){this.row=Math.floor(this.y/a.TILE_SIZE),this.col=Math.floor(this.x/a.TILE_SIZE)}}e.PathNode=r},1533:(t,e,i)=>{Object.defineProperty(e,"__esModule",{value:!0});const a=i(8861),o=i(5035),s=i(9239),l=i(4811);class n{static cast(t,e,i){if(!(e>=0)){const a=t.deltas.dyTop/Math.tan(-e),o=1/a>0;return a>=0&&o?n.getInterceptPointNE(t,e,i):n.getInterceptPointNW(t,e,i)}{const a=t.deltas.dyBottom/Math.tan(e);if(a>=0)return n.getInterceptPointSE(t,e,i);if(a<0)return n.getInterceptPointSW(t,e,i)}}static drawRay(t,e="#4444FF"){l.context.strokeStyle=e,l.context.lineWidth=.5,l.context.beginPath(),l.context.moveTo(l.default.halfWidth,l.default.halfHeight),l.context.lineTo(l.default.halfWidth+t.x,l.default.halfHeight+t.y),l.context.stroke(),l.context.lineWidth=1}static determineIfThereAreObstaclesBetweenTwoPoints(t,e){const i=o.angleBetweenPoints(e,t),a=n.cast(t,i,e);return!a||null!==a.wallHit}static determineIfThereAreObstaclesBetweenTwoPathNodes(t,e){const i=+o.angleBetweenPoints(e,t).toFixed(2);if(0===i){const[i,a]=p(t,e);if(n.determineIfThereAreObstaclesBetweenTwoPoints(i,a))return!0;const[o,s]=w(t,e);return!!n.determineIfThereAreObstaclesBetweenTwoPoints(o,s)}if(i>0&&i<Math.PI/2){const[i,a]=p(t,e);if(n.determineIfThereAreObstaclesBetweenTwoPoints(i,a))return!0;const[o,s]=m(t,e);return!!n.determineIfThereAreObstaclesBetweenTwoPoints(o,s)}if(i===Math.PI/2){const[i,a]=w(t,e);if(n.determineIfThereAreObstaclesBetweenTwoPoints(i,a))return!0;const[o,s]=m(t,e);return!!n.determineIfThereAreObstaclesBetweenTwoPoints(o,s)}if(i>Math.PI/2&&i<Math.PI){const[i,a]=g(t,e);if(n.determineIfThereAreObstaclesBetweenTwoPoints(i,a))return!0;const[o,s]=w(t,e);return!!n.determineIfThereAreObstaclesBetweenTwoPoints(o,s)}if(3.14===Math.abs(i)){const[i,a]=g(t,e);if(n.determineIfThereAreObstaclesBetweenTwoPoints(i,a))return!0;const[o,s]=m(t,e);return!!n.determineIfThereAreObstaclesBetweenTwoPoints(o,s)}if(i>-Math.PI&&i<-Math.PI/2){const[i,a]=p(t,e);if(n.determineIfThereAreObstaclesBetweenTwoPoints(i,a))return!0;const[o,s]=m(t,e);return!!n.determineIfThereAreObstaclesBetweenTwoPoints(o,s)}if(-1.57===i){const[i,a]=p(t,e);if(n.determineIfThereAreObstaclesBetweenTwoPoints(i,a))return!0;const[o,s]=g(t,e);return!!n.determineIfThereAreObstaclesBetweenTwoPoints(o,s)}if(i>-Math.PI/2&&i<0){const[i,a]=g(t,e);if(n.determineIfThereAreObstaclesBetweenTwoPoints(i,a))return!0;const[o,s]=w(t,e);return!!n.determineIfThereAreObstaclesBetweenTwoPoints(o,s)}}static getInterceptPointSE(t,e,i){let o,s,h=null,r=null,d=0;for(;s=d*a.TILE_SIZE,o=0===e?0:(t.deltas.dxRight+s)*Math.tan(e),!(s+t.deltas.dxRight>n.rangeHorizontal||o>n.rangeVertical||i&&(s+t.deltas.dxRight>i.x-t.x||o>i.y-t.y));){if(a.DEBUG.RAYCASTER){let e;e=i?{x:l.default.center.x-(i.x-t.x)+t.deltas.dxRight+s,y:l.default.center.y-(i.y-t.y)+o}:{x:l.default.center.x+t.deltas.dxRight+s,y:l.default.center.y+o},l.context.strokeStyle="#4444FF",l.context.beginPath(),l.context.arc(e.x,e.y,2,0,2*Math.PI),l.context.stroke()}if(r=n.checkWallCollisionVerticalSE(d,t,o),r){h={x:s+t.deltas.dxRight,y:o};break}++d}let c,u,f=null,x=null,y=0;for(;u=y*a.TILE_SIZE,!(0===e||(c=(t.deltas.dyBottom+u)/Math.tan(e),u+t.deltas.dyBottom>n.rangeVertical||c>n.rangeHorizontal)||i&&(u+t.deltas.dyBottom>i.y-t.y||Math.round(c)>i.x-t.x));){if(a.DEBUG.RAYCASTER){let e;e=i?{x:l.default.center.x-(i.x-t.x)+c,y:l.default.center.y-(i.y-t.y)+t.deltas.dyBottom+u}:{x:l.default.center.x+c,y:l.default.center.y+t.deltas.dyBottom+u},l.context.strokeStyle="#44FF44",l.context.beginPath(),l.context.arc(e.x,e.y,2,0,2*Math.PI),l.context.stroke()}if(o<u)break;if(x=n.checkWallCollisionHorizontalSE(y,t,c),x){f={x:c,y:u+t.deltas.dyBottom};break}++y}if(h&&null===f)return{hitPoint:h,wallHit:r};if(f&&null===h)return{hitPoint:f,wallHit:x};if(f&&h)return Math.sqrt(Math.pow(h.x,2)+Math.pow(h.y,2))>Math.sqrt(Math.pow(f.x,2)+Math.pow(f.y,2))?{hitPoint:f,wallHit:x}:{hitPoint:h,wallHit:r};if(null===f&&null===h){const e={x:c,y:u+t.deltas.dyBottom},i={x:s+t.deltas.dxRight,y:o};return Math.sqrt(Math.pow(i.x,2)+Math.pow(i.y,2))>Math.sqrt(Math.pow(e.x,2)+Math.pow(e.y,2))?{hitPoint:e,wallHit:x}:{hitPoint:i,wallHit:r}}}static getInterceptPointNE(t,e,i){let o,s,h=null,r=null,d=0;for(;s=d*a.TILE_SIZE,o=0===e?0:(t.deltas.dxRight+s)*Math.tan(-e),!(s+t.deltas.dxRight>n.rangeHorizontal||o>n.rangeVertical||i&&(s+t.deltas.dxRight>i.x-t.x||o>t.y-i.y));){if(a.DEBUG.RAYCASTER){let e;e=i?{x:l.default.center.x-(i.x-t.x)+t.deltas.dxRight+s,y:l.default.center.y-(i.y-t.y)-o}:{x:l.default.center.x+t.deltas.dxRight+s,y:l.default.center.y-o},l.context.strokeStyle="#4444FF",l.context.beginPath(),l.context.arc(e.x,e.y,2,0,2*Math.PI),l.context.stroke()}if(r=n.checkWallCollisionVerticalNE(d,t,o),r){h={x:s+t.deltas.dxRight,y:-o};break}++d}let c,u,f=null,x=null,y=0;for(;u=y*a.TILE_SIZE,!(0===e||(c=(t.deltas.dyTop+u)/Math.tan(-e),u+t.deltas.dyTop>n.rangeVertical||c>n.rangeHorizontal)||i&&(u+t.deltas.dyTop>t.y-i.y||Math.round(c)>i.x-t.x));){if(a.DEBUG.RAYCASTER){let e;e=i?{x:l.default.center.x-(i.x-t.x)+c,y:l.default.center.y-(i.y-t.y)-t.deltas.dyTop-u}:{x:l.default.center.x+c,y:l.default.center.y-u-t.deltas.dyTop},l.context.strokeStyle="#44FF44",l.context.beginPath(),l.context.arc(e.x,e.y,2,0,2*Math.PI),l.context.stroke()}if(o<u)break;if(x=n.checkWallCollisionHorizontalNE(y,t,c),x){f={x:c,y:-u-t.deltas.dyTop};break}++y}if(h&&null===f)return{hitPoint:h,wallHit:r};if(f&&null===h)return{hitPoint:f,wallHit:x};if(f&&h)return Math.sqrt(Math.pow(h.x,2)+Math.pow(h.y,2))>Math.sqrt(Math.pow(f.x,2)+Math.pow(f.y,2))?{hitPoint:f,wallHit:x}:{hitPoint:h,wallHit:r};if(null===f&&null===h){const e={x:c,y:-u-t.deltas.dyTop},i={x:s+t.deltas.dxRight,y:-o};return Math.sqrt(Math.pow(i.x,2)+Math.pow(i.y,2))>Math.sqrt(Math.pow(e.x,2)+Math.pow(e.y,2))?{hitPoint:e,wallHit:x}:{hitPoint:i,wallHit:r}}}static getInterceptPointNW(t,e,i){let o,s,h=null,r=null,d=0;for(;s=d*a.TILE_SIZE,o=0===e?0:(t.deltas.dxLeft+s)*Math.tan(Math.PI- -e),!(s+t.deltas.dxLeft>n.rangeHorizontal||o>n.rangeVertical||i&&(s+t.deltas.dxLeft>t.x-i.x||o>t.y-i.y));){if(a.DEBUG.RAYCASTER){let e;e=i?{x:l.default.center.x-(i.x-t.x)-t.deltas.dxLeft-s,y:l.default.center.y-(i.y-t.y)-o}:{x:l.default.center.x-t.deltas.dxLeft-s,y:l.default.center.y-o},l.context.strokeStyle="#4444FF",l.context.beginPath(),l.context.arc(e.x,e.y,2,0,2*Math.PI),l.context.stroke()}if(r=n.checkWallCollisionVerticalNW(d,t,o),r){h={x:-s-t.deltas.dxLeft,y:-o};break}++d}let c,u,f=null,x=null,y=0;for(;u=y*a.TILE_SIZE,!(0===e||(c=(t.deltas.dyTop+u)/Math.tan(Math.PI- -e),u+t.deltas.dyTop>n.rangeVertical||c>n.rangeHorizontal)||i&&(u+t.deltas.dyTop>t.y-i.y||Math.round(c)>t.x-i.x));){if(a.DEBUG.RAYCASTER){let e;e=i?{x:l.default.center.x-(i.x-t.x)-c,y:l.default.center.y-(i.y-t.y)-t.deltas.dyTop-u}:{x:l.default.center.x-c,y:l.default.center.y-t.deltas.dyTop-u},l.context.strokeStyle="#44FF44",l.context.beginPath(),l.context.arc(e.x,e.y,2,0,2*Math.PI),l.context.stroke()}if(o<u)break;if(x=n.checkWallCollisionHorizontalNW(y,t,c),x){f={x:-c,y:-u-t.deltas.dyTop};break}++y}if(h&&null===f)return{hitPoint:h,wallHit:r};if(f&&null===h)return{hitPoint:f,wallHit:x};if(f&&h)return Math.sqrt(Math.pow(h.x,2)+Math.pow(h.y,2))>Math.sqrt(Math.pow(f.x,2)+Math.pow(f.y,2))?{hitPoint:f,wallHit:x}:{hitPoint:h,wallHit:r};if(null===f&&null===h){const e={x:-c,y:-u-t.deltas.dyTop},i={x:-s-t.deltas.dxLeft,y:-o};return Math.sqrt(Math.pow(i.x,2)+Math.pow(i.y,2))>Math.sqrt(Math.pow(e.x,2)+Math.pow(e.y,2))?{hitPoint:e,wallHit:x}:{hitPoint:i,wallHit:r}}}static getInterceptPointSW(t,e,i){let o,s,h=null,r=null,d=0;for(;s=d*a.TILE_SIZE,o=0===e?0:(t.deltas.dxLeft+s)*Math.tan(Math.PI-e),!(s+t.deltas.dxLeft>n.rangeHorizontal||o>n.rangeVertical||i&&(s+t.deltas.dxLeft>t.x-i.x||o>i.y-t.y));){if(a.DEBUG.RAYCASTER){let e;e=i?{x:l.default.center.x-(i.x-t.x)-t.deltas.dxLeft-s,y:l.default.center.y-(i.y-t.y)+o}:{x:l.default.center.x-t.deltas.dxLeft-s,y:l.default.center.y+o},l.context.strokeStyle="#4444FF",l.context.beginPath(),l.context.arc(e.x,e.y,2,0,2*Math.PI),l.context.stroke()}if(r=n.checkWallCollisionVerticalSW(d,t,o),r){h={x:-s-t.deltas.dxLeft,y:o};break}++d}let c,u,f=null,x=null,y=0;for(;u=y*a.TILE_SIZE,!(0===e||(c=(t.deltas.dyBottom+u)/Math.tan(e),u+t.deltas.dyBottom>n.rangeVertical||-c>n.rangeHorizontal)||i&&(u+t.deltas.dyBottom>i.y-t.y||-c>t.x-i.x));){if(a.DEBUG.RAYCASTER){let e;e=i?{x:l.default.center.x-(i.x-t.x)+c,y:l.default.center.y-(i.y-t.y)+t.deltas.dyBottom+u}:{x:l.default.center.x+c,y:l.default.center.y+t.deltas.dyBottom+u},l.context.strokeStyle="#44FF44",l.context.beginPath(),l.context.arc(e.x,e.y,2,0,2*Math.PI),l.context.stroke()}if(o<u)break;if(x=n.checkWallCollisionHorizontalSW(y,t,c),x){f={x:c,y:u+t.deltas.dyBottom};break}++y}if(h&&null===f)return{hitPoint:h,wallHit:r};if(f&&null===h)return{hitPoint:f,wallHit:x};if(f&&h)return Math.sqrt(Math.pow(h.x,2)+Math.pow(h.y,2))>Math.sqrt(Math.pow(f.x,2)+Math.pow(f.y,2))?{hitPoint:f,wallHit:x}:{hitPoint:h,wallHit:r};if(null===f&&null===h){const e={x:c,y:u+t.deltas.dyBottom},i={x:-s-t.deltas.dxLeft,y:o};return Math.sqrt(Math.pow(i.x,2)+Math.pow(i.y,2))>Math.sqrt(Math.pow(e.x,2)+Math.pow(e.y,2))?{hitPoint:e,wallHit:x}:{hitPoint:i,wallHit:r}}}static checkWallCollisionVerticalSE(t,e,i){const o=1+e.col+t,n=e.row+Math.floor((e.deltas.dyTop+i)/a.TILE_SIZE),h=e.row+Math.floor((e.deltas.dyTop+i-1)/a.TILE_SIZE);let r=null;return s.default.walls[n]&&(s.default.walls[n][o]?r=s.default.walls[n][o]:s.default.walls[h][o]&&(r=s.default.walls[h][o])),a.DEBUG.RAYCASTER&&l.context.fillText(`col: ${o}, row: ${n}, hit: ${r?[r.row,r.col]:null}`,10,112+12*t),r}static checkWallCollisionHorizontalSE(t,e,i){const o=e.col+Math.floor((e.deltas.dxLeft+i)/a.TILE_SIZE),n=e.row+t+1;let h=null;return s.default.walls[n]&&s.default.walls[n][o]&&(h=s.default.walls[n][o]),a.DEBUG.RAYCASTER&&l.context.fillText(`col: ${o}, row: ${n}, hit: ${h?[h.row,h.col]:null}`,10,212+12*t),h}static checkWallCollisionVerticalNE(t,e,i){const o=1+e.col+t,n=e.row+Math.floor((e.deltas.dyTop-i)/a.TILE_SIZE);let h=null;return s.default.walls[n]&&s.default.walls[n][o]&&(h=s.default.walls[n][o]),a.DEBUG.RAYCASTER&&l.context.fillText(`col: ${o}, row: ${n}, hit: ${h?[h.row,h.col]:null}`,10,112+12*t),h}static checkWallCollisionHorizontalNE(t,e,i){const o=e.col+Math.floor((e.deltas.dxLeft+i)/a.TILE_SIZE),n=e.col+Math.floor((e.deltas.dxLeft+i-1)/a.TILE_SIZE),h=e.row-t-1;let r=null;return s.default.walls[h]&&(s.default.walls[h][o]?r=s.default.walls[h][o]:s.default.walls[h][n]&&(r=s.default.walls[h][n])),a.DEBUG.RAYCASTER&&l.context.fillText(`col: ${o}, row: ${h}, hit: ${r?[r.row,r.col]:null}`,10,212+12*t),r}static checkWallCollisionVerticalNW(t,e,i){const o=-1+e.col-t,n=e.row+Math.floor((e.deltas.dyTop-i)/a.TILE_SIZE);let h=null;return s.default.walls[n]&&s.default.walls[n][o]&&(h=s.default.walls[n][o]),a.DEBUG.RAYCASTER&&l.context.fillText(`col: ${o}, row: ${n}, hit: ${h?[h.row,h.col]:null}`,10,112+12*t),h}static checkWallCollisionHorizontalNW(t,e,i){const o=e.col-Math.floor((e.deltas.dxRight+i)/a.TILE_SIZE),n=e.row-t-1;let h=null;return s.default.walls[n]&&s.default.walls[n][o]&&(h=s.default.walls[n][o]),a.DEBUG.RAYCASTER&&l.context.fillText(`col: ${o}, row: ${n}, hit: ${h?[h.row,h.col]:null}`,10,212+12*t),h}static checkWallCollisionVerticalSW(t,e,i){const o=e.col-t-1,n=e.row+Math.floor((e.deltas.dyTop+i)/a.TILE_SIZE),h=e.row+Math.floor((e.deltas.dyTop+i-1)/a.TILE_SIZE);let r=null;return s.default.walls[n]&&(s.default.walls[n][o]?r=s.default.walls[n][o]:s.default.walls[h][o]&&(r=s.default.walls[h][o])),a.DEBUG.RAYCASTER&&l.context.fillText(`col: ${o}, row: ${n}, hit: ${r?[r.row,r.col]:null}`,10,112+12*t),r}static checkWallCollisionHorizontalSW(t,e,i){const o=e.col-Math.floor((e.deltas.dxRight-i)/a.TILE_SIZE),n=e.row+t+1;let h=null;return s.default.walls[n]&&s.default.walls[n][o]&&(h=s.default.walls[n][o]),a.DEBUG.RAYCASTER&&l.context.fillText(`col: ${o}, row: ${n}, hit: ${h?[h.row,h.col]:null}`,10,212+12*t),h}}e.default=n,n.outsideOfScreenOffset=2*a.TILE_SIZE,n.rangeHorizontal=l.default.halfWidth+n.outsideOfScreenOffset,n.rangeVertical=l.default.halfHeight+2*n.outsideOfScreenOffset;const h={x:0,y:0,deltas:{dyTop:0,dyBottom:0,dxLeft:0,dxRight:0}},r={...h,deltas:{...h.deltas}},d={...h,deltas:{...h.deltas}},c={...h,deltas:{...h.deltas}},u={...h,deltas:{...h.deltas}},f={...h,deltas:{...h.deltas}},x={...h,deltas:{...h.deltas}},y={...h,deltas:{...h.deltas}},E={...h,deltas:{...h.deltas}};function g(t,e){return r.x=t.x-t.collisionBox.halfWidth,r.y=t.y-t.collisionBox.halfHeight,r.row=Math.floor(r.y/a.TILE_SIZE),r.col=Math.floor(r.x/a.TILE_SIZE),r.deltas.dyTop=r.y%a.TILE_SIZE,r.deltas.dyBottom=a.TILE_SIZE-r.deltas.dyTop,r.deltas.dxLeft=r.x%a.TILE_SIZE,r.deltas.dxRight=a.TILE_SIZE-r.deltas.dxLeft,d.x=e.x-e.collisionBox.halfWidth,d.y=e.y-e.collisionBox.halfHeight,d.row=Math.floor(d.y/a.TILE_SIZE),d.col=Math.floor(d.x/a.TILE_SIZE),d.deltas.dyTop=d.y%a.TILE_SIZE,d.deltas.dyBottom=a.TILE_SIZE-d.deltas.dyTop,d.deltas.dxLeft=d.x%a.TILE_SIZE,d.deltas.dxRight=a.TILE_SIZE-d.deltas.dxLeft,[r,d]}function p(t,e){return c.x=t.x+t.collisionBox.halfWidth,c.y=t.y-t.collisionBox.halfHeight,c.row=Math.floor(c.y/a.TILE_SIZE),c.col=Math.floor(c.x/a.TILE_SIZE),c.deltas.dyTop=c.y%a.TILE_SIZE,c.deltas.dyBottom=a.TILE_SIZE-c.deltas.dyTop,c.deltas.dxLeft=c.x%a.TILE_SIZE,c.deltas.dxRight=a.TILE_SIZE-c.deltas.dxLeft,u.x=e.x+e.collisionBox.halfWidth,u.y=e.y-e.collisionBox.halfHeight,u.row=Math.floor(u.y/a.TILE_SIZE),u.col=Math.floor(u.x/a.TILE_SIZE),u.deltas.dyTop=u.y%a.TILE_SIZE,u.deltas.dyBottom=a.TILE_SIZE-u.deltas.dyTop,u.deltas.dxLeft=u.x%a.TILE_SIZE,u.deltas.dxRight=a.TILE_SIZE-u.deltas.dxLeft,[c,u]}function m(t,e){return f.x=t.x-t.collisionBox.halfWidth,f.y=t.y+t.collisionBox.halfHeight,f.row=Math.floor(f.y/a.TILE_SIZE),f.col=Math.floor(f.x/a.TILE_SIZE),f.deltas.dyTop=f.y%a.TILE_SIZE,f.deltas.dyBottom=a.TILE_SIZE-f.deltas.dyTop,f.deltas.dxLeft=f.x%a.TILE_SIZE,f.deltas.dxRight=a.TILE_SIZE-f.deltas.dxLeft,x.x=e.x-e.collisionBox.halfWidth,x.y=e.y+e.collisionBox.halfHeight,x.row=Math.floor(x.y/a.TILE_SIZE),x.col=Math.floor(x.x/a.TILE_SIZE),x.deltas.dyTop=x.y%a.TILE_SIZE,x.deltas.dyBottom=a.TILE_SIZE-x.deltas.dyTop,x.deltas.dxLeft=x.x%a.TILE_SIZE,x.deltas.dxRight=a.TILE_SIZE-x.deltas.dxLeft,[f,x]}function w(t,e){return y.x=t.x+t.collisionBox.halfWidth,y.y=t.y+t.collisionBox.halfHeight,y.row=Math.floor(y.y/a.TILE_SIZE),y.col=Math.floor(y.x/a.TILE_SIZE),y.deltas.dyTop=y.y%a.TILE_SIZE,y.deltas.dyBottom=a.TILE_SIZE-y.deltas.dyTop,y.deltas.dxLeft=y.x%a.TILE_SIZE,f.deltas.dxRight=a.TILE_SIZE-y.deltas.dxLeft,E.x=e.x+e.collisionBox.halfWidth,E.y=e.y+e.collisionBox.halfHeight,E.row=Math.floor(E.y/a.TILE_SIZE),E.col=Math.floor(E.x/a.TILE_SIZE),E.deltas.dyTop=E.y%a.TILE_SIZE,E.deltas.dyBottom=a.TILE_SIZE-E.deltas.dyTop,E.deltas.dxLeft=E.x%a.TILE_SIZE,x.deltas.dxRight=a.TILE_SIZE-E.deltas.dxLeft,[y,E]}},2063:(t,e,i)=>{Object.defineProperty(e,"__esModule",{value:!0});const a=i(8861),o=i(3549),s=i(400),l=i(4811),n=i(8015),h=i(4897),r=i(1201),d=i(7204),c=i(9829);class u{constructor(){window.onfocus=()=>{c.default.restart()},u.loadedPercentages.set(r.default.Graphics,{weight:.3,loaded:0}),u.loadedPercentages.set(r.default.Audio,{weight:.7,loaded:0}),o.default.load((t=>this.gameAssetLoaded(r.default.Audio,t))),s.default.load((t=>this.gameAssetLoaded(r.default.Graphics,t)))}start(){const t=setInterval((()=>{u.loaded&&(clearInterval(t),u.stateManager.setState(n.default.MAIN_MENU))}),250);this.gameLoop(0)}gameAssetLoaded(t,e){const i=u.loadedPercentages.get(t);i.loaded=e,u.loadedPercentages.set(t,i),u.loadedPercentage=0;for(const[t,e]of u.loadedPercentages)u.loadedPercentage+=e.loaded*e.weight;1===u.loadedPercentage&&(u.loaded=!0)}gameLoop(t){void 0===d.default.previousTimestamp&&(d.default.previousTimestamp=t),d.default.setFrameElapsedTime(t-d.default.previousTimestamp),this.update(),this.render(),c.default.calculateFrameRate(d.default.previousTimestamp,d.default.frameElapsedTime),d.default.previousTimestamp=t,window.requestAnimationFrame((t=>this.gameLoop(t)))}update(){u.stateManager.update()}render(){l.default.clear(),u.stateManager.render(),a.DEBUG.FPS&&c.default.debug_drawFPS()}}e.default=u,u.loaded=!1,u.loadedPercentage=0,u.loadedPercentages=new Map,u.stateManager=new h.default},4137:(t,e,i)=>{Object.defineProperty(e,"__esModule",{value:!0});const a=i(8861),o=i(3602),s=i(2063),l=i(4811),n=i(8015);e.default=class{constructor(){this.handleEnterPress=t=>{t.keyCode===o.KEYBOARD_KEYS.ENTER&&s.default.stateManager.setState(n.default.MAIN_MENU)}}enter(){window.addEventListener("keydown",this.handleEnterPress)}exit(){window.removeEventListener("keydown",this.handleEnterPress)}update(){}render(){this.drawGameOverScreen()}drawGameOverScreen(){l.context.beginPath(),l.context.fillStyle="#dd0000",l.context.font="32px Monospace",l.context.fillText("YOU DIED!",a.CANVAS_WIDTH/2-80,a.CANVAS_HEIGHT/2+10),l.context.stroke()}}},2406:(t,e,i)=>{Object.defineProperty(e,"__esModule",{value:!0});const a=i(8861),o=i(3602),s=i(2063),l=i(4811),n=i(8015),h=i(1597);e.default=class{constructor(){this.handleEnterPress=t=>{t.keyCode===o.KEYBOARD_KEYS.ENTER&&(h.default.isLastLevel()?(h.default.resetToStartingLevel(),s.default.stateManager.setState(n.default.VICTORY)):(h.default.nextLevel(),s.default.stateManager.setState(n.default.PLAYING)))}}enter(){window.addEventListener("keydown",this.handleEnterPress)}exit(){window.removeEventListener("keydown",this.handleEnterPress)}update(){}render(){this.drawLevelClearedStatistics()}drawLevelClearedStatistics(){l.context.beginPath(),l.context.fillStyle="#5555ff",l.context.font="22px Monospace",l.context.fillText(`Level ${h.default.currentLevel} Cleared!`,a.CANVAS_WIDTH/2-100,a.CANVAS_HEIGHT/2),l.context.font="16px Monospace",l.context.fillStyle="#9999ff",l.context.fillText(`Time: ${Math.round(h.LevelTimer.timeSpentOnCurrentLevel/1e3)} seconds`,a.CANVAS_WIDTH/2-100,a.CANVAS_HEIGHT/2+30),l.context.stroke()}}},745:(t,e,i)=>{Object.defineProperty(e,"__esModule",{value:!0});const a=i(8861),o=i(2063),s=i(4811);e.default=class{enter(){}exit(){}update(){}render(){this.drawLoadingDialog()}drawLoadingDialog(){s.context.beginPath(),s.context.fillStyle="#FFC100",s.context.font="20px Monospace",s.context.fillText(`Loading: ${100*o.default.loadedPercentage}%`,a.CANVAS_WIDTH/2-70,a.CANVAS_HEIGHT/2-10),s.context.stroke()}}},7265:(t,e,i)=>{Object.defineProperty(e,"__esModule",{value:!0});const a=i(8861),o=i(3602),s=i(2063),l=i(7204),n=i(4811),h=i(8015);e.default=class{constructor(){this.animationProgress=0,this.animationLength=l.default.ONE_SECOND,this.instructionsVisible=!0,this.handleMenuSelection=t=>{t.keyCode===o.KEYBOARD_KEYS.ENTER&&s.default.stateManager.setState(h.default.PLAYING)}}enter(){window.addEventListener("keydown",this.handleMenuSelection)}exit(){window.removeEventListener("keydown",this.handleMenuSelection)}update(){this.animationProgress=(this.animationProgress+l.default.frameElapsedTime)%this.animationLength,this.animationProgress>=this.animationLength/2?this.instructionsVisible=!1:this.instructionsVisible=!0}render(){this.drawMainMenu()}drawMainMenu(){n.context.beginPath(),n.context.fillStyle="#FFC100",n.context.font="12px Monospace",n.context.fillText("Retro 2D Top-Down Game Engine",a.CANVAS_WIDTH/2-106,a.CANVAS_HEIGHT/2-34),this.instructionsVisible&&(n.context.font="20px Monospace",n.context.fillText("Press Enter to start",a.CANVAS_WIDTH/2-118,a.CANVAS_HEIGHT/2+10)),n.context.stroke()}}},4897:(t,e,i)=>{Object.defineProperty(e,"__esModule",{value:!0});const a=i(8015);e.default=class{constructor(){this.currentState=a.default.LOADING}getState(){return this.currentState}setState(t){this.currentState.exit(t);const e=this.currentState;return t.enter(e),this.currentState=t,this.currentState}update(){this.currentState.update()}render(){this.currentState.render()}}},8839:(t,e,i)=>{Object.defineProperty(e,"__esModule",{value:!0});const a=i(8861),o=i(3602),s=i(4811),l=i(2063),n=i(8015);e.default=class{constructor(){this.pauseHandler=t=>{switch(t.keyCode){case o.KEYBOARD_KEYS.ESC:t.preventDefault(),n.default.PLAYING.destroyGame(),l.default.stateManager.setState(n.default.MAIN_MENU);break;case o.KEYBOARD_KEYS.p:l.default.stateManager.setState(n.default.PLAYING)}}}enter(){window.addEventListener("keydown",this.pauseHandler)}exit(){window.removeEventListener("keydown",this.pauseHandler)}update(){}render(){n.default.PLAYING.render(),this.drawPauseMenu()}drawPauseMenu(){s.context.beginPath(),s.context.fillStyle="#FFC100",s.context.font="20px Monospace",s.context.fillText("Paused",a.CANVAS_WIDTH/2-36,a.CANVAS_HEIGHT/2-54),s.context.font="12px Monospace",s.context.fillText("  p - Resume",a.CANVAS_WIDTH/2-50,a.CANVAS_HEIGHT/2-34),s.context.fillText("ESC - Main Menu",a.CANVAS_WIDTH/2-50,a.CANVAS_HEIGHT/2-18),s.context.stroke()}}},9936:(t,e,i)=>{Object.defineProperty(e,"__esModule",{value:!0});const a=i(8861),o=i(8015),s=i(2063),l=i(4811),n=i(5729),h=i(3602),r=i(4301),d=i(7311),c=i(9239),u=i(1597);e.default=class{constructor(){this.playerSetShootingTrue=t=>{this.player.setShooting(!0)},this.playerSetShootingFalse=t=>{this.player.setShooting(!1)},this.pauseHandler=t=>{switch(t.keyCode){case h.KEYBOARD_KEYS.ESC:case h.KEYBOARD_KEYS.p:t.preventDefault(),s.default.stateManager.setState(o.default.PAUSED)}}}enter(t){t!==o.default.PAUSED&&this.startNewGame(),this.setupOwnEventListeners()}setupOwnEventListeners(){window.onblur=()=>{s.default.stateManager.setState(o.default.PAUSED)},window.addEventListener("keydown",this.pauseHandler)}exit(t){this.clearOwnEventListeners(),t!==o.default.PAUSED&&this.destroyGame()}clearOwnEventListeners(){window.onblur=null,window.removeEventListener("keydown",this.pauseHandler)}update(){this.player.alive?(l.default.updateMousePosition(),d.default.update(this.player),this.player.update(),this.map.update(),this.checkForLevelClearedCondition(),u.LevelTimer.incrementTimeSpentOnCurrentLevel()):(u.default.resetToStartingLevel(),s.default.stateManager.setState(o.default.GAME_OVER))}render(){this.map.draw(),this.player.draw(),a.DEBUG.SHOW_LEVEL_TIME&&u.LevelTimer.debug_displayTimeSpentOnCurrentLevel()}startNewGame(){this.map=new c.default,this.player=this.map.player,n.default.addListenerKeydown(this.player.keydownHandler),n.default.addListenerKeyup(this.player.keyupHandler),r.default.init(this.playerSetShootingTrue,this.playerSetShootingFalse)}checkForLevelClearedCondition(){0===c.default.enemiesRemaining()&&this.checkIfPlayerIsInsideExitPortal()&&s.default.stateManager.setState(o.default.LEVEL_CLEARED)}checkIfPlayerIsInsideExitPortal(){return this.player.row===c.default.exitPortal.row&&this.player.col===c.default.exitPortal.col}destroyGame(){n.default.removeKeydownAndKeyupListeners(this.player.keydownHandler),r.default.removeMouseLeftClickListeners(this.playerSetShootingTrue,this.playerSetShootingFalse),this.map.destroy(),this.map=null,this.player=null}}},9525:(t,e,i)=>{Object.defineProperty(e,"__esModule",{value:!0});const a=i(8861),o=i(3602),s=i(2063),l=i(4811),n=i(8015);e.default=class{constructor(){this.handleEnterPress=t=>{t.keyCode===o.KEYBOARD_KEYS.ENTER&&s.default.stateManager.setState(n.default.MAIN_MENU)}}enter(){window.addEventListener("keydown",this.handleEnterPress)}exit(){window.removeEventListener("keydown",this.handleEnterPress)}update(){}render(){this.drawVictoryScreen()}drawVictoryScreen(){l.context.beginPath(),l.context.fillStyle="#00dd00",l.context.font="32px Monospace",l.context.fillText("VICTORY!",a.CANVAS_WIDTH/2-80,a.CANVAS_HEIGHT/2+10),l.context.stroke()}}},8015:(t,e,i)=>{Object.defineProperty(e,"__esModule",{value:!0});const a=i(745),o=i(7265),s=i(9936),l=i(2406),n=i(8839),h=i(4137),r=i(9525),d={LOADING:new a.default,MAIN_MENU:new o.default,PLAYING:new s.default,LEVEL_CLEARED:new l.default,PAUSED:new n.default,GAME_OVER:new h.default,VICTORY:new r.default};e.default=d},5035:(t,e,i)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.updatePointDeltas=e.updatePointRowAndColValues=e.angleBetweenPoints=e.pointToPointDistance=void 0;const a=i(8861);e.pointToPointDistance=function(t,e){return Math.sqrt((e.x-t.x)*(e.x-t.x)+(e.y-t.y)*(e.y-t.y))},e.angleBetweenPoints=function(t,e){return Math.atan2(t.y-e.y,t.x-e.x)},e.updatePointRowAndColValues=function(t){t.row=Math.floor(t.y/a.TILE_SIZE),t.col=Math.floor(t.x/a.TILE_SIZE)},e.updatePointDeltas=function(t){t.deltas.dyTop=t.y%a.TILE_SIZE,t.deltas.dyBottom=a.TILE_SIZE-t.deltas.dyTop,t.deltas.dxLeft=t.x%a.TILE_SIZE,t.deltas.dxRight=a.TILE_SIZE-t.deltas.dxLeft}},7311:(t,e,i)=>{Object.defineProperty(e,"__esModule",{value:!0});const a=i(4301);class o{static update(t){const e=navigator.getGamepads();e[0]&&(this.handleMovement(e[0],t),this.handleAiming(e[0]),this.handleButtons(e[0],t))}static handleMovement(t,e){const i=+t.axes[0].toFixed(2);i>0?e.moving.right=!0:i<0?e.moving.left=!0:(e.moving.left=!1,e.moving.right=!1);const a=+t.axes[1].toFixed(2);a>0?e.moving.down=!0:a<0?e.moving.up=!0:(e.moving.up=!1,e.moving.down=!1)}static handleAiming(t){const e=t.axes[2],i=t.axes[3];0!=+e.toFixed(2)&&(a.default.x+=e*this.aimModifier),0!=+i.toFixed(2)&&(a.default.y+=i*this.aimModifier)}static handleButtons(t,e){t.buttons[5].pressed?e.setShooting(!0):e.setShooting(!1)}}e.default=o,o.aimModifier=10},5729:(t,e)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.default=class{static addListenerKeydown(t){document.addEventListener("keydown",t)}static addListenerKeyup(t){document.addEventListener("keyup",t)}static removeKeydownAndKeyupListeners(t){document.removeEventListener("keyup",t),document.removeEventListener("keydown",t)}}},4301:(t,e,i)=>{Object.defineProperty(e,"__esModule",{value:!0});const a=i(4811);class o{static init(t,e){this.hijackRightClick(),this.trackMouseOnCanvas(),this.listenForLeftClicks(t,e)}static hijackRightClick(){window.addEventListener("contextmenu",(t=>{t.preventDefault()}),!1)}static trackMouseOnCanvas(){a.default.getCanvasDomElement().addEventListener("mousemove",(t=>{this.x=t.pageX,this.y=t.pageY}),!1)}static listenForLeftClicks(t,e){const i=a.default.getCanvasDomElement();i.addEventListener("mousedown",t,!1),i.addEventListener("mouseup",e,!1)}static removeMouseLeftClickListeners(t,e){const i=a.default.getCanvasDomElement();i.removeEventListener("mousedown",t),i.removeEventListener("mouseup",e)}}e.default=o,o.x=window.innerWidth/2+100,o.y=window.innerHeight/2+50},3602:(t,e)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.KEYBOARD_KEYS=void 0,e.KEYBOARD_KEYS={ENTER:13,ESC:27,w:87,a:65,s:83,d:68,p:80}},8861:t=>{t.exports=JSON.parse('{"CANVAS_WIDTH":480,"CANVAS_HEIGHT":320,"TILE_SIZE":32,"SCALE":2,"GAME_SPEED":1,"DEBUG":{"FPS":true,"SHOW_LEVEL_TIME":true,"RAYCASTER":false,"RAY_TO_PLAYER":false,"PATHFINDING_NODES":false,"SHORTEST_PATH_TO_PLAYER":false,"PLAYER_COLLISION_BOX":true,"PLAYER_VISION_RAY_SHOTGUN":false,"ENEMY_COLLISION_BOX":true,"ENEMY_STATE":true},"FEATURES":{"SCATTER_PROJECTILES":true,"DAMAGE_NUMBERS_SHOW":true,"DAMAGE_NUMBERS_ON_PLAYER":true},"THROW_DEVELOPMENT_ERRORS":true}')},8309:t=>{t.exports=JSON.parse('{"player":{"x":128,"y":64},"gameObjects":[[1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0],[1,0,0,0,0,0,0,2,0,0,1,1,1,1,1,1,0,0,0,0,0,0,0,0],[1,0,0,0,0,0,0,2,0,0,1,0,0,0,0,1,0,0,0,0,0,0,0,0],[1,0,3,3,3,0,0,3,0,0,2,0,0,0,0,1,1,1,1,1,1,0,0,0],[1,0,0,3,0,0,0,0,3,0,1,0,2,3,0,2,0,0,0,0,1,0,0,0],[1,0,0,0,0,0,0,0,3,0,1,0,2,2,0,2,0,0,2,2,1,0,0,0],[1,0,0,0,0,3,3,0,1,1,1,0,0,0,0,1,0,0,0,0,1,1,1,1],[1,0,0,0,3,3,3,0,1,0,0,0,0,0,0,1,0,0,0,0,2,3,9,1],[1,0,1,0,3,3,0,0,1,0,0,0,0,1,0,1,0,0,0,0,2,3,3,1],[1,0,0,0,0,0,0,0,2,0,0,0,0,0,0,1,0,0,0,0,2,2,2,1],[1,0,0,0,0,0,0,0,2,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1],[1,1,1,1,1,1,1,1,1,0,0,0,1,1,1,1,1,1,2,2,2,1,1,1],[0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0],[0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,3,3,3,0,0,0,1,0,0],[0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,3,3,3,0,1,1,1,0,0],[0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0],[0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0]],"enemies":[{"x":286,"y":88,"healthPercentage":1},{"x":368,"y":90,"healthPercentage":0.5},{"x":368,"y":112,"healthPercentage":0.5},{"x":620,"y":240,"healthPercentage":0.8},{"x":558,"y":216,"healthPercentage":0.3},{"x":540,"y":220,"healthPercentage":0.3},{"x":466,"y":120,"healthPercentage":1},{"x":608,"y":230,"healthPercentage":0.8},{"x":568,"y":226,"healthPercentage":0.3},{"x":540,"y":230,"healthPercentage":0.3},{"x":436,"y":98,"healthPercentage":1},{"x":360,"y":128,"healthPercentage":0.5},{"x":608,"y":246,"healthPercentage":0.8},{"x":548,"y":230,"healthPercentage":0.3},{"x":520,"y":230,"healthPercentage":0.3},{"x":320,"y":500,"healthPercentage":0.3},{"x":336,"y":500,"healthPercentage":0.3},{"x":352,"y":500,"healthPercentage":0.3},{"x":320,"y":484,"healthPercentage":0.3},{"x":336,"y":484,"healthPercentage":0.3},{"x":352,"y":484,"healthPercentage":0.3},{"x":420,"y":500,"healthPercentage":0.3},{"x":436,"y":500,"healthPercentage":0.3},{"x":452,"y":500,"healthPercentage":0.3},{"x":420,"y":484,"healthPercentage":0.3},{"x":436,"y":484,"healthPercentage":0.3},{"x":452,"y":484,"healthPercentage":0.3},{"x":422,"y":404,"healthPercentage":0.3},{"x":438,"y":404,"healthPercentage":0.3},{"x":454,"y":404,"healthPercentage":0.3},{"x":422,"y":420,"healthPercentage":0.3},{"x":438,"y":420,"healthPercentage":0.3},{"x":454,"y":420,"healthPercentage":0.3}]}')},649:t=>{t.exports=JSON.parse('{"player":{"x":50,"y":275},"gameObjects":[[1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0],[1,0,0,0,0,0,0,1,0,0,1,1,1,1,1,1,0,0,0,0,0,0,0,0],[1,0,1,1,0,0,0,1,0,0,1,0,0,0,0,1,0,0,0,0,0,0,0,0],[1,0,1,1,0,0,1,1,0,0,2,0,0,0,0,1,1,1,1,1,1,0,0,0],[1,0,2,2,0,0,1,0,0,0,1,0,2,3,0,2,0,0,0,0,1,0,0,0],[1,0,0,0,0,0,1,3,1,0,1,0,2,2,0,2,0,0,2,2,1,0,0,0],[1,0,0,0,0,0,0,2,1,1,1,0,0,0,0,1,0,0,0,0,1,1,1,1],[1,1,1,1,1,1,0,2,1,0,0,0,0,0,0,1,0,0,0,0,2,3,9,1],[1,0,1,3,3,1,0,0,1,0,0,0,0,1,0,1,0,0,0,0,2,3,3,1],[1,0,1,2,2,1,0,0,2,0,0,0,0,0,0,1,0,0,0,0,2,2,2,1],[1,0,0,0,0,0,0,0,2,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1],[1,0,1,2,2,1,0,0,1,0,0,0,1,1,1,1,1,1,2,2,2,1,1,1],[1,0,1,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0],[1,0,1,0,0,1,0,0,1,0,0,0,0,0,0,3,3,3,0,0,0,1,0,0],[1,0,1,1,1,1,0,0,1,0,0,0,0,0,0,3,3,3,0,1,1,1,0,0],[1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0],[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0]],"enemies":[{"x":286,"y":88,"healthPercentage":1}]}')}},e={};(new(function i(a){var o=e[a];if(void 0!==o)return o.exports;var s=e[a]={exports:{}};return t[a](s,s.exports,i),s.exports}(2063).default)).start()})();
//# sourceMappingURL=app.js.map